var Yt=Object.defineProperty;var zt=(h,i,N)=>i in h?Yt(h,i,{enumerable:!0,configurable:!0,writable:!0,value:N}):h[i]=N;var o=(h,i,N)=>(zt(h,typeof i!="symbol"?i+"":i,N),N);(function(h,i){typeof exports=="object"&&typeof module!="undefined"?i(exports,require("three"),require("three/examples/jsm/postprocessing/EffectComposer"),require("three/examples/jsm/postprocessing/RenderPass"),require("three/examples/jsm/postprocessing/Pass.js"),require("three/examples/jsm/libs/stats.module"),require("three/examples/jsm/controls/OrbitControls"),require("three/examples/jsm/controls/TransformControls")):typeof define=="function"&&define.amd?define(["exports","three","three/examples/jsm/postprocessing/EffectComposer","three/examples/jsm/postprocessing/RenderPass","three/examples/jsm/postprocessing/Pass.js","three/examples/jsm/libs/stats.module","three/examples/jsm/controls/OrbitControls","three/examples/jsm/controls/TransformControls"],i):(h=typeof globalThis!="undefined"?globalThis:h||self,i(h.Vis={},h.three,h.EffectComposer,h.RenderPass,h.Pass_js,h.Stats,h.OrbitControls,h.TransformControls))})(this,function(h,i,N,Fe,ge,Ie,Ve,Ue){"use strict";function je(c){return c&&typeof c=="object"&&"default"in c?c:{default:c}}var He=je(Ie);const Me=()=>new i.LineBasicMaterial({color:"rgb(255, 255, 255)"});class ve extends i.LineSegments{constructor(e){super();o(this,"sphere");o(this,"target");o(this,"shape");o(this,"type","VisPointLightHelper");o(this,"cachaColor");o(this,"cachaDistance");this.geometry=new i.BufferGeometry;const t=[-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1,0,0,1,-.707,-.707,0,.707,.707,0,.707,-.707,0,-.707,.707,0,0,-.707,-.707,0,.707,.707,0,.707,-.707,0,-.707,.707,-.707,0,-.707,.707,0,.707,.707,0,-.707,-.707,0,.707];this.geometry.setAttribute("position",new i.Float32BufferAttribute(t,3)),this.material=Me(),this.geometry.boundingSphere;const s=new i.Color().copy(e.color).multiplyScalar(e.intensity),r=new i.Mesh(new i.OctahedronBufferGeometry(e.distance,0),new i.MeshBasicMaterial({color:s,wireframe:!0}));r.raycast=()=>{},this.shape=r,this.target=e,this.sphere=new i.Sphere(new i.Vector3(0,0,0),1),this.cachaColor=e.color.getHex(),this.cachaDistance=e.distance,this.add(this.shape),this.matrixAutoUpdate=!1,this.matrix=e.matrix,this.onBeforeRender=()=>{const a=this.target,n=this.shape,l=this;a.distance!==this.cachaDistance&&(n.geometry.dispose(),n.geometry=new i.OctahedronBufferGeometry(a.distance,0),this.cachaDistance=a.distance),a.color.getHex()!==this.cachaColor&&(n.material.color.copy(a.color).multiplyScalar(a.intensity),l.material.color.copy(a.color).multiplyScalar(a.intensity),this.cachaColor=a.color.getHex())}}raycast(e,t){const s=this.matrixWorld,r=this.sphere;if(r.applyMatrix4(s),e.ray.intersectsSphere(r)){const a=this.target;t.push({distance:e.ray.origin.distanceTo(a.position),object:a,point:a.position})}}}class ae extends i.LineSegments{constructor(e){super();o(this,"box");o(this,"shape");o(this,"target");o(this,"type","CameraHelper");o(this,"cachaData");const t=new i.BufferGeometry,s=[0,0,0,-1,1,-1,0,0,0,-1,1,1,0,0,0,-1,-1,-1,0,0,0,-1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,1,1,-1,1,1,-1,-1,1,0,0,0,0,1,1,0,0,0,0,1,-1,0,0,0,0,-1,-1,0,0,0,0,-1,1,0,1,1,0,1,-1,0,1,-1,0,-1,-1,0,-1,-1,0,-1,1,0,-1,1,0,1,1,0,-1,1,2,-1,1,0,1,-1,2,1,-1,0,-1,-1,2,-1,-1,0,1,1,2,1,1,2,1,1,2,-1,1,2,-1,1,2,-1,-1,2,-1,-1,2,1,-1,2,1,-1,2,1,1];t.setAttribute("position",new i.Float32BufferAttribute(s,3)),t.rotateY(-90*Math.PI/180),t.computeBoundingBox();const r=new i.CameraHelper(e);r.matrix=new i.Matrix4,r.matrixAutoUpdate=!0,r.raycast=()=>{},this.add(r),this.shape=r,this.box=t.boundingBox,this.geometry=t,this.material=Me(),this.target=e,this.matrixAutoUpdate=!1,this.matrix=e.matrix,e instanceof i.PerspectiveCamera?this.cachaData={fov:e.fov,aspect:e.aspect,near:e.near,far:e.far}:e instanceof i.OrthographicCamera?this.cachaData={left:e.left,right:e.right,top:e.top,bottom:e.bottom,near:e.near,far:e.far}:this.cachaData={},this.onBeforeRender=()=>{let a=!1;const n=this.cachaData;Object.keys(n).forEach(l=>{n[l]!==e[l]&&(n[l]=e[l],a=!0)}),a&&this.shape.update()}}raycast(e,t){const s=this.matrixWorld,r=this.box;if(r.applyMatrix4(s),e.ray.intersectsBox(r)){const a=this.target;t.push({distance:e.ray.origin.distanceTo(a.position),object:a,point:a.position})}}}const Y=class{constructor(e){o(this,"map");o(this,"scene");this.map=new Map,this.scene=e}add(e){if(!Y.filterHelperMap[e.type])if(Y.typeHelperMap[e.type]){const t=new Y.typeHelperMap[e.type](e);this.map.set(e,t),this.scene._add(t)}else console.warn(`Scene helper compiler can not support this type object: '${e.type}'`)}remove(e){if(!Y.filterHelperMap[e.type])if(this.map.has(e)){const t=this.map.get(e);this.scene._remove(t),t.geometry.dispose(),t.material&&(t.material instanceof i.Material?t.material.dispose():t.material.forEach(s=>{s.dispose()})),this.map.delete(e)}else console.warn(`Scene helper compiler can not found this object\`s helper: ${e}`)}setVisiable(e){const t=this.scene;e?this.map.forEach((s,r)=>{t._add(r)}):this.map.forEach((s,r)=>{t._remove(r)})}};let ee=Y;o(ee,"typeHelperMap",{PointLight:ve,PerspectiveCamera:ae,OrthographicCamera:ae}),o(ee,"filterHelperMap",{AmbientLight:!0});var ye;(function(c){c.DefaultPerspectiveCamera="DefaultPerspectiveCamera",c.DefaultOrthograpbicCamera="DefaultOrthograpbicCamera"})(ye||(ye={}));var x;(function(c){c.DEFAULT="default",c.TOP="top",c.BOTTOM="bottom",c.LEFT="left",c.RIGHT="right",c.FRONT="front",c.BACK="back"})(x||(x={}));var ne;(function(c){c[c.GEOMETRY=0]="GEOMETRY",c[c.MATERIAL=1]="MATERIAL",c[c.LIGHT=2]="LIGHT",c[c.ENV=3]="ENV"})(ne||(ne={})),i.Scene.prototype.add=function(...c){if(!arguments.length)return this;if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}const e=c[0];if(e===this)return console.error("THREE.Object3D.add: object can't be added as a child of itself.",c),this;if(e&&e.isObject3D){if(e.parent!==null){const t=this.children.indexOf(e);t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent({type:"removed"}))}e.parent=this,this.children.push(e),e.dispatchEvent({type:"added"})}else console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",c);return this};class Ne extends i.Scene{constructor(e){super();o(this,"cameraSet");o(this,"lightSet");o(this,"meshSet");o(this,"lineSet");o(this,"pointsSet");o(this,"spriteSet");o(this,"helperCompiler");o(this,"displayMode");o(this,"meshOverrideMaterial");o(this,"lineOverrideMaterial");o(this,"pointsOverrideMaterial");o(this,"spriteOverrideMaterial");o(this,"materialCacheMap");o(this,"defaultAmbientLight");o(this,"defaultDirectionalLight");o(this,"backgroundCache");o(this,"environmentCache");o(this,"defaultPerspectiveCamera");o(this,"defaultOrthograpbicCamera");o(this,"axesHelper");o(this,"gridHelper");o(this,"showAxesHelper");o(this,"showGridHelper");o(this,"getDefaultPerspectiveCamera");o(this,"getDefaultOrthographicCamera");o(this,"setAxesHelper");o(this,"setGridHelper");o(this,"setDispalyMode");if(this.cameraSet=new Set,this.lightSet=new Set,this.meshSet=new Set,this.lineSet=new Set,this.pointsSet=new Set,this.spriteSet=new Set,this.helperCompiler=new ee(this),e.hasDefaultPerspectiveCamera&&(e.defaultPerspectiveCameraSetting?this.defaultPerspectiveCamera=new i.PerspectiveCamera(e.defaultPerspectiveCameraSetting.fov,e.defaultPerspectiveCameraSetting.aspect,e.defaultPerspectiveCameraSetting.near,e.defaultPerspectiveCameraSetting.far):this.defaultPerspectiveCamera=new i.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,1e3),this.defaultPerspectiveCamera.position.set(30,30,30),this.defaultPerspectiveCamera.name="\u9ED8\u8BA4\u900F\u89C6\u76F8\u673A",this.cameraSet.add(this.defaultPerspectiveCamera),this.getDefaultPerspectiveCamera=function(){return this.defaultPerspectiveCamera}),e.hasDefaultOrthographicCamera){if(e.defaultOrthographicCameraSetting){const t=e.defaultOrthographicCameraSetting;this.defaultOrthograpbicCamera=new i.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far)}else{const t=window.innerWidth/2,s=window.innerHeight/2;this.defaultOrthograpbicCamera=new i.OrthographicCamera(-t/8,t/8,s/8,-s/8,1,1e3)}this.defaultOrthograpbicCamera.name="\u9ED8\u8BA4\u6B63\u4EA4\u76F8\u673A",this.cameraSet.add(this.defaultOrthograpbicCamera),this.getDefaultOrthographicCamera=function(){return this.defaultOrthograpbicCamera},this.addEventListener(`${x.TOP}ViewPoint`,t=>{this.defaultOrthograpbicCamera.position.set(0,100,0)}),this.addEventListener(`${x.BOTTOM}ViewPoint`,t=>{this.defaultOrthograpbicCamera.position.set(0,-100,0)}),this.addEventListener(`${x.RIGHT}ViewPoint`,t=>{this.defaultOrthograpbicCamera.position.set(100,0,0)}),this.addEventListener(`${x.LEFT}ViewPoint`,t=>{this.defaultOrthograpbicCamera.position.set(-100,0,0)}),this.addEventListener(`${x.FRONT}ViewPoint`,t=>{this.defaultOrthograpbicCamera.position.set(0,0,100)}),this.addEventListener(`${x.BACK}ViewPoint`,t=>{this.defaultOrthograpbicCamera.position.set(0,0,-100)})}if(e.hasAxesHelper&&(this.axesHelper=new i.AxesHelper(500),this.axesHelper.matrixAutoUpdate=!1,this.axesHelper.raycast=()=>{},super.add(this.axesHelper),this.setAxesHelper=function(t){const s=this.axesHelper;if(t.size){const r=s.geometry.getAttribute("position");r.setX(t.size,1),r.setY(t.size,3),r.setZ(t.size,5),r.needsUpdate=!0}typeof t.visiable!==void 0&&(s.visible=t.visiable)},this.showAxesHelper=t=>{t?super.add(this.axesHelper):super.remove(this.axesHelper)}),e.hasGridHelper){const t=new i.GridHelper(500,50,"rgb(130, 130, 130)","rgb(70, 70, 70)");if(t.material instanceof i.Material){const s=t.material;s.transparent=!0,s.opacity=.5,s.needsUpdate=!0}t.matrixAutoUpdate=!1,t.raycast=()=>{},this.gridHelper=t,super.add(t),this.addEventListener(`${x.DEFAULT}ViewPoint`,s=>{t.rotation.set(0,0,0),t.updateMatrix(),t.updateMatrixWorld()}),this.addEventListener(`${x.TOP}ViewPoint`,s=>{t.rotation.set(0,0,0),t.updateMatrix(),t.updateMatrixWorld()}),this.addEventListener(`${x.BOTTOM}ViewPoint`,s=>{t.rotation.set(0,0,0),t.updateMatrix(),t.updateMatrixWorld()}),this.addEventListener(`${x.RIGHT}ViewPoint`,s=>{t.rotation.set(0,0,Math.PI/2),t.updateMatrix(),t.updateMatrixWorld()}),this.addEventListener(`${x.LEFT}ViewPoint`,s=>{t.rotation.set(0,0,Math.PI/2),t.updateMatrix(),t.updateMatrixWorld()}),this.addEventListener(`${x.FRONT}ViewPoint`,s=>{t.rotation.set(Math.PI/2,0,0),t.updateMatrix(),t.updateMatrixWorld()}),this.addEventListener(`${x.BACK}ViewPoint`,s=>{t.rotation.set(Math.PI/2,0,0),t.updateMatrix(),t.updateMatrixWorld()}),this.showGridHelper=s=>{s?super.add(this.gridHelper):super.remove(this.gridHelper)}}if(e.hasDisplayMode){const t="rgb(250, 250, 250)";this.meshOverrideMaterial=new i.MeshLambertMaterial({color:t}),this.lineOverrideMaterial=new i.LineBasicMaterial({color:t}),this.pointsOverrideMaterial=new i.PointsMaterial({color:t,size:5,sizeAttenuation:!1}),this.spriteOverrideMaterial=new i.SpriteMaterial({color:t}),this.materialCacheMap=new WeakMap,this.defaultAmbientLight=new i.AmbientLight("rgb(255, 255, 255)",.5),this.defaultAmbientLight.matrixAutoUpdate=!1,this.defaultDirectionalLight=new i.DirectionalLight("rgb(255, 255, 255)",.3),this.defaultDirectionalLight.castShadow=!1,this.defaultDirectionalLight.position.set(-100,100,100),this.defaultDirectionalLight.updateMatrix(),this.defaultDirectionalLight.updateMatrixWorld(),this.defaultDirectionalLight.matrixAutoUpdate=!1,this.setDispalyMode=s=>{const r=()=>{const f=this.materialCacheMap,d=this.meshOverrideMaterial;this.meshSet.forEach(v=>{f.set(v,v.material),v.material=d});const g=this.lineOverrideMaterial;this.lineSet.forEach(v=>{f.set(v,v.material),v.material=g});const m=this.pointsOverrideMaterial;this.pointsSet.forEach(v=>{f.set(v,v.material),v.material=m});const M=this.spriteOverrideMaterial;this.spriteSet.forEach(v=>{f.set(v,v.material),v.material=M})},a=()=>{const f=this.materialCacheMap;this.meshSet.forEach(d=>{f.get(d)&&(d.material=f.get(d),f.delete(d))}),this.lineSet.forEach(d=>{f.get(d)&&(d.material=f.get(d),f.delete(d))}),this.pointsSet.forEach(d=>{f.get(d)&&(d.material=f.get(d),f.delete(d))}),this.spriteSet.forEach(d=>{f.get(d)&&(d.material=f.get(d),f.delete(d))})},n=()=>{this.lightSet.forEach(f=>{super.remove(f)}),super.add(this.defaultAmbientLight),super.add(this.defaultDirectionalLight)},l=()=>{this.lightSet.forEach(f=>{super.add(f)}),super.remove(this.defaultAmbientLight),super.remove(this.defaultDirectionalLight)},u=()=>{this.background instanceof i.Texture&&(this.backgroundCache=this.background,this.background=null),this.environment instanceof i.Texture&&(this.environmentCache=this.environment,this.environment=null)},p=()=>{this.backgroundCache&&(this.background=this.backgroundCache,this.backgroundCache=void 0),this.environmentCache&&(this.environment=this.environmentCache,this.environmentCache=void 0)};s===0?(r(),u(),n()):s===1?(a(),u(),n()):s===2?(a(),u(),l()):s===3?(a(),p(),l()):console.warn(`VisScene can not set this mode: ${s}`)},e.displayMode!==void 0?(this.displayMode=e.displayMode,this.setDispalyMode(this.displayMode)):(this.displayMode=3,this.setDispalyMode(this.displayMode))}}setObjectHelperVisiable(e){this.helperCompiler.setVisiable(e)}setViewPoint(e){this.dispatchEvent({type:`${e}ViewPoint`})}add(...e){return e.forEach(t=>{t instanceof i.Mesh?this.meshSet.add(t):t instanceof i.Line?this.lineSet.add(t):t instanceof i.Light?this.lightSet.add(t):t instanceof i.Points?this.pointsSet.add(t):t instanceof i.Sprite?this.spriteSet.add(t):t instanceof i.Camera&&this.cameraSet.add(t),this.helperCompiler.add(t)}),this.displayMode!==void 0&&this.setDispalyMode(this.displayMode),super.add(...e)}remove(...e){const t=this.materialCacheMap;return e.forEach(s=>{t&&t.has(s)&&t.delete(s),s instanceof i.Mesh?this.meshSet.delete(s):s instanceof i.Line?this.lineSet.delete(s):s instanceof i.Light?this.lightSet.delete(s):s instanceof i.Points?this.pointsSet.delete(s):s instanceof i.Sprite?this.spriteSet.delete(s):s instanceof i.Camera&&this.cameraSet.delete(s),this.helperCompiler.remove(s)}),super.remove(...e)}_add(...e){return super.add(...e)}_remove(...e){return super.remove(...e)}}var Ee={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;

		}`};class F extends ge.Pass{constructor(e,t,s,r){super();this.renderScene=t,this.renderCamera=s,this.selectedObjects=r!==void 0?r:[],this.visibleEdgeColor=new i.Color(1,1,1),this.hiddenEdgeColor=new i.Color(.1,.04,.02),this.edgeGlow=0,this.usePatternTexture=!1,this.edgeThickness=1,this.edgeStrength=3,this.downSampleRatio=2,this.pulsePeriod=0,this._visibilityCache=new Map,this.resolution=e!==void 0?new i.Vector2(e.x,e.y):new i.Vector2(256,256);const a={minFilter:i.LinearFilter,magFilter:i.LinearFilter,format:i.RGBAFormat},n=Math.round(this.resolution.x/this.downSampleRatio),l=Math.round(this.resolution.y/this.downSampleRatio);this.maskBufferMaterial=new i.MeshBasicMaterial({color:16777215}),this.maskBufferMaterial.side=i.DoubleSide,this.renderTargetMaskBuffer=new i.WebGLRenderTarget(this.resolution.x,this.resolution.y,a),this.renderTargetMaskBuffer.texture.name="OutlinePass.mask",this.renderTargetMaskBuffer.texture.generateMipmaps=!1,this.depthMaterial=new i.MeshDepthMaterial,this.depthMaterial.side=i.DoubleSide,this.depthMaterial.depthPacking=i.RGBADepthPacking,this.depthMaterial.blending=i.NoBlending,this.prepareMaskMaterial=this.getPrepareMaskMaterial(),this.prepareMaskMaterial.side=i.DoubleSide,this.prepareMaskMaterial.fragmentShader=d(this.prepareMaskMaterial.fragmentShader,this.renderCamera),this.renderTargetDepthBuffer=new i.WebGLRenderTarget(this.resolution.x,this.resolution.y,a),this.renderTargetDepthBuffer.texture.name="OutlinePass.depth",this.renderTargetDepthBuffer.texture.generateMipmaps=!1,this.renderTargetMaskDownSampleBuffer=new i.WebGLRenderTarget(n,l,a),this.renderTargetMaskDownSampleBuffer.texture.name="OutlinePass.depthDownSample",this.renderTargetMaskDownSampleBuffer.texture.generateMipmaps=!1,this.renderTargetBlurBuffer1=new i.WebGLRenderTarget(n,l,a),this.renderTargetBlurBuffer1.texture.name="OutlinePass.blur1",this.renderTargetBlurBuffer1.texture.generateMipmaps=!1,this.renderTargetBlurBuffer2=new i.WebGLRenderTarget(Math.round(n/2),Math.round(l/2),a),this.renderTargetBlurBuffer2.texture.name="OutlinePass.blur2",this.renderTargetBlurBuffer2.texture.generateMipmaps=!1,this.edgeDetectionMaterial=this.getEdgeDetectionMaterial(),this.renderTargetEdgeBuffer1=new i.WebGLRenderTarget(n,l,a),this.renderTargetEdgeBuffer1.texture.name="OutlinePass.edge1",this.renderTargetEdgeBuffer1.texture.generateMipmaps=!1,this.renderTargetEdgeBuffer2=new i.WebGLRenderTarget(Math.round(n/2),Math.round(l/2),a),this.renderTargetEdgeBuffer2.texture.name="OutlinePass.edge2",this.renderTargetEdgeBuffer2.texture.generateMipmaps=!1;const u=4,p=4;this.separableBlurMaterial1=this.getSeperableBlurMaterial(u),this.separableBlurMaterial1.uniforms.texSize.value.set(n,l),this.separableBlurMaterial1.uniforms.kernelRadius.value=1,this.separableBlurMaterial2=this.getSeperableBlurMaterial(p),this.separableBlurMaterial2.uniforms.texSize.value.set(Math.round(n/2),Math.round(l/2)),this.separableBlurMaterial2.uniforms.kernelRadius.value=p,this.overlayMaterial=this.getOverlayMaterial(),Ee===void 0&&console.error("THREE.OutlinePass relies on CopyShader");const f=Ee;this.copyUniforms=i.UniformsUtils.clone(f.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new i.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:f.vertexShader,fragmentShader:f.fragmentShader,blending:i.NoBlending,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this._oldClearColor=new i.Color,this.oldClearAlpha=1,this.fsQuad=new ge.FullScreenQuad(null),this.tempPulseColor1=new i.Color,this.tempPulseColor2=new i.Color,this.textureMatrix=new i.Matrix4;function d(g,m){var M=m.isPerspectiveCamera?"perspective":"orthographic";return g.replace(/DEPTH_TO_VIEW_Z/g,M+"DepthToViewZ")}}dispose(){this.renderTargetMaskBuffer.dispose(),this.renderTargetDepthBuffer.dispose(),this.renderTargetMaskDownSampleBuffer.dispose(),this.renderTargetBlurBuffer1.dispose(),this.renderTargetBlurBuffer2.dispose(),this.renderTargetEdgeBuffer1.dispose(),this.renderTargetEdgeBuffer2.dispose()}setSize(e,t){this.renderTargetMaskBuffer.setSize(e,t),this.renderTargetDepthBuffer.setSize(e,t);let s=Math.round(e/this.downSampleRatio),r=Math.round(t/this.downSampleRatio);this.renderTargetMaskDownSampleBuffer.setSize(s,r),this.renderTargetBlurBuffer1.setSize(s,r),this.renderTargetEdgeBuffer1.setSize(s,r),this.separableBlurMaterial1.uniforms.texSize.value.set(s,r),s=Math.round(s/2),r=Math.round(r/2),this.renderTargetBlurBuffer2.setSize(s,r),this.renderTargetEdgeBuffer2.setSize(s,r),this.separableBlurMaterial2.uniforms.texSize.value.set(s,r)}changeVisibilityOfSelectedObjects(e){const t=this._visibilityCache;function s(r){r.isMesh&&(e===!0?r.visible=t.get(r):(t.set(r,r.visible),r.visible=e))}for(let r=0;r<this.selectedObjects.length;r++)this.selectedObjects[r].traverse(s)}changeVisibilityOfNonSelectedObjects(e){const t=this._visibilityCache,s=[];function r(n){n.isMesh&&s.push(n)}for(let n=0;n<this.selectedObjects.length;n++)this.selectedObjects[n].traverse(r);function a(n){if(n.isMesh||n.isSprite){let l=!1;for(let u=0;u<s.length;u++)if(s[u].id===n.id){l=!0;break}if(l===!1){const u=n.visible;(e===!1||t.get(n)===!0)&&(n.visible=e),t.set(n,u)}}else(n.isPoints||n.isLine||n.type==="Object3D")&&(e===!0?n.visible=t.get(n):(t.set(n,n.visible),n.visible=e))}this.renderScene.traverse(a)}updateTextureMatrix(){this.textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),this.textureMatrix.multiply(this.renderCamera.projectionMatrix),this.textureMatrix.multiply(this.renderCamera.matrixWorldInverse)}render(e,t,s,r,a){if(this.selectedObjects.length>0){e.getClearColor(this._oldClearColor),this.oldClearAlpha=e.getClearAlpha();const n=e.autoClear;e.autoClear=!1,a&&e.state.buffers.stencil.setTest(!1),e.setClearColor(16777215,1),this.changeVisibilityOfSelectedObjects(!1);const l=this.renderScene.background;if(this.renderScene.background=null,this.renderScene.overrideMaterial=this.depthMaterial,e.setRenderTarget(this.renderTargetDepthBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.changeVisibilityOfSelectedObjects(!0),this._visibilityCache.clear(),this.updateTextureMatrix(),this.changeVisibilityOfNonSelectedObjects(!1),this.renderScene.overrideMaterial=this.prepareMaskMaterial,this.prepareMaskMaterial.uniforms.cameraNearFar.value.set(this.renderCamera.near,this.renderCamera.far),this.prepareMaskMaterial.uniforms.depthTexture.value=this.renderTargetDepthBuffer.texture,this.prepareMaskMaterial.uniforms.textureMatrix.value=this.textureMatrix,e.setRenderTarget(this.renderTargetMaskBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.renderScene.overrideMaterial=null,this.changeVisibilityOfNonSelectedObjects(!0),this._visibilityCache.clear(),this.renderScene.background=l,this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetMaskBuffer.texture,e.setRenderTarget(this.renderTargetMaskDownSampleBuffer),e.clear(),this.fsQuad.render(e),this.tempPulseColor1.copy(this.visibleEdgeColor),this.tempPulseColor2.copy(this.hiddenEdgeColor),this.pulsePeriod>0){const u=(1+.25)/2+Math.cos(performance.now()*.01/this.pulsePeriod)*(1-.25)/2;this.tempPulseColor1.multiplyScalar(u),this.tempPulseColor2.multiplyScalar(u)}this.fsQuad.material=this.edgeDetectionMaterial,this.edgeDetectionMaterial.uniforms.maskTexture.value=this.renderTargetMaskDownSampleBuffer.texture,this.edgeDetectionMaterial.uniforms.texSize.value.set(this.renderTargetMaskDownSampleBuffer.width,this.renderTargetMaskDownSampleBuffer.height),this.edgeDetectionMaterial.uniforms.visibleEdgeColor.value=this.tempPulseColor1,this.edgeDetectionMaterial.uniforms.hiddenEdgeColor.value=this.tempPulseColor2,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial1,this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=F.BlurDirectionX,this.separableBlurMaterial1.uniforms.kernelRadius.value=this.edgeThickness,e.setRenderTarget(this.renderTargetBlurBuffer1),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetBlurBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=F.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial2,this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial2.uniforms.direction.value=F.BlurDirectionX,e.setRenderTarget(this.renderTargetBlurBuffer2),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetBlurBuffer2.texture,this.separableBlurMaterial2.uniforms.direction.value=F.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer2),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.overlayMaterial,this.overlayMaterial.uniforms.maskTexture.value=this.renderTargetMaskBuffer.texture,this.overlayMaterial.uniforms.edgeTexture1.value=this.renderTargetEdgeBuffer1.texture,this.overlayMaterial.uniforms.edgeTexture2.value=this.renderTargetEdgeBuffer2.texture,this.overlayMaterial.uniforms.patternTexture.value=this.patternTexture,this.overlayMaterial.uniforms.edgeStrength.value=this.edgeStrength,this.overlayMaterial.uniforms.edgeGlow.value=this.edgeGlow,this.overlayMaterial.uniforms.usePatternTexture.value=this.usePatternTexture,a&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(s),this.fsQuad.render(e),e.setClearColor(this._oldClearColor,this.oldClearAlpha),e.autoClear=n}this.renderToScreen&&(this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=s.texture,e.setRenderTarget(null),this.fsQuad.render(e))}getPrepareMaskMaterial(){return new i.ShaderMaterial({uniforms:{depthTexture:{value:null},cameraNearFar:{value:new i.Vector2(.5,.5)},textureMatrix:{value:null}},vertexShader:`#include <morphtarget_pars_vertex>
				#include <skinning_pars_vertex>

				varying vec4 projTexCoord;
				varying vec4 vPosition;
				uniform mat4 textureMatrix;

				void main() {

					#include <skinbase_vertex>
					#include <begin_vertex>
					#include <morphtarget_vertex>
					#include <skinning_vertex>
					#include <project_vertex>

					vPosition = mvPosition;
					vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );
					projTexCoord = textureMatrix * worldPosition;

				}`,fragmentShader:`#include <packing>
				varying vec4 vPosition;
				varying vec4 projTexCoord;
				uniform sampler2D depthTexture;
				uniform vec2 cameraNearFar;

				void main() {

					float depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));
					float viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );
					float depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;
					gl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);

				}`})}getEdgeDetectionMaterial(){return new i.ShaderMaterial({uniforms:{maskTexture:{value:null},texSize:{value:new i.Vector2(.5,.5)},visibleEdgeColor:{value:new i.Vector3(1,1,1)},hiddenEdgeColor:{value:new i.Vector3(1,1,1)}},vertexShader:`varying vec2 vUv;

				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;

				uniform sampler2D maskTexture;
				uniform vec2 texSize;
				uniform vec3 visibleEdgeColor;
				uniform vec3 hiddenEdgeColor;

				void main() {
					vec2 invSize = 1.0 / texSize;
					vec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);
					vec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);
					vec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);
					vec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);
					vec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);
					float diff1 = (c1.r - c2.r)*0.5;
					float diff2 = (c3.r - c4.r)*0.5;
					float d = length( vec2(diff1, diff2) );
					float a1 = min(c1.g, c2.g);
					float a2 = min(c3.g, c4.g);
					float visibilityFactor = min(a1, a2);
					vec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;
					gl_FragColor = vec4(edgeColor, 1.0) * vec4(d);
				}`})}getSeperableBlurMaterial(e){return new i.ShaderMaterial({defines:{MAX_RADIUS:e},uniforms:{colorTexture:{value:null},texSize:{value:new i.Vector2(.5,.5)},direction:{value:new i.Vector2(.5,.5)},kernelRadius:{value:1}},vertexShader:`varying vec2 vUv;

				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`#include <common>
				varying vec2 vUv;
				uniform sampler2D colorTexture;
				uniform vec2 texSize;
				uniform vec2 direction;
				uniform float kernelRadius;

				float gaussianPdf(in float x, in float sigma) {
					return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;
				}

				void main() {
					vec2 invSize = 1.0 / texSize;
					float weightSum = gaussianPdf(0.0, kernelRadius);
					vec4 diffuseSum = texture2D( colorTexture, vUv) * weightSum;
					vec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);
					vec2 uvOffset = delta;
					for( int i = 1; i <= MAX_RADIUS; i ++ ) {
						float w = gaussianPdf(uvOffset.x, kernelRadius);
						vec4 sample1 = texture2D( colorTexture, vUv + uvOffset);
						vec4 sample2 = texture2D( colorTexture, vUv - uvOffset);
						diffuseSum += ((sample1 + sample2) * w);
						weightSum += (2.0 * w);
						uvOffset += delta;
					}
					gl_FragColor = diffuseSum/weightSum;
				}`})}getOverlayMaterial(){return new i.ShaderMaterial({uniforms:{maskTexture:{value:null},edgeTexture1:{value:null},edgeTexture2:{value:null},patternTexture:{value:null},edgeStrength:{value:1},edgeGlow:{value:1},usePatternTexture:{value:0}},vertexShader:`varying vec2 vUv;

				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;

				uniform sampler2D maskTexture;
				uniform sampler2D edgeTexture1;
				uniform sampler2D edgeTexture2;
				uniform sampler2D patternTexture;
				uniform float edgeStrength;
				uniform float edgeGlow;
				uniform bool usePatternTexture;

				void main() {
					vec4 edgeValue1 = texture2D(edgeTexture1, vUv);
					vec4 edgeValue2 = texture2D(edgeTexture2, vUv);
					vec4 maskColor = texture2D(maskTexture, vUv);
					vec4 patternColor = texture2D(patternTexture, 6.0 * vUv);
					float visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;
					vec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;
					vec4 finalColor = edgeStrength * maskColor.r * edgeValue;
					if(usePatternTexture)
						finalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);
					gl_FragColor = finalColor;
				}`,blending:i.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0})}}F.BlurDirectionX=new i.Vector2(1,0),F.BlurDirectionY=new i.Vector2(0,1);class Se{constructor(){o(this,"listeners",new Map)}addEventListener(e,t){const s=this.listeners;s.has(e)||s.set(e,new Set),s.get(e).add(t)}hasEventListener(e,t){const s=this.listeners;return s.has(e)?s.get(e).has(t):!1}removeEventListener(e,t){const s=this.listeners;!s.has(e)||!s.get(e).has(t)||s.get(e).delete(t)}dispatchEvent(e){var r;const t=e.type,s=this.listeners;s.has(t)&&((r=s.get(t))==null||r.forEach(a=>{a.call(this,e)}))}}class _e extends Se{constructor(e,t=1e3/60){super();o(this,"dom");o(this,"mouse");o(this,"canMouseMove");o(this,"mouseEventTimer");o(this,"throttleTime");this.dom=e,this.mouse=new i.Vector2,this.canMouseMove=!0,this.mouseEventTimer=null,this.throttleTime=t,e.addEventListener("pointerdown",s=>{this.pointerDown(s)}),e.addEventListener("pointermove",s=>{!this.canMouseMove||(this.canMouseMove=!1,this.mouseEventTimer=setTimeout(()=>{const r=this.mouse,a=this.dom;r.x=s.offsetX/a.offsetWidth*2-1,r.y=-(s.offsetY/a.offsetHeight)*2+1,this.canMouseMove=!0,this.pointerMove(s)},this.throttleTime))}),e.addEventListener("pointerup",s=>{this.pointerUp(s)})}getMousePoint(){return this.mouse}pointerDown(e){const t=Object.assign(e,{mouse:this.mouse});this.dispatchEvent(t)}pointerMove(e){const t=Object.assign(e,{mouse:this.mouse});this.dispatchEvent(t)}pointerUp(e){const t=Object.assign(e,{mouse:this.mouse});this.dispatchEvent(t)}}const oe=new i.Frustum,z=new i.Vector3,_=new i.Vector3,B=new i.Vector3,I=new i.Vector3,G=new i.Vector3,V=new i.Vector3,U=new i.Vector3,$=new i.Vector3,W=new i.Vector3,X=new i.Vector3,te=new i.Vector3,J=new i.Vector3,Q=new i.Vector3,q=new i.Vector3,Ce=new i.Matrix4,Ye=new i.Quaternion,ze=new i.Vector3;class $e{constructor(e,t,s=Number.MAX_VALUE){this.camera=e,this.scene=t,this.startPoint=new i.Vector3,this.endPoint=new i.Vector3,this.collection=[],this.instances={},this.deep=s}select(e,t){return this.startPoint=e||this.startPoint,this.endPoint=t||this.endPoint,this.collection=[],this.updateFrustum(this.startPoint,this.endPoint),this.searchChildInFrustum(oe,this.scene),this.collection}updateFrustum(e,t){if(e=e||this.startPoint,t=t||this.endPoint,e.x===t.x&&(t.x+=Number.EPSILON),e.y===t.y&&(t.y+=Number.EPSILON),this.camera.updateProjectionMatrix(),this.camera.updateMatrixWorld(),this.camera.isPerspectiveCamera){_.copy(e),_.x=Math.min(e.x,t.x),_.y=Math.max(e.y,t.y),t.x=Math.max(e.x,t.x),t.y=Math.min(e.y,t.y),B.setFromMatrixPosition(this.camera.matrixWorld),I.copy(_),G.set(t.x,_.y,0),V.copy(t),U.set(_.x,t.y,0),I.unproject(this.camera),G.unproject(this.camera),V.unproject(this.camera),U.unproject(this.camera),J.copy(I).sub(B),Q.copy(G).sub(B),q.copy(V).sub(B),J.normalize(),Q.normalize(),q.normalize(),J.multiplyScalar(this.deep),Q.multiplyScalar(this.deep),q.multiplyScalar(this.deep),J.add(B),Q.add(B),q.add(B);const s=oe.planes;s[0].setFromCoplanarPoints(B,I,G),s[1].setFromCoplanarPoints(B,G,V),s[2].setFromCoplanarPoints(V,U,B),s[3].setFromCoplanarPoints(U,I,B),s[4].setFromCoplanarPoints(G,V,U),s[5].setFromCoplanarPoints(q,Q,J),s[5].normal.multiplyScalar(-1)}else if(this.camera.isOrthographicCamera){const s=Math.min(e.x,t.x),r=Math.max(e.y,t.y),a=Math.max(e.x,t.x),n=Math.min(e.y,t.y);I.set(s,r,-1),G.set(a,r,-1),V.set(a,n,-1),U.set(s,n,-1),$.set(s,r,1),W.set(a,r,1),X.set(a,n,1),te.set(s,n,1),I.unproject(this.camera),G.unproject(this.camera),V.unproject(this.camera),U.unproject(this.camera),$.unproject(this.camera),W.unproject(this.camera),X.unproject(this.camera),te.unproject(this.camera);const l=oe.planes;l[0].setFromCoplanarPoints(I,$,W),l[1].setFromCoplanarPoints(G,W,X),l[2].setFromCoplanarPoints(X,te,U),l[3].setFromCoplanarPoints(te,$,I),l[4].setFromCoplanarPoints(G,V,U),l[5].setFromCoplanarPoints(X,W,$),l[5].normal.multiplyScalar(-1)}else console.error("THREE.SelectionBox: Unsupported camera type.")}searchChildInFrustum(e,t){if(t.isMesh||t.isLine||t.isPoints)if(t.isInstancedMesh){this.instances[t.uuid]=[];for(let s=0;s<t.count;s++)t.getMatrixAt(s,Ce),Ce.decompose(z,Ye,ze),e.containsPoint(z)&&this.instances[t.uuid].push(s)}else t.geometry.boundingSphere===null&&t.geometry.computeBoundingSphere(),z.copy(t.geometry.boundingSphere.center),z.applyMatrix4(t.matrixWorld),e.containsPoint(z)&&this.collection.push(t);if(t.children.length>0)for(let s=0;s<t.children.length;s++)this.searchChildInFrustum(e,t.children[s])}}class We{constructor(e){o(this,"dom");o(this,"element");o(this,"startPoint");o(this,"pointTopLeft");o(this,"pointBottomRight");o(this,"isDown");this.dom=e,this.element=document.createElement("div"),this.element.style.pointerEvents="none",this.startPoint=new i.Vector2,this.pointTopLeft=new i.Vector2,this.pointBottomRight=new i.Vector2,this.isDown=!1}onSelectStart(e){this.isDown=!0,this.dom.appendChild(this.element),this.element.style.left=e.clientX+"px",this.element.style.top=e.clientY+"px",this.element.style.width="0px",this.element.style.height="0px",this.startPoint.x=e.clientX,this.startPoint.y=e.clientY}onSelectMove(e){!this.isDown||(this.pointBottomRight.x=Math.max(this.startPoint.x,e.clientX),this.pointBottomRight.y=Math.max(this.startPoint.y,e.clientY),this.pointTopLeft.x=Math.min(this.startPoint.x,e.clientX),this.pointTopLeft.y=Math.min(this.startPoint.y,e.clientY),this.element.style.left=this.pointTopLeft.x+"px",this.element.style.top=this.pointTopLeft.y+"px",this.element.style.width=this.pointBottomRight.x-this.pointTopLeft.x+"px",this.element.style.height=this.pointBottomRight.y-this.pointTopLeft.y+"px")}onSelectOver(e){!this.isDown||(this.isDown=!1,this.dom.removeChild(this.element))}}class Xe extends $e{constructor(e,t,s,r){super(t,s,r);o(this,"selectionHelper");o(this,"raycaster");o(this,"hoverObjectSet");o(this,"activeObjectSet");this.hoverObjectSet=new Set,this.activeObjectSet=new Set,this.raycaster=new i.Raycaster,this.selectionHelper=new We(e)}setCamera(e){return this.camera=e,this}checkHoverObject(e){this.hoverObjectSet.clear();const t=e.mouse;this.raycaster.setFromCamera(t,this.camera);const s=this.raycaster.intersectObjects(this.scene.children);return s[0]&&this.hoverObjectSet.add(s[0].object),this}checkActiveObject(e){this.activeObjectSet.clear();const t=e.mouse;this.raycaster.setFromCamera(t,this.camera);const s=this.raycaster.intersectObjects(this.scene.children);return s[0]&&this.activeObjectSet.add(s[0].object),this}selectStart(e){const t=e.mouse;return this.selectionHelper.onSelectStart(e),this.collection=[],this.startPoint.set(t.x,t.y,.5),this}selecting(e){return this.selectionHelper.onSelectMove(e),this}selectEnd(e){const t=e.mouse;return this.selectionHelper.onSelectOver(e),this.endPoint.set(t.x,t.y,.5),this.select(),this.collection.forEach(s=>{this.activeObjectSet.add(s)}),this}getActiveObjectSet(){return this.activeObjectSet}getHoverObjectSet(){return this.hoverObjectSet}}class Je{constructor(e){o(this,"stats");o(this,"domElement");this.stats=He.default();const t=this.stats.domElement;t.style.position="absolute",t.style.top="0",t.style.left="35px",e&&(t.style.top=`${e.top}px`,t.style.left=`${e.left}px`,t.style.right=`${e.right}px`,t.style.bottom=`${e.bottom}px`),this.domElement=t}render(){this.stats.update()}}class Qe extends Ve.OrbitControls{constructor(e,t){super(e,t);this.mouseButtons={LEFT:null,MIDDLE:i.MOUSE.DOLLY,RIGHT:i.MOUSE.ROTATE}}setCamera(e){return this.object=e,this.update(),this}}class qe extends Ue.TransformControls{constructor(e,t){super(e,t);o(this,"target");this.target=new i.Object3D,this.attach(this.target)}getTarget(){return this.target}setCamera(e){return this.camera=e,this}}class Ze extends i.EventDispatcher{constructor(){super(...arguments);o(this,"clock",new i.Clock);o(this,"animationFrame",-1);o(this,"render",()=>{const e=this.clock,t=e.getDelta(),s=e.getElapsedTime();this.dispatchEvent({type:"render",delta:t,total:s})});o(this,"play",()=>{this.dispatchEvent({type:"play"});const e=()=>{this.render(),this.animationFrame=requestAnimationFrame(e)};e()});o(this,"stop",()=>{cancelAnimationFrame(this.animationFrame),this.animationFrame=-1,this.dispatchEvent({type:"stop"})});o(this,"checkHasRendering",()=>this.animationFrame!==-1);o(this,"hasVaildRender",()=>{if(!this._listeners)return!1;const e=this._listeners.render;return e&&e.length})}}class Te extends i.EventDispatcher{constructor(e){super();o(this,"stats");o(this,"orbitControls");o(this,"transformControls");o(this,"pointerManager");o(this,"sceneStatusManager");o(this,"composer");o(this,"renderer");o(this,"scene");o(this,"renderManager");o(this,"hoverObjectSet");o(this,"activeObjectSet");const t=new i.WebGLRenderer({antialias:!0}),s=t.domElement,r=new Ne({hasDefaultPerspectiveCamera:!0,hasDefaultOrthographicCamera:!0,hasAxesHelper:!0,hasGridHelper:!0,hasDisplayMode:!0,displayMode:ne.ENV}),a=r.getDefaultPerspectiveCamera(),n=r.getDefaultPerspectiveCamera(),l=r.getDefaultOrthographicCamera(),u=new Je,p=new Qe(a,t.domElement),f=new qe(a,t.domElement),d=new _e(t.domElement),g=new Xe(t.domElement,a,r),m=g.getHoverObjectSet(),M=g.getActiveObjectSet(),v=t.getPixelRatio(),w=t.getDrawingBufferSize(new i.Vector2),b=new i.WebGLMultisampleRenderTarget(w.width,w.height,{format:i.RGBAFormat}),C=new N.EffectComposer(t,b),S=new Fe.RenderPass(r,a),T=new F(new i.Vector2(s.offsetWidth*v,s.offsetHeight*v),r,a);T.pulsePeriod=0,T.edgeStrength=5,T.edgeThickness=1,T.visibleEdgeColor=new i.Color("rgb(255, 158, 240)"),T.hiddenEdgeColor=new i.Color("rgb(255, 158, 240)");const D=new F(new i.Vector2(s.offsetWidth*v,s.offsetHeight*v),r,a);D.pulsePeriod=0,D.edgeStrength=5,D.edgeThickness=1,D.visibleEdgeColor=new i.Color("rgb(230, 20, 240)"),D.hiddenEdgeColor=new i.Color("rgb(230, 20, 240)"),C.addPass(S),C.addPass(T),C.addPass(D);const k=new Ze;r.addEventListener(`${x.DEFAULT}ViewPoint`,y=>{this.setCamera(n),p.enableRotate=!0}),r.addEventListener(`${x.TOP}ViewPoint`,y=>{this.setCamera(l),p.enableRotate=!1}),r.addEventListener(`${x.BOTTOM}ViewPoint`,y=>{this.setCamera(l),p.enableRotate=!1}),r.addEventListener(`${x.RIGHT}ViewPoint`,y=>{this.setCamera(l),p.enableRotate=!1}),r.addEventListener(`${x.LEFT}ViewPoint`,y=>{this.setCamera(l),p.enableRotate=!1}),r.addEventListener(`${x.FRONT}ViewPoint`,y=>{this.setCamera(l),p.enableRotate=!1}),r.addEventListener(`${x.BACK}ViewPoint`,y=>{this.setCamera(l),p.enableRotate=!1}),this.addEventListener("setSize",y=>{const L=y,P=L.width,E=L.height;n.aspect=P/E,n.updateProjectionMatrix(),l.left=-P/16,l.right=P/16,l.top=E/16,l.bottom=-E/16,l.updateProjectionMatrix(),t.setSize(P,E),C.setSize(P,E)}),this.addEventListener("setCamera",y=>{const P=y.camera;p.setCamera(P),f.setCamera(P),g.setCamera(P),S.camera=P,T.renderCamera=P,D.renderCamera=P}),d.addEventListener("pointerdown",y=>{y.button===0&&g.selectStart(y)}),d.addEventListener("pointermove",y=>{y.button===0&&g.selecting(y),g.checkHoverObject(y),M.forEach(L=>{m.has(L)&&m.delete(L)}),T.selectedObjects=Array.from(m)}),d.addEventListener("pointerup",y=>{y.button===0&&(g.selectEnd(y),g.checkActiveObject(y),D.selectedObjects=Array.from(M))}),k.addEventListener("render",y=>{const L=y;C.render(L.delta)}),this.renderer=t,this.orbitControls=p,this.transformControls=f,this.pointerManager=d,this.sceneStatusManager=g,this.composer=C,this.stats=u,this.scene=r,this.renderManager=k,this.hoverObjectSet=m,this.activeObjectSet=M,e&&(this.setSize(e.offsetWidth,e.offsetHeight),e.appendChild(t.domElement))}getRenderer(){return this.renderer}getScene(){return this.scene}setCamera(e){return this.dispatchEvent({type:"setCamera",camera:e}),this}setSize(e,t){return e<=0||t<=0?(console.error(`you must be input width and height bigger then zero, width: ${e}, height: ${t}`),this):(this.dispatchEvent({type:"setSize",width:e,height:t}),this)}render(){this.renderManager.render()}play(){this.renderManager.play()}stop(){this.renderManager.stop()}addRender(){return this}dispose(){this.renderer.clear(),this.renderer.dispose()}}function se(c,e){return c in e}const ie=class extends Se{constructor(){super()}proxyExtends(e,t){if(t||(t=[]),ie.proxyWeakSet.has(e)||typeof e!="object"&&e!==null)return e;const s=this,r={get(a,n){return Reflect.get(a,n)},set(a,n,l){if(a[n]===void 0){if(typeof l=="object"&&l!==null){const u=t.concat([n]);l=s.proxyExtends(l,u)}s.broadcast({operate:"add",path:t.concat([]),key:n,value:l})}else{if(typeof l=="object"&&!ie.proxyWeakSet.has(e)){const u=t.concat([n]);l=s.proxyExtends(l,u)}s.broadcast({operate:"set",path:t.concat([]),key:n,value:l})}return Reflect.set(a,n,l)},deleteProperty(a,n){return s.broadcast({operate:"delete",path:t.concat([]),key:n,value:""}),Reflect.deleteProperty(a,n)}};if(typeof e=="object"&&e!==null)for(const a in e){const n=t.concat([a]);se(a,e)&&typeof e[a]=="object"&&e[a]!==null&&(e[a]=this.proxyExtends(e[a],n))}return new Proxy(e,r)}broadcast({operate:e,path:t,key:s,value:r}){const a={__poto__:!0,length:!0};return se(s,a)&&a[s]?this:(this.dispatchEvent({type:"broadcast",notice:{operate:e,path:t,key:s,value:r}}),this)}};let le=ie;o(le,"proxyWeakSet",new WeakSet);class Ke{constructor(){o(this,"rule");o(this,"memberSet");this.rule=function(){},this.memberSet=new Set}apply(e){return this.memberSet.add(e),this}cancel(e){return this.memberSet.delete(e),this}setRule(e){return this.rule=e,this}translate(e){const t=this.rule;return this.memberSet.forEach(s=>{t(e,s)}),this}}class j{constructor(e,t){o(this,"data");o(this,"broadcast");o(this,"translater");this.translater=new Ke().setRule(e),this.broadcast=new le,this.data=this.broadcast.proxyExtends(t),this.broadcast.addEventListener("broadcast",s=>{this.translater.translate(s.notice)})}getData(){return this.data}addCompiler(e){return e.setTarget(this.data),e.compileAll(),this.translater.apply(e),this}toJSON(){return JSON.stringify(this.data)}load(e){const t=this.data;for(const s in e)t[s]=e[s];return this}}var et=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function O(c){return typeof c=="string"&&et.test(c)}const tt=function(c,e){const{operate:t,key:s,path:r,value:a}=c;t==="add"?O(s)&&e.add(s,a):t==="set"&&e.set(r.concat([]),s,a)};class xe extends j{constructor(e){!e&&(e={});super(tt,e)}}const st=function(c,e){const{operate:t,key:s,path:r,value:a}=c;t==="add"&&O(s)&&e.add(s,a)};class we extends j{constructor(e){!e&&(e={});super(st,e)}}class R{static applyConfig(e,t,s){const r={type:!0},a=(n,l)=>{for(const u in n)typeof n[u]=="object"&&typeof n[u]!==null&&se(u,l)?a(n[u],l[u]):se(u,l)&&!r[u]&&(l[u]=n[u])};a(e,t),s&&s()}constructor(){}}class rt extends R{constructor(e){super();o(this,"target");o(this,"scene");o(this,"map");o(this,"constructMap");e?(e.target&&(this.target=e.target),e.scene&&(this.scene=e.scene)):(this.scene=new i.Scene,this.target={}),this.map=new Map;const t=new Map;t.set("PerspectiveCamera",()=>new i.PerspectiveCamera),t.set("OrthographicCamera",()=>new i.OrthographicCamera),this.constructMap=t}add(e,t){if(O(e)){if(t.type&&this.constructMap.has(t.type)){const s=this.constructMap.get(t.type)(),r=JSON.parse(JSON.stringify(t));delete r.vid,delete r.type,R.applyConfig(r,s),(s instanceof i.PerspectiveCamera||s instanceof i.OrthographicCamera)&&s.updateProjectionMatrix(),this.map.set(e,s),this.scene.add(s)}}else console.error(`camera vid parameter is illegal: ${e}`);return this}setScene(e){return this.scene=e,this}setTarget(e){return this.target=e,this}compileAll(){const e=this.target;for(const t in e)this.add(t,e[t]);return this}dispose(){return this}}h.MODULETYPE=void 0,function(c){c.CAMERA="camera",c.LIGHT="light",c.GEOMETRY="geometry",c.MODEL="model",c.TEXTURE="texture",c.MATERIAL="material",c.RENDERER="renderer",c.SCENE="scene",c.SPRITE="sprite",c.STRUCTURE="structure"}(h.MODULETYPE||(h.MODULETYPE={}));class it extends i.BufferGeometry{constructor(e){super();o(this,"type","LoadBufferGeometry");e&&this.copy(e)}}const K=class extends R{constructor(e){super();o(this,"target");o(this,"map");o(this,"constructMap");o(this,"resourceMap");o(this,"replaceGeometry");this.target=e.target,this.map=new Map;const t=new Map;t.set("BoxGeometry",s=>K.transfromAnchor(new i.BoxBufferGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments),s)),t.set("SphereGeometry",s=>K.transfromAnchor(new i.SphereBufferGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength),s)),t.set("LoadGeometry",s=>K.transfromAnchor(new it(this.getRescource(s.url)),s)),this.constructMap=t,this.resourceMap=new Map,this.replaceGeometry=new i.BoxBufferGeometry(10,10,10)}linkRescourceMap(e){return this.resourceMap=e,this}getRescource(e){return this.resourceMap.has(e)?this.resourceMap.has(e)&&this.resourceMap.get(e)instanceof i.BufferGeometry?this.resourceMap.get(e).clone():(console.error(`url mapping rescource is not class with BufferGeometry: ${e}`),this.replaceGeometry.clone()):(console.error(`rescoure can not found url: ${e}`),this.replaceGeometry.clone())}getMap(){return this.map}setTarget(){return this}add(e,t){if(O(e)){if(t.type&&this.constructMap.has(t.type)){const s=this.constructMap.get(t.type)(t);this.map.set(e,s)}}else console.error(`geometry vid parameter is illegal: ${e}`);return this}compileAll(){const e=this.target;for(const t in e)this.add(t,e[t]);return this}dispose(){return this}};let ce=K;o(ce,"transfromAnchor",function(e,t){e.center(),!e.boundingBox&&e.computeBoundingBox();const s=e.boundingBox,r=t.position,a=t.rotation,n=t.scale,l=new i.Matrix4,u=new i.Vector3((s.max.x-s.min.x)/2*r.x,(s.max.y-s.min.y)/2*r.y,(s.max.z-s.min.z)/2*r.z),p=new i.Quaternion().setFromEuler(new i.Euler(a.x,a.y,a.z,"XYZ")),f=new i.Vector3(n.x,n.y,n.z);return l.compose(u,p,f),e.applyMatrix4(l),e});class at extends R{constructor(e){super();o(this,"scene");o(this,"target");o(this,"map");o(this,"constructMap");this.scene=e.scene,this.target=e.target,this.map=new Map,this.constructMap=new Map,this.constructMap.set("PointLight",()=>new i.PointLight),this.constructMap.set("SpotLight",()=>new i.SpotLight),this.constructMap.set("AmbientLight",()=>new i.AmbientLight)}add(e,t){if(O(e)){if(t.type&&this.constructMap.has(t.type)){const s=this.constructMap.get(t.type)();R.applyConfig(t,s),s.color=new i.Color(t.color),this.map.set(e,s),this.scene.add(s)}}else console.error(`vid parameter is illegal: ${e}`)}set(e,t,s){const r=e.shift();if(O(r)&&this.map.has(r)){let a=this.map.get(r);e.forEach((n,l,u)=>{a=a[n]}),a[t]=s}else console.error(`vid parameter is illegal: ${r} or can not found this vid light`)}setTarget(e){return this.target=e,this}compileAll(){const e=this.target;for(const t in e)this.add(t,e[t]);return this}dispose(){return this}}class nt extends R{constructor(e){super();o(this,"target");o(this,"map");o(this,"constructMap");o(this,"mapAttribute");o(this,"colorAttribute");o(this,"texturelMap");o(this,"resourceMap");o(this,"cachaColor");e?e.target&&(this.target=e.target):this.target={},this.map=new Map,this.texturelMap=new Map,this.resourceMap=new Map,this.cachaColor=new i.Color;const t=new Map;t.set("MeshStandardMaterial",()=>new i.MeshStandardMaterial),this.constructMap=t,this.colorAttribute={color:!0,emissive:!0},this.mapAttribute={roughnessMap:!0,normalMap:!0,metalnessMap:!0,map:!0,lightMap:!0,envMap:!0,emissiveMap:!0,displacementMap:!0,bumpMap:!0,alphaMap:!0,aoMap:!0}}linkRescourceMap(e){return this.resourceMap=e,this}linkTextureMap(e){return this.texturelMap=e,this}add(e,t){if(O(e))if(t.type&&this.constructMap.has(t.type)){const s=this.constructMap.get(t.type)(),r=JSON.parse(JSON.stringify(t));delete r.type,delete r.vid;const a=this.colorAttribute;for(const l in a)r[l]&&(s[l]=new i.Color(r[l]),delete r[l]);const n=this.mapAttribute;for(const l in n)r[l]&&(s[l]=this.getTexture(r[l]),delete r[l]);R.applyConfig(r,s),s.needsUpdate=!0,this.map.set(e,s)}else console.warn(`material compiler can not support this type: ${t.type}`);else console.error(`material vid parameter is illegal: ${e}`);return this}getTexture(e){if(this.texturelMap.has(e)){const t=this.texturelMap.get(e);return t instanceof i.Texture?t:(console.error(`this object which mapped by vid is not instance of Texture: ${e}`),null)}else return console.error(`texture map can not found this vid: ${e}`),null}getMap(){return this.map}setTarget(e){return this.target=e,this}compileAll(){const e=this.target;for(const t in e)this.add(t,e[t]);return this}dispose(){return this}}class ot extends R{constructor(e){super();o(this,"scene");o(this,"target");o(this,"map");o(this,"constructMap");o(this,"geometryMap");o(this,"materialMap");o(this,"replaceMaterial");o(this,"replaceGeometry");e?(e.scene&&(this.scene=e.scene),e.target&&(this.target=e.target),e.geometryMap&&(this.geometryMap=e.geometryMap),e.materialMap&&(this.materialMap=e.materialMap)):(this.scene=new i.Scene,this.target={},this.geometryMap=new Map,this.materialMap=new Map),this.map=new Map,this.replaceMaterial=new i.MeshStandardMaterial({color:"rgb(150, 150, 150)"}),this.replaceGeometry=new i.BoxBufferGeometry(10,10,10);const t=new Map;t.set("Mesh",s=>new i.Mesh(this.getGeometry(s.geometry),this.getMaterial(s.material))),t.set("Line",s=>new i.Line(this.getGeometry(s.geometry),this.getMaterial(s.material))),t.set("Points",s=>new i.Points(this.getGeometry(s.geometry),this.getMaterial(s.material))),this.constructMap=t}add(e,t){if(O(e)){if(t.type&&this.constructMap.has(t.type)){const s=this.constructMap.get(t.type)(t),r=JSON.parse(JSON.stringify(t));delete r.vid,delete r.type,delete r.geometry,delete r.material,R.applyConfig(r,s),this.map.set(e,s),this.scene.add(s)}}else console.error(`model vid parameter is illegal: ${e}`);return this}set(e,t,s){const r=e.shift();if(O(r)&&this.map.has(r)){let a=this.map.get(r);e.forEach((n,l,u)=>{a=a[n]}),a[t]=s}else console.error(`vid parameter is illegal: ${r} or can not found this vid model`)}getMaterial(e){return O(e)?this.materialMap.has(e)?this.materialMap.get(e):(console.warn(`can not found material which vid: ${e}`),this.replaceMaterial):(console.error(`material vid parameter is illegal: ${e}`),this.replaceMaterial)}getGeometry(e){return O(e)?this.geometryMap.has(e)?this.geometryMap.get(e):(console.warn(`can not found geometry which vid: ${e}`),this.replaceGeometry):(console.error(`geometry vid parameter is illegal: ${e}`),this.replaceGeometry)}linkGeometryMap(e){return this.geometryMap=e,this}linkMaterialMap(e){return this.materialMap=e,this}setScene(e){return this.scene=e,this}setTarget(e){return this.target=e,this}compileAll(){const e=this.target;for(const t in e)this.add(t,e[t]);return this}dispose(){return this}}const he=function(){return{vid:"WebGLRenderer",type:"WebGLRenderer",clearColor:"rgba(0, 0, 0, 0)",outputEncoding:i.LinearEncoding,physicallyCorrectLights:!1,shadowMap:{enabled:!1,autoUpdate:!0,type:i.PCFShadowMap},toneMapping:i.NoToneMapping,toneMappingExposure:1,pixelRatio:window.devicePixelRatio,viewport:null,scissor:null,size:null}};class lt extends R{constructor(e){super();o(this,"target");o(this,"glRenderer");e?(e.target&&(this.target=e.target),e.glRenderer&&(this.glRenderer=e.glRenderer)):(this.target={WebGLRenderer:he()},this.glRenderer=new i.WebGLRenderer)}set(e,t,s){const r=e.shift();if(r==="WebGLRenderer"){const a=this.target.WebGLRenderer,n={clearColor:()=>this.setClearColor(s),pixelRatio:()=>this.setPixelRatio(s),size:()=>this.setSize(a.size),viewport:()=>this.setViewpoint(a.viewport),scissor:()=>this.setScissor(a.scissor)};if(n[e[0]])return n[e[0]](),this;let l=this.glRenderer;return e.forEach((u,p,f)=>{l=l[u]}),l[t]=s,l.clear(),this}else return console.warn(`renderer compiler can not support this type: ${r}`),this}setClearColor(e){return this.glRenderer.setClearColor(e),this.glRenderer.clear(),this}setPixelRatio(e){return this.glRenderer.setPixelRatio(e),this.glRenderer.clear(),this}setSize(e){const t=this.glRenderer;if(e)t.setSize(e.x,e.y);else{const s=t.domElement;t.setSize(s.offsetWidth,s.offsetHeight)}return this}setViewpoint(e){const t=this.glRenderer;if(e)t.setViewport(e.x,e.y,e.width,e.height);else{const s=t.domElement;t.setViewport(0,0,s.offsetWidth,s.offsetHeight)}return this}setScissor(e){const t=this.glRenderer;if(e)t.setScissorTest(!0),t.setScissor(e.x,e.y,e.width,e.height);else{t.setScissorTest(!1);const s=t.domElement;t.setScissor(0,0,s.offsetWidth,s.offsetHeight)}return this}setTarget(e){return this.target=e,this}compileAll(){const t=this.target.WebGLRenderer;this.setClearColor(t.clearColor),this.setPixelRatio(t.pixelRatio),this.setSize(t.size),this.setViewpoint(t.viewport),this.setScissor(t.scissor);const s=JSON.parse(JSON.stringify(t));return delete s.vid,delete s.type,delete s.clearColor,delete s.pixelRatio,delete s.size,delete s.viewport,delete s.scissor,R.applyConfig(s,this.glRenderer),this.glRenderer.clear(),this}dispose(){return this}}const ue=function(){return{vid:"Scene",type:"Scene",background:"",environment:"",fog:null}};class ct extends R{constructor(e){super();o(this,"textureMap");o(this,"target");o(this,"scene");o(this,"fogCache");e?(e.target&&(this.target=e.target),e.scene&&(this.scene=e.scene)):(this.target={scene:ue()},this.scene=new i.Scene),this.textureMap=new Map,this.fogCache=null}background(e){if(!e){this.scene.background=null;return}O(e)?this.textureMap.has(e)?this.scene.background=this.textureMap.get(e):console.warn(`scene compiler can not found this vid texture : '${e}'`):this.scene.background=new i.Color(e)}environment(e){if(!e){this.scene.environment=null;return}O(e)?this.textureMap.has(e)?this.scene.environment=this.textureMap.get(e):console.warn(`scene compiler can not found this vid texture : '${e}'`):console.warn(`this vid is illegal: '${e}'`)}fog(e){if(!e){this.scene.fog=null;return}if(e.type==="Fog")if(this.fogCache instanceof i.Fog){const t=this.fogCache;t.color=new i.Color(e.color),t.near=e.near,t.far=e.far}else this.scene.fog=new i.Fog(e.color,e.near,e.far),this.fogCache=this.scene.fog;else if(e.type==="FogExp2")if(this.fogCache instanceof i.FogExp2){const t=this.fogCache;t.color=new i.Color(e.color),t.density=e.density}else this.scene.fog=new i.FogExp2(e.color,e.density),this.fogCache=this.scene.fog;else console.warn(`scene compiler can not support this type fog:'${e.type}'`)}linkTextureMap(e){return this.textureMap=e,this}set(e,t,s){const r=e.shift();if(r==="scene"){const a=e[0];return{background:()=>this.background(s),environment:()=>this.environment(s),fog:()=>this.fog(this.target.scene.fog)}[a](),this}else return console.warn(`scene compiler can not support this type: ${r}`),this}setTarget(e){return this.target=e,this}compileAll(){const e=this.target.scene;return this.background(e.background),this.environment(e.environment),this.fog(e.fog),this}dispose(){return this}}class ht extends i.Texture{constructor(e,t,s,r,a,n,l,u,p,f){super(e,t,s,r,a,n,l,u,p,f)}}class ut extends R{constructor(e){super();o(this,"target");o(this,"map");o(this,"constructMap");o(this,"resourceMap");e?e.target&&(this.target=e.target):this.target={},this.map=new Map,this.resourceMap=new Map;const t=new Map;t.set("ImageTexture",()=>new ht),this.constructMap=t}linkRescourceMap(e){return this.resourceMap=e,this}add(e,t){if(O(e))if(t.type&&this.constructMap.has(t.type)){const s=this.constructMap.get(t.type)(),r=JSON.parse(JSON.stringify(t));delete r.type,delete r.vid,s.image=this.getResource(r.image),delete r.image,R.applyConfig(r,s),s.needsUpdate=!0,this.map.set(e,s)}else console.warn(`texture compiler can not support this type: ${t.type}`);else console.error(`texture vid parameter is illegal: ${e}`);return this}getResource(e){const t=this.resourceMap;if(t.has(e)){const s=t.get(e);return s instanceof HTMLImageElement||s instanceof HTMLCanvasElement||s instanceof HTMLVideoElement?s:(console.error(`this url mapping resource is not a texture image class: ${e}`),null)}else return console.warn(`resource can not font url: ${e}`),null}getMap(){return this.map}setTarget(e){return this.target=e,this}compileAll(){const e=this.target;for(const t in e)this.add(t,e[t]);return this}dispose(){return this}}class pt extends Te{constructor(e){super(e.dom);o(this,"textureCompiler");o(this,"materialCompiler");o(this,"cameraCompiler");o(this,"lightCompiler");o(this,"modelCompiler");o(this,"geometryCompiler");o(this,"rendererCompiler");o(this,"sceneCompiler");o(this,"resourceManager");o(this,"dataSupportManager");const t=e.dataSupportManager,s=t.getDataSupport(h.MODULETYPE.TEXTURE),r=t.getDataSupport(h.MODULETYPE.MATERIAL),a=t.getDataSupport(h.MODULETYPE.CAMERA),n=t.getDataSupport(h.MODULETYPE.LIGHT),l=t.getDataSupport(h.MODULETYPE.GEOMETRY),u=t.getDataSupport(h.MODULETYPE.MODEL),p=t.getDataSupport(h.MODULETYPE.RENDERER),f=t.getDataSupport(h.MODULETYPE.SCENE),d=new ut({target:s.getData()}),g=new nt({target:r.getData()}),m=new rt({target:a.getData()}),M=new at({scene:this.scene,target:n.getData()}),v=new ce({target:l.getData()}),w=new ot({scene:this.scene,target:u.getData()}),b=new lt({target:p.getData(),glRenderer:this.renderer}),C=new ct({target:f.getData(),scene:this.scene}),S=e.resourceManager;C.linkTextureMap(d.getMap()),g.linkTextureMap(d.getMap()),w.linkGeometryMap(v.getMap()),w.linkMaterialMap(g.getMap()),d.linkRescourceMap(S.getMappingResourceMap()),v.linkRescourceMap(S.getMappingResourceMap()),s.addCompiler(d),r.addCompiler(g),a.addCompiler(m),n.addCompiler(M),l.addCompiler(v),u.addCompiler(w),p.addCompiler(b),f.addCompiler(C),this.textureCompiler=d,this.materialCompiler=g,this.cameraCompiler=m,this.lightCompiler=M,this.modelCompiler=w,this.geometryCompiler=v,this.rendererCompiler=b,this.sceneCompiler=C,this.dataSupportManager=e.dataSupportManager,this.resourceManager=e.resourceManager}getDataSupportManager(){return this.dataSupportManager}}const dt=function(c,e){const{operate:t,key:s,path:r,value:a}=c;t==="add"&&O(s)&&e.add(s,a)};class be extends j{constructor(e){!e&&(e={});super(dt,e)}}const ft=/^[og]\s*(.+)?/,mt=/^mtllib /,gt=/^usemtl /,Mt=/^usemap /,Oe=new i.Vector3,pe=new i.Vector3,De=new i.Vector3,Le=new i.Vector3,A=new i.Vector3;function vt(){const c={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&this.object.fromDeclaration===!1){this.object.name=e,this.object.fromDeclaration=t!==!1;return}const s=this.object&&typeof this.object.currentMaterial=="function"?this.object.currentMaterial():void 0;if(this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:t!==!1,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(r,a){const n=this._finalize(!1);n&&(n.inherited||n.groupCount<=0)&&this.materials.splice(n.index,1);const l={index:this.materials.length,name:r||"",mtllib:Array.isArray(a)&&a.length>0?a[a.length-1]:"",smooth:n!==void 0?n.smooth:this.smooth,groupStart:n!==void 0?n.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(u){const p={index:typeof u=="number"?u:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return p.clone=this.clone.bind(p),p}};return this.materials.push(l),l},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(r){const a=this.currentMaterial();if(a&&a.groupEnd===-1&&(a.groupEnd=this.geometry.vertices.length/3,a.groupCount=a.groupEnd-a.groupStart,a.inherited=!1),r&&this.materials.length>1)for(let n=this.materials.length-1;n>=0;n--)this.materials[n].groupCount<=0&&this.materials.splice(n,1);return r&&this.materials.length===0&&this.materials.push({name:"",smooth:this.smooth}),a}},s&&s.name&&typeof s.clone=="function"){const r=s.clone(0);r.inherited=!0,this.object.materials.push(r)}this.objects.push(this.object)},finalize:function(){this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0)},parseVertexIndex:function(e,t){const s=parseInt(e,10);return(s>=0?s-1:s+t/3)*3},parseNormalIndex:function(e,t){const s=parseInt(e,10);return(s>=0?s-1:s+t/3)*3},parseUVIndex:function(e,t){const s=parseInt(e,10);return(s>=0?s-1:s+t/2)*2},addVertex:function(e,t,s){const r=this.vertices,a=this.object.geometry.vertices;a.push(r[e+0],r[e+1],r[e+2]),a.push(r[t+0],r[t+1],r[t+2]),a.push(r[s+0],r[s+1],r[s+2])},addVertexPoint:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,s){const r=this.normals,a=this.object.geometry.normals;a.push(r[e+0],r[e+1],r[e+2]),a.push(r[t+0],r[t+1],r[t+2]),a.push(r[s+0],r[s+1],r[s+2])},addFaceNormal:function(e,t,s){const r=this.vertices,a=this.object.geometry.normals;Oe.fromArray(r,e),pe.fromArray(r,t),De.fromArray(r,s),A.subVectors(De,pe),Le.subVectors(Oe,pe),A.cross(Le),A.normalize(),a.push(A.x,A.y,A.z),a.push(A.x,A.y,A.z),a.push(A.x,A.y,A.z)},addColor:function(e,t,s){const r=this.colors,a=this.object.geometry.colors;r[e]!==void 0&&a.push(r[e+0],r[e+1],r[e+2]),r[t]!==void 0&&a.push(r[t+0],r[t+1],r[t+2]),r[s]!==void 0&&a.push(r[s+0],r[s+1],r[s+2])},addUV:function(e,t,s){const r=this.uvs,a=this.object.geometry.uvs;a.push(r[e+0],r[e+1]),a.push(r[t+0],r[t+1]),a.push(r[s+0],r[s+1])},addDefaultUV:function(){const e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){const t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,s,r,a,n,l,u,p){const f=this.vertices.length;let d=this.parseVertexIndex(e,f),g=this.parseVertexIndex(t,f),m=this.parseVertexIndex(s,f);if(this.addVertex(d,g,m),this.addColor(d,g,m),l!==void 0&&l!==""){const M=this.normals.length;d=this.parseNormalIndex(l,M),g=this.parseNormalIndex(u,M),m=this.parseNormalIndex(p,M),this.addNormal(d,g,m)}else this.addFaceNormal(d,g,m);if(r!==void 0&&r!==""){const M=this.uvs.length;d=this.parseUVIndex(r,M),g=this.parseUVIndex(a,M),m=this.parseUVIndex(n,M),this.addUV(d,g,m),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";const t=this.vertices.length;for(let s=0,r=e.length;s<r;s++){const a=this.parseVertexIndex(e[s],t);this.addVertexPoint(a),this.addColor(a)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";const s=this.vertices.length,r=this.uvs.length;for(let a=0,n=e.length;a<n;a++)this.addVertexLine(this.parseVertexIndex(e[a],s));for(let a=0,n=t.length;a<n;a++)this.addUVLine(this.parseUVIndex(t[a],r))}};return c.startObject("",!1),c}class yt extends i.Loader{constructor(e){super(e);this.materials=null}load(e,t,s,r){const a=this,n=new i.FileLoader(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(e,function(l){try{t(a.parse(l))}catch(u){r?r(u):console.error(u),a.manager.itemError(e)}},s,r)}setMaterials(e){return this.materials=e,this}parse(e){const t=new vt;e.indexOf(`\r
`)!==-1&&(e=e.replace(/\r\n/g,`
`)),e.indexOf(`\\
`)!==-1&&(e=e.replace(/\\\n/g,""));const s=e.split(`
`);let r="",a="",n=0,l=[];const u=typeof"".trimLeft=="function";for(let d=0,g=s.length;d<g;d++)if(r=s[d],r=u?r.trimLeft():r.trim(),n=r.length,n!==0&&(a=r.charAt(0),a!=="#"))if(a==="v"){const m=r.split(/\s+/);switch(m[0]){case"v":t.vertices.push(parseFloat(m[1]),parseFloat(m[2]),parseFloat(m[3])),m.length>=7?t.colors.push(parseFloat(m[4]),parseFloat(m[5]),parseFloat(m[6])):t.colors.push(void 0,void 0,void 0);break;case"vn":t.normals.push(parseFloat(m[1]),parseFloat(m[2]),parseFloat(m[3]));break;case"vt":t.uvs.push(parseFloat(m[1]),parseFloat(m[2]));break}}else if(a==="f"){const M=r.substr(1).trim().split(/\s+/),v=[];for(let b=0,C=M.length;b<C;b++){const S=M[b];if(S.length>0){const T=S.split("/");v.push(T)}}const w=v[0];for(let b=1,C=v.length-1;b<C;b++){const S=v[b],T=v[b+1];t.addFace(w[0],S[0],T[0],w[1],S[1],T[1],w[2],S[2],T[2])}}else if(a==="l"){const m=r.substring(1).trim().split(" ");let M=[];const v=[];if(r.indexOf("/")===-1)M=m;else for(let w=0,b=m.length;w<b;w++){const C=m[w].split("/");C[0]!==""&&M.push(C[0]),C[1]!==""&&v.push(C[1])}t.addLineGeometry(M,v)}else if(a==="p"){const M=r.substr(1).trim().split(" ");t.addPointGeometry(M)}else if((l=ft.exec(r))!==null){const m=(" "+l[0].substr(1).trim()).substr(1);t.startObject(m)}else if(gt.test(r))t.object.startMaterial(r.substring(7).trim(),t.materialLibraries);else if(mt.test(r))t.materialLibraries.push(r.substring(7).trim());else if(Mt.test(r))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if(a==="s"){if(l=r.split(" "),l.length>1){const M=l[1].trim().toLowerCase();t.object.smooth=M!=="0"&&M!=="off"}else t.object.smooth=!0;const m=t.object.currentMaterial();m&&(m.smooth=t.object.smooth)}else{if(r==="\0")continue;console.warn('THREE.OBJLoader: Unexpected line: "'+r+'"')}t.finalize();const p=new i.Group;if(p.materialLibraries=[].concat(t.materialLibraries),!(t.objects.length===1&&t.objects[0].geometry.vertices.length===0)===!0)for(let d=0,g=t.objects.length;d<g;d++){const m=t.objects[d],M=m.geometry,v=m.materials,w=M.type==="Line",b=M.type==="Points";let C=!1;if(M.vertices.length===0)continue;const S=new i.BufferGeometry;S.setAttribute("position",new i.Float32BufferAttribute(M.vertices,3)),M.normals.length>0&&S.setAttribute("normal",new i.Float32BufferAttribute(M.normals,3)),M.colors.length>0&&(C=!0,S.setAttribute("color",new i.Float32BufferAttribute(M.colors,3))),M.hasUVIndices===!0&&S.setAttribute("uv",new i.Float32BufferAttribute(M.uvs,2));const T=[];for(let k=0,y=v.length;k<y;k++){const L=v[k],P=L.name+"_"+L.smooth+"_"+C;let E=t.materials[P];if(this.materials!==null){if(E=this.materials.create(L.name),w&&E&&!(E instanceof i.LineBasicMaterial)){const H=new i.LineBasicMaterial;i.Material.prototype.copy.call(H,E),H.color.copy(E.color),E=H}else if(b&&E&&!(E instanceof i.PointsMaterial)){const H=new i.PointsMaterial({size:10,sizeAttenuation:!1});i.Material.prototype.copy.call(H,E),H.color.copy(E.color),H.map=E.map,E=H}}E===void 0&&(w?E=new i.LineBasicMaterial:b?E=new i.PointsMaterial({size:1,sizeAttenuation:!1}):E=new i.MeshPhongMaterial,E.name=L.name,E.flatShading=!L.smooth,E.vertexColors=C,t.materials[P]=E),T.push(E)}let D;if(T.length>1){for(let k=0,y=v.length;k<y;k++){const L=v[k];S.addGroup(L.groupStart,L.groupCount,k)}w?D=new i.LineSegments(S,T):b?D=new i.Points(S,T):D=new i.Mesh(S,T)}else w?D=new i.LineSegments(S,T[0]):b?D=new i.Points(S,T[0]):D=new i.Mesh(S,T[0]);D.name=m.name,p.add(D)}else if(t.vertices.length>0){const d=new i.PointsMaterial({size:1,sizeAttenuation:!1}),g=new i.BufferGeometry;g.setAttribute("position",new i.Float32BufferAttribute(t.vertices,3)),t.colors.length>0&&t.colors[0]!==void 0&&(g.setAttribute("color",new i.Float32BufferAttribute(t.colors,3)),d.vertexColors=!0);const m=new i.Points(g,d);p.add(m)}return p}}class Et extends i.Loader{constructor(e){super(e)}load(e,t,s,r){const a=this,n=this.path===""?i.LoaderUtils.extractUrlBase(e):this.path,l=new i.FileLoader(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{t(a.parse(u,n))}catch(p){r?r(p):console.error(p),a.manager.itemError(e)}},s,r)}setMaterialOptions(e){return this.materialOptions=e,this}parse(e,t){const s=e.split(`
`);let r={};const a=/\s+/,n={};for(let u=0;u<s.length;u++){let p=s[u];if(p=p.trim(),p.length===0||p.charAt(0)==="#")continue;const f=p.indexOf(" ");let d=f>=0?p.substring(0,f):p;d=d.toLowerCase();let g=f>=0?p.substring(f+1):"";if(g=g.trim(),d==="newmtl")r={name:g},n[g]=r;else if(d==="ka"||d==="kd"||d==="ks"||d==="ke"){const m=g.split(a,3);r[d]=[parseFloat(m[0]),parseFloat(m[1]),parseFloat(m[2])]}else r[d]=g}const l=new St(this.resourcePath||t,this.materialOptions);return l.setCrossOrigin(this.crossOrigin),l.setManager(this.manager),l.setMaterials(n),l}}class St{constructor(e="",t={}){this.baseUrl=e,this.options=t,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.crossOrigin="anonymous",this.side=this.options.side!==void 0?this.options.side:i.FrontSide,this.wrap=this.options.wrap!==void 0?this.options.wrap:i.RepeatWrapping}setCrossOrigin(e){return this.crossOrigin=e,this}setManager(e){this.manager=e}setMaterials(e){this.materialsInfo=this.convert(e),this.materials={},this.materialsArray=[],this.nameLookup={}}convert(e){if(!this.options)return e;const t={};for(const s in e){const r=e[s],a={};t[s]=a;for(const n in r){let l=!0,u=r[n];const p=n.toLowerCase();switch(p){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(u=[u[0]/255,u[1]/255,u[2]/255]),this.options&&this.options.ignoreZeroRGBs&&u[0]===0&&u[1]===0&&u[2]===0&&(l=!1);break}l&&(a[p]=u)}}return t}preload(){for(const e in this.materialsInfo)this.create(e)}getIndex(e){return this.nameLookup[e]}getAsArray(){let e=0;for(const t in this.materialsInfo)this.materialsArray[e]=this.create(t),this.nameLookup[t]=e,e++;return this.materialsArray}create(e){return this.materials[e]===void 0&&this.createMaterial_(e),this.materials[e]}createMaterial_(e){const t=this,s=this.materialsInfo[e],r={name:e,side:this.side};function a(l,u){return typeof u!="string"||u===""?"":/^https?:\/\//i.test(u)?u:l+u}function n(l,u){if(r[l])return;const p=t.getTextureParams(u,r),f=t.loadTexture(a(t.baseUrl,p.url));f.repeat.copy(p.scale),f.offset.copy(p.offset),f.wrapS=t.wrap,f.wrapT=t.wrap,r[l]=f}for(const l in s){const u=s[l];let p;if(u!=="")switch(l.toLowerCase()){case"kd":r.color=new i.Color().fromArray(u);break;case"ks":r.specular=new i.Color().fromArray(u);break;case"ke":r.emissive=new i.Color().fromArray(u);break;case"map_kd":n("map",u);break;case"map_ks":n("specularMap",u);break;case"map_ke":n("emissiveMap",u);break;case"norm":n("normalMap",u);break;case"map_bump":case"bump":n("bumpMap",u);break;case"map_d":n("alphaMap",u),r.transparent=!0;break;case"ns":r.shininess=parseFloat(u);break;case"d":p=parseFloat(u),p<1&&(r.opacity=p,r.transparent=!0);break;case"tr":p=parseFloat(u),this.options&&this.options.invertTrProperty&&(p=1-p),p>0&&(r.opacity=1-p,r.transparent=!0);break}}return this.materials[e]=new i.MeshPhongMaterial(r),this.materials[e]}getTextureParams(e,t){const s={scale:new i.Vector2(1,1),offset:new i.Vector2(0,0)},r=e.split(/\s+/);let a;return a=r.indexOf("-bm"),a>=0&&(t.bumpScale=parseFloat(r[a+1]),r.splice(a,2)),a=r.indexOf("-s"),a>=0&&(s.scale.set(parseFloat(r[a+1]),parseFloat(r[a+2])),r.splice(a,4)),a=r.indexOf("-o"),a>=0&&(s.offset.set(parseFloat(r[a+1]),parseFloat(r[a+2])),r.splice(a,4)),s.url=r.join(" ").trim(),s}loadTexture(e,t,s,r,a){const n=this.manager!==void 0?this.manager:i.DefaultLoadingManager;let l=n.getHandler(e);l===null&&(l=new i.TextureLoader(n)),l.setCrossOrigin&&l.setCrossOrigin(this.crossOrigin);const u=l.load(e,s,r,a);return t!==void 0&&(u.mapping=t),u}}h.LOADEEVENTTYPE=void 0,function(c){c.LOADING="loading",c.DETAILLOADING="detailLoading",c.DETAILLOADED="detailLoaded",c.LOADED="loaded"}(h.LOADEEVENTTYPE||(h.LOADEEVENTTYPE={}));class Ct extends i.EventDispatcher{constructor(){super();o(this,"resourceMap");o(this,"loaderMap");o(this,"loadTotal");o(this,"loadSuccess");o(this,"loadError");o(this,"isError");o(this,"isLoading");o(this,"isLoaded");o(this,"loadDetailMap");this.resourceMap=new Map,this.loadTotal=0,this.loadSuccess=0,this.loadError=0,this.isError=!1,this.isLoading=!1,this.isLoaded=!1,this.loadDetailMap={};const e=new i.ImageLoader;this.loaderMap={jpg:e,png:e,jpeg:e,obj:new yt,mtl:new Et}}load(e){var r;if(this.isLoading=!0,e.length<=0)return this.checkLoaded(),console.warn("url list is empty."),this;this.loadTotal+=e.length;const t=this.loaderMap,s=this.loadDetailMap;for(let a of e){const n={url:a,progress:0,error:!1,message:a};s[a]=n;const l=(r=a.split(".").pop())==null?void 0:r.toLocaleLowerCase();if(!l){n.message=`url: ${a} \u5730\u5740\u6709\u8BEF\uFF0C\u65E0\u6CD5\u83B7\u53D6\u6587\u4EF6\u683C\u5F0F\u3002`,n.error=!0,this.isError=!0,this.loadError+=1;continue}const u=t[l];if(!u){n.message=`url: ${a} \u4E0D\u652F\u6301\u6B64\u6587\u4EF6\u683C\u5F0F\u52A0\u8F7D\u3002`,n.error=!0,this.isError=!0,this.loadError+=1;continue}u.loadAsync(a,p=>{n.progress=Number((p.loaded/p.total).toFixed(2)),this.dispatchEvent({type:"detailLoading",detail:n})}).then(p=>{n.progress=1,this.loadSuccess+=1,this.resourceMap.set(a,p),this.dispatchEvent({type:"detailLoaded",detail:n}),this.dispatchEvent({type:"loading",loadTotal:this.loadTotal,loadSuccess:this.loadSuccess,loadError:this.loadError}),this.checkLoaded()}).catch(p=>{n.error=!0,n.message=JSON.stringify(p),this.loadError+=1,this.dispatchEvent({type:"detailLoaded",detail:n}),this.dispatchEvent({type:"loading",loadTotal:this.loadTotal,loadSuccess:this.loadSuccess,loadError:this.loadError}),this.checkLoaded()})}return this}loaded(){return this.dispatchEvent({type:"loaded",loadTotal:this.loadTotal,loadSuccess:this.loadSuccess,loadError:this.loadError,resourceMap:this.resourceMap}),this}reset(){return this.loadTotal=0,this.loadSuccess=0,this.loadError=0,this.isError=!1,this.isLoading=!1,this.isLoaded=!1,this.loadDetailMap={},this}dispose(){return this.resourceMap.clear(),this}checkLoaded(){return this.loadTotal===this.loadSuccess+this.loadError&&(this.isError=!0,this.isLoaded=!0,this.isLoading=!1,this.loaded()),this}}h.RESOURCEEVENTTYPE=void 0,function(c){c.MAPPED="mapped"}(h.RESOURCEEVENTTYPE||(h.RESOURCEEVENTTYPE={}));class Tt extends i.EventDispatcher{constructor(){super();o(this,"mappingResourceMap",new Map);o(this,"configMappingMap",new Map)}mappingResource(e){const t=this.mappingResourceMap,s=this.configMappingMap,r=function(a,n){const l={type:`${n.type}`};let u="";if(n.geometry&&(u=`${a}.geometry`,t.set(u,n.geometry),l.geometry=u),n.material){const p=n.material;p instanceof Array?(l.material=[],p.forEach((f,d,g)=>{u=`${a}.material.${d}`,t.set(u,f),l.material[d]=u})):(u=`${a}.material`,t.set(u,p),l.material=u)}return n.children.length&&(l.children=[],n.children.forEach((p,f,d)=>{u=`${a}.children.${f}`,l.children[f]=r(u,p)})),l};return e.forEach((a,n)=>{a instanceof HTMLElement?t.set(n,a):a instanceof i.Object3D&&s.set(n,r(n,a))}),this.dispatchEvent({type:"mapped",mappingResourceMap:this.mappingResourceMap,configMappingMap:this.configMappingMap}),this}getMappingResourceMap(){return this.mappingResourceMap}getResource(e){return this.mappingResourceMap.get(e)}getConfig(e){return this.configMappingMap.get(e)}dispose(){}}const Z=()=>({vid:"",type:"Object3D",castShadow:!0,receiveShadow:!0,lookAt:"",position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:0},scale:{x:1,y:1,z:1}}),Pe=function(){return Object.assign(Z(),{type:"Light",color:"rgb(255, 255, 255)",intensity:1})},xt=function(){return Object.assign(Z(),{type:"AmbientLight",color:"rgb(255, 255, 255)",intensity:1})},wt=function(){return Object.assign(Pe(),{type:"PointLight",distance:150,decay:.01})},bt=function(){return Object.assign(Pe(),{type:"SpotLight",distance:150,angle:Math.PI/180*45,penumbra:.01,decay:.01})},de=function(){return{vid:"",type:"Geometry",position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:0},scale:{x:1,y:1,z:1}}},Ot=function(){return Object.assign(de(),{type:"BoxGeometry",width:5,height:5,depth:5,widthSegments:1,heightSegments:1,depthSegments:1})},Dt=function(){return Object.assign(de(),{type:"SphereGeometry",radius:1,widthSegments:32,heightSegments:32,phiStart:0,phiLength:Math.PI*2,thetaStart:0,thetaLength:Math.PI})},Lt=function(){return Object.assign(de(),{type:"LoadGeometry",url:""})},re=function(){return Object.assign(Z(),{type:"Mesh",geometry:"",material:""})},Pt=function(){return{vid:"",type:"Texture",name:"",image:"",mapping:i.UVMapping,wrapS:i.ClampToEdgeWrapping,wrapT:i.ClampToEdgeWrapping,magFilter:i.LinearFilter,minFilter:i.LinearMipmapLinearFilter,anisotropy:1,format:i.RGBAFormat,offset:{x:0,y:0},repeat:{x:1,y:1},rotation:0,center:{x:0,y:0},matrixAutoUpdate:!0,encoding:i.LinearEncoding,needsUpdate:!1}},Rt=function(){return Object.assign(Pt(),{type:"ImageTexture"})},At=function(){return{vid:"",type:"Material",alphaTest:0,colorWrite:!0,depthTest:!0,depthWrite:!0,format:i.RGBAFormat,fog:!0,name:"",needsUpdate:!1,opacity:1,dithering:!1,shadowSide:null,side:i.FrontSide,toneMapped:!0,transparent:!1,visible:!0}},Bt=function(){return Object.assign(At(),{type:"MeshStandardMaterial",aoMapIntensity:1,bumpScale:1,color:"rgb(255, 255, 255)",displacementScale:1,displacementBias:0,emissive:"rgb(0, 0, 0)",emissiveIntensity:1,envMapIntensity:1,flatShading:!1,lightMapIntensity:1,metalness:0,normalMapType:i.TangentSpaceNormalMap,refractionRatio:.98,roughness:1,wireframe:!1,wireframeLinecap:"round",wireframeLinejoin:"round",roughnessMap:"",normalMap:"",metalnessMap:"",map:"",lightMap:"",envMap:"",emissiveMap:"",displacementMap:"",bumpMap:"",alphaMap:"",aoMap:""})},kt=function(){return Object.assign(Z(),{type:"PerspectiveCamera",fov:45,aspect:1920/1080,near:1,far:1e3})},Gt=function(){return Object.assign(Z(),{type:"OrthographicCamera",left:1920/16,right:1920/16,top:1080/16,bottom:1080/16,near:0,far:1e3})};h.CONFIGTYPE=void 0,function(c){c.BOXGEOMETRY="BoxGeometry",c.SPHEREGEOMETRY="SphereGeometry",c.LOADGEOMETRY="LoadGeometry",c.MODEL="Model",c.MESH="Mesh",c.LINE="Line",c.POINTS="Points",c.IMAGETEXTURE="ImageTexture",c.MESHSTANDARDMATERIAL="MeshStandardMaterial",c.AMBIENTLIGHT="AmbientLight",c.SPOTLIGHT="SpotLight",c.POINTLIGHT="PointLight",c.PERSPECTIVECAMERA="PerspectiveCamera",c.ORTHOGRAPHICCAMERA="OrthographicCamera",c.WEBGLRENDERER="WebGLRenderer",c.SCENE="Scene"}(h.CONFIGTYPE||(h.CONFIGTYPE={}));const Re={[h.CONFIGTYPE.IMAGETEXTURE]:Rt,[h.CONFIGTYPE.MESHSTANDARDMATERIAL]:Bt,[h.CONFIGTYPE.AMBIENTLIGHT]:xt,[h.CONFIGTYPE.SPOTLIGHT]:bt,[h.CONFIGTYPE.POINTLIGHT]:wt,[h.CONFIGTYPE.BOXGEOMETRY]:Ot,[h.CONFIGTYPE.SPHEREGEOMETRY]:Dt,[h.CONFIGTYPE.LOADGEOMETRY]:Lt,[h.CONFIGTYPE.MODEL]:re,[h.CONFIGTYPE.MESH]:re,[h.CONFIGTYPE.LINE]:re,[h.CONFIGTYPE.POINTS]:re,[h.CONFIGTYPE.PERSPECTIVECAMERA]:kt,[h.CONFIGTYPE.ORTHOGRAPHICCAMERA]:Gt,[h.CONFIGTYPE.WEBGLRENDERER]:he,[h.CONFIGTYPE.SCENE]:ue},Ae=function(c,e){if(Re[c]){const t=(r,a)=>{for(const n in a){if(r[n]===void 0){console.warn(`'${c}' config can not set key: ${n}`);continue}typeof a[n]=="object"&&a[n]!==null?t(r[n],a[n]):r[n]=a[n]}},s=Re[c]();return t(s,e),s}else return console.error(`type: ${c} can not be found in configList.`),null},Ft=function(c,e){const{operate:t,key:s,path:r,value:a}=c;t==="add"&&O(s)&&e.add(s,a)};class Be extends j{constructor(e){!e&&(e={});super(Ft,e)}}const It=function(c,e){const{operate:t,key:s,path:r,value:a}=c;t==="add"&&O(s)&&e.add(s,a)};class ke extends j{constructor(e){!e&&(e={});super(It,e)}}const Vt=function(c,e){const{operate:t,key:s,path:r,value:a}=c;t==="add"&&O(s)&&e.add(s,a)};class Ge extends j{constructor(e){!e&&(e={});super(Vt,e)}}const Ut=function(c,e){const{operate:t,key:s,path:r,value:a}=c;t==="set"&&e.set(r.concat([]),s,a)};class jt extends j{constructor(e){!e&&(e={WebGLRenderer:he()});super(Ut,e)}}const Ht=function(c,e){const{operate:t,key:s,path:r,value:a}=c;t==="set"&&e.set(r.concat([]),s,a)};class Nt extends j{constructor(e){!e&&(e={scene:ue()});super(Ht,e)}}class _t{constructor(e){o(this,"cameraDataSupport");o(this,"lightDataSupport");o(this,"geometryDataSupport");o(this,"modelDataSupport");o(this,"textureDataSupport");o(this,"materialDataSupport");o(this,"rendererDataSupport");o(this,"sceneDataSupport");o(this,"dataSupportMap");this.cameraDataSupport=(e==null?void 0:e.cameraDataSupport)||new Ge,this.lightDataSupport=(e==null?void 0:e.lightDataSupport)||new xe,this.geometryDataSupport=(e==null?void 0:e.geometryDataSupport)||new be,this.modelDataSupport=(e==null?void 0:e.modelDataSupport)||new we,this.textureDataSupport=(e==null?void 0:e.textureDataSupport)||new Be,this.materialDataSupport=(e==null?void 0:e.materialDataSupport)||new ke,this.rendererDataSupport=(e==null?void 0:e.rendererDataSupport)||new jt,this.sceneDataSupport=(e==null?void 0:e.sceneDataSupport)||new Nt;const t=new Map;t.set(h.MODULETYPE.CAMERA,this.cameraDataSupport),t.set(h.MODULETYPE.LIGHT,this.lightDataSupport),t.set(h.MODULETYPE.GEOMETRY,this.geometryDataSupport),t.set(h.MODULETYPE.MODEL,this.modelDataSupport),t.set(h.MODULETYPE.TEXTURE,this.textureDataSupport),t.set(h.MODULETYPE.MATERIAL,this.materialDataSupport),t.set(h.MODULETYPE.RENDERER,this.rendererDataSupport),t.set(h.MODULETYPE.SCENE,this.sceneDataSupport),this.dataSupportMap=t}getDataSupport(e){return this.dataSupportMap.has(e)?this.dataSupportMap.get(e):(console.warn(`can not found this type in dataSupportManager: ${e}`),null)}load(e){return e.camera&&this.cameraDataSupport.load(e.camera),e.geometry&&this.geometryDataSupport.load(e.geometry),e.light&&this.lightDataSupport.load(e.light),e.material&&this.materialDataSupport.load(e.material),e.model&&this.modelDataSupport.load(e.model),e.texture&&this.textureDataSupport.load(e.texture),e.renderer&&this.rendererDataSupport.load(e.renderer),e.scene&&this.sceneDataSupport.load(e.scene),this}toJSON(){const e={[h.MODULETYPE.RENDERER]:this.rendererDataSupport.toJSON(),[h.MODULETYPE.SCENE]:this.sceneDataSupport.toJSON(),[h.MODULETYPE.CAMERA]:this.cameraDataSupport.toJSON(),[h.MODULETYPE.GEOMETRY]:this.geometryDataSupport.toJSON(),[h.MODULETYPE.LIGHT]:this.lightDataSupport.toJSON(),[h.MODULETYPE.MATERIAL]:this.materialDataSupport.toJSON(),[h.MODULETYPE.MODEL]:this.modelDataSupport.toJSON(),[h.MODULETYPE.TEXTURE]:this.textureDataSupport.toJSON()};return JSON.stringify(e)}}const me=class{constructor(){o(this,"supportData");o(this,"supportDataType")}create(e){return e?(this.supportData={},this.supportDataType=e,this):(console.warn("you must give a module type in create params"),this)}add(e){return!this.supportData||!this.supportDataType?(console.warn("you must call 'create' method before the 'add' method"),this):e.type?me.dataTypeMap[e.type]!==this.supportDataType?(console.warn(`current generator create config which module is in: ${this.supportDataType}, but you provide type is '${e.type}'`),this):(this.supportData[e.vid]=Ae(e.type,e),this):(console.warn("config can not found attribute 'type'"),this)}get(){return this.supportDataType=void 0,this.supportData?this.supportData:{}}};let fe=me;o(fe,"dataTypeMap",{[h.CONFIGTYPE.IMAGETEXTURE]:h.MODULETYPE.TEXTURE,[h.CONFIGTYPE.MESHSTANDARDMATERIAL]:h.MODULETYPE.MATERIAL,[h.CONFIGTYPE.AMBIENTLIGHT]:h.MODULETYPE.LIGHT,[h.CONFIGTYPE.SPOTLIGHT]:h.MODULETYPE.LIGHT,[h.CONFIGTYPE.POINTLIGHT]:h.MODULETYPE.LIGHT,[h.CONFIGTYPE.BOXGEOMETRY]:h.MODULETYPE.GEOMETRY,[h.CONFIGTYPE.SPHEREGEOMETRY]:h.MODULETYPE.GEOMETRY,[h.CONFIGTYPE.LOADGEOMETRY]:h.MODULETYPE.GEOMETRY,[h.CONFIGTYPE.MODEL]:h.MODULETYPE.MODEL,[h.CONFIGTYPE.MESH]:h.MODULETYPE.MODEL,[h.CONFIGTYPE.LINE]:h.MODULETYPE.MODEL,[h.CONFIGTYPE.POINTS]:h.MODULETYPE.MODEL,[h.CONFIGTYPE.PERSPECTIVECAMERA]:h.MODULETYPE.CAMERA,[h.CONFIGTYPE.ORTHOGRAPHICCAMERA]:h.MODULETYPE.CAMERA,[h.CONFIGTYPE.WEBGLRENDERER]:h.MODULETYPE.RENDERER,[h.CONFIGTYPE.SCENE]:h.MODULETYPE.SCENE}),h.CameraDataSupport=Ge,h.CameraHelper=ae,h.DataSupportManager=_t,h.GeometryDataSupport=be,h.LightDataSupport=xe,h.LoaderManager=Ct,h.MaterialDataSupport=ke,h.ModelDataSupport=we,h.ModelingEngine=Te,h.ModelingEngineSupport=pt,h.PointLightHelper=ve,h.ResourceManager=Tt,h.SupportDataGenerator=fe,h.TextureDataSupport=Be,h.generateConfig=Ae,Object.defineProperty(h,"__esModule",{value:!0}),h[Symbol.toStringTag]="Module"});
