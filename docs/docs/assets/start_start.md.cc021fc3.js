import{_ as s,c as n,o as a,d as l}from"./app.5e0e61e4.js";const p="/vis-three/docs/image/start/long-engine.png",d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"为什么要用 VIS-THREE","slug":"为什么要用-vis-three","link":"#为什么要用-vis-three","children":[{"level":3,"title":"原生 three.js 项目开发功能模块难以组织","slug":"原生-three-js-项目开发功能模块难以组织","link":"#原生-three-js-项目开发功能模块难以组织","children":[]},{"level":3,"title":"项目迭代非常困难麻烦","slug":"项目迭代非常困难麻烦","link":"#项目迭代非常困难麻烦","children":[]},{"level":3,"title":"开发中所涉及到的“坑”特别多","slug":"开发中所涉及到的-坑-特别多","link":"#开发中所涉及到的-坑-特别多","children":[]},{"level":3,"title":"功能插件化","slug":"功能插件化","link":"#功能插件化","children":[]},{"level":3,"title":"逻辑策略化","slug":"逻辑策略化","link":"#逻辑策略化","children":[]},{"level":3,"title":"场景配置化","slug":"场景配置化","link":"#场景配置化","children":[]}]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"整体安装","slug":"整体安装","link":"#整体安装","children":[]},{"level":3,"title":"整体安装后的使用","slug":"整体安装后的使用","link":"#整体安装后的使用","children":[]},{"level":3,"title":"按需安装","slug":"按需安装","link":"#按需安装","children":[]},{"level":3,"title":"按需安装后的使用","slug":"按需安装后的使用","link":"#按需安装后的使用","children":[]}]}],"relativePath":"start/start.md"}'),o={name:"start/start.md"},e=l('<h2 id="为什么要用-vis-three" tabindex="-1">为什么要用 VIS-THREE <a class="header-anchor" href="#为什么要用-vis-three" aria-hidden="true">#</a></h2><h3 id="原生-three-js-项目开发功能模块难以组织" tabindex="-1">原生 three.js 项目开发功能模块难以组织 <a class="header-anchor" href="#原生-three-js-项目开发功能模块难以组织" aria-hidden="true">#</a></h3><p>当我们使用 three.js 进行 web3D 相关项目的开发，不管我们是参考<a href="https://threejs.org/" target="_blank" rel="noreferrer">three.js 官网</a>的例子，还是其他的插件 demo，或者是自己从事项目开发都会发现一个很大的问题，就是使用 three.js 进行开发构建项目时候的 <strong>代码组织</strong> 问题。</p><p>我们会发现使用原生 three.js 进行项目开发的时候很难找到一个很好的形式去组织我们的项目代码。第一阶段的功能完成之后，大多数情况下，我们会得到一个“又臭又长”的引擎文件，就算在项目初期进行了很好的模块划分，但是我们还会遇到后面的问题。</p><p><img src="'+p+`" alt="/image/start/long-engine.png"></p><h3 id="项目迭代非常困难麻烦" tabindex="-1">项目迭代非常困难麻烦 <a class="header-anchor" href="#项目迭代非常困难麻烦" aria-hidden="true">#</a></h3><p>项目功能迭代会非常头疼，每当要增加功能或者逻辑实现的时候，我们很难下手，因为很多功能逻辑的增加没有一个统一的接入点，我们需要在各种已经完成的逻辑块或者功能块之间去添加新的功能逻辑，如果这个时候再加上“敏捷开发”的 buff，项目会何去何从？开发人员们又将何去何从？</p><h3 id="开发中所涉及到的-坑-特别多" tabindex="-1">开发中所涉及到的“坑”特别多 <a class="header-anchor" href="#开发中所涉及到的-坑-特别多" aria-hidden="true">#</a></h3><p>three.js 算是一个 web3D 的库，它只提供了最基本或者最原始的项目构建手段，就是因为原始和基本，使得功能非常强大，但是也是因为原始基本，在项目构建的过程中，会有很多的细节问题需要我们去发现和攻克，“坑”踩了一遍，换了一个项目，还要踩第二遍？你踩了一遍，别人再踩一遍？</p><h3 id="功能插件化" tabindex="-1">功能插件化 <a class="header-anchor" href="#功能插件化" aria-hidden="true">#</a></h3><p>为了解决<code>three.js</code>相关项目开发的代码组织问题，降低功能代码间的耦合，提高功能复用性，提高扩展能力，<code>vis-three</code>采用了插件化的组织形式，<code>vis-three</code>的核心引擎提供功能插件的拔插能力，对各模块各功能进行解耦开发，持续集成，兼容拓展。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineEngine</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vis-three/core</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">WebGLRendererPlugin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vis-three/webgl-renderer-plugin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> engine </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineEngine</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">WebGLRendererPlugin</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">antialias</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">alpha</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="逻辑策略化" tabindex="-1">逻辑策略化 <a class="header-anchor" href="#逻辑策略化" aria-hidden="true">#</a></h3><p>功能插件化之后，提高了引擎的功能兼容和集成，但是如何解决各个功能之间的联通问题和兼容问题？<code>vis-three</code>提供策略注入与策略回滚能力，策略是组织不同插件去实现一个完整的功能逻辑的方式，将逻辑与插件解耦，提高插件兼容，提高业务功能兼容，更好的持续集成。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineEngine</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vis-three/core</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">WebGLRendererPlugin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vis-three/webgl-renderer-plugin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">RenderManagerPlugin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vis-three/render-manager-plugin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">EffectComposerPlugin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vis-three/effect-composer-plugin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">EffectRenderStrategy</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vis-three/effect-render-strategy</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> engine </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineEngine</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">WebGLRendererPlugin</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">antialias</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">alpha</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">RenderManagerPlugin</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">EffectComposerPlugin</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">WebGLMultisampleRenderTarget</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">strategy</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#82AAFF;">EffectRenderStrategy</span><span style="color:#A6ACCD;">()]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="场景配置化" tabindex="-1">场景配置化 <a class="header-anchor" href="#场景配置化" aria-hidden="true">#</a></h3><p>插件化和策略化也只是一种更好的代码组织方式和形式，但是对于<code>three.js</code>相关项目开发的门槛是没有怎么改变的，我们在进行相关<code>three.js</code>相关项目开发的时候，<code>three.js</code>本身的门槛，比如对图形学的理解，各种对象的属性理解，各种各样的 api，这些东西本身的门槛就很高，需要我们有一定的理解和积累。</p><p>那么为了降低<code>three.js</code>本身的开发门槛，与避免重复踩坑，<code>vis-three</code>提供配置化中间层，将所有<code>three.js</code>对象动作配置化，我们在开发场景的时候，不用再过多的关注<code>three.js</code>本身的东西，而只用关注我们场景配置的结构，行程构成，这样子就降低开发负担，你只用关心配置，剩下的交给我们。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">DisplayEngineSupport</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vis-three/display-engine-support</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">generateConfig</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">CONFIGTYPE</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vis-three/middleware</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> engine </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DisplayEngineSupport</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setDom</span><span style="color:#A6ACCD;">(document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">play</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">generateConfig</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">injectEngine </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> engine</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> scene </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">generateConfig</span><span style="color:#A6ACCD;">(CONFIGTYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SCENE)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">engine</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setSceneBySymbol</span><span style="color:#A6ACCD;">(scene</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">vid)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">generateConfig</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">injectScene </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> material </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">generateConfig</span><span style="color:#A6ACCD;">(CONFIGTYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MESHSTANDARDMATERIAL</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rgb(255, 0, 0)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> geometry </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">generateConfig</span><span style="color:#A6ACCD;">(CONFIGTYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BOXGEOMETRY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">40</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">depth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">generateConfig</span><span style="color:#A6ACCD;">(CONFIGTYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MESH</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">geometry</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> geometry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">vid</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">material</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> material</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">vid</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-hidden="true">#</a></h2><h3 id="整体安装" tabindex="-1">整体安装 <a class="header-anchor" href="#整体安装" aria-hidden="true">#</a></h3><p><code>vis-three</code>依赖于<code>three</code>，但是不强制依赖某一个特定版本，最优的依赖版本是官网示例的<code>three</code>版本，所以在安装<code>vis-three</code>之前，需要先安装<code>three</code>。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm i three</span></span>
<span class="line"><span style="color:#A6ACCD;">npm i vis-three</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="整体安装后的使用" tabindex="-1">整体安装后的使用 <a class="header-anchor" href="#整体安装后的使用" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> VIS </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vis-three</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> engine </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> VIS</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">DisplayEngine</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="按需安装" tabindex="-1">按需安装 <a class="header-anchor" href="#按需安装" aria-hidden="true">#</a></h3><p>推荐使用按需安装，由于大多数情况下，大部分项目使用不到所有的插件，策略，各种库，为了保证构建效率和依赖下载效率，推荐使用按需安装，能够优化整体的开发流程。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm i three</span></span>
<span class="line"><span style="color:#A6ACCD;">npm i @vis-three/display-engine</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="按需安装后的使用" tabindex="-1">按需安装后的使用 <a class="header-anchor" href="#按需安装后的使用" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">DisplayEngine</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vis-three/display-engine</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> engine </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DisplayEngine</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>vis-three</code>官方的所有子包都在<code>npm</code>的<code>@vis-three</code>组织下，大家可以根据需要进行相关的查找安装使用。</p></div>`,31),t=[e];function c(r,D,y,F,i,C){return a(),n("div",null,t)}const h=s(o,[["render",c]]);export{d as __pageData,h as default};
