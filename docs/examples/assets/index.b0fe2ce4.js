var h=Object.defineProperty;var v=(c,n,o)=>n in c?h(c,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):c[n]=o;var l=(c,n,o)=>(v(c,typeof n!="symbol"?n+"":n,o),o);class u{constructor(n){l(this,"canvas");this.canvas=document.createElement("canvas");const o=window.devicePixelRatio;this.canvas.width=((n==null?void 0:n.width)||512)*o,this.canvas.height=((n==null?void 0:n.height)||512)*o,this.canvas.style.backgroundColor=(n==null?void 0:n.bgColor)||"rgb(255, 255, 255)";const i=this.canvas.getContext("2d");i&&i.scale(window.devicePixelRatio,window.devicePixelRatio)}get(){return this.canvas}getDom(){return this.canvas}clear(n=0,o=0,i,t){!i&&(i=this.canvas.width),!t&&(t=this.canvas.height);const s=this.canvas.getContext("2d");return s?(s.clearRect(n,o,i,t),this):(console.warn("you browser can not support canvas 2d"),this)}draw(n){const o=this.canvas.getContext("2d");return o?(n(o),this):(console.warn("you browser can not support canvas 2d"),this)}preview(n){const o=this.canvas;return o.style.position="fixed",o.style.top=(n==null?void 0:n.top)||"5%",o.style.left=(n==null?void 0:n.left)||"5%",o.style.right=(n==null?void 0:n.right)||"unset",o.style.bottom=(n==null?void 0:n.bottom)||"unset",n!=null&&n.scale&&(o.style.transform=`scale(${n.scale})`),document.body.appendChild(this.canvas),this}}export{u as C};
