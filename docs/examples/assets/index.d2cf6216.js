import{a as m,E}from"./index.8b9e7665.js";import{L as p,a as i,b as g}from"./index.453e5660.js";import{P as h}from"./index.f27dc7ff.js";import{E as S}from"./index.9a3e1c8e.js";import{R}from"./index.6ff295ff.js";import{R as f,D as u,a as y,C as A,b as C,c as L,M as d}from"./index.5e7c9076.js";const M="ResourceManagerPlugin",P=function(t){return{name:M,install(e){const r=new f(t.resources);e.resourceManager=r,e.registerResources=a=>{const s=new Map;return Object.keys(a).forEach(o=>{s.set(o,a[o])}),r.mappingResource(s),e}},dispose(e){e.addEventListener(m.DISPOSE,()=>{e.resourceManager.dispose()})}}},O="LoaderDataSupportStrategy",x=function(){let t,e;return{name:O,condition:[u,p],exec(r){t=r.toJSON,r.toJSON=function(){const a={assets:JSON.parse(r.loaderManager.toJSON())};return r.dataSupportManager.toJSON(a)},e=r.exportConfig,r.exportConfig=function(){let a={};return a={assets:r.loaderManager.exportConfig()},r.dataSupportManager.exportConfig(a)}},rollback(r){r.toJSON=t,r.exportConfig=e}}},N="LoaderMappingStrategy",T=function(){let t,e;return{name:N,condition:[M,p],exec(r){t=r.loadResources,r.loadResources=(a,s)=>{const o=n=>{s(void 0,n),r.resourceManager.removeEventListener(i.LOADED,o)};try{r.resourceManager.addEventListener(i.LOADED,o)}catch(n){s(n)}return r.loaderManager.reset().load(a),r},e=r.loadResourcesAsync,r.loadResourcesAsync=a=>new Promise((s,o)=>{try{r.loaderManager.once(i.LOADED,n=>{r.resourceManager.once(y.MAPPED,l=>{s(l)});const c=new Map;a.forEach(l=>{typeof l=="string"?c.set(l,n.resourceMap.get(l)):c.set(l.url,n.resourceMap.get(l.url))}),r.resourceManager.mappingResource(c)})}catch(n){o(n)}r.loaderManager.reset().load(a)})},rollback(r){r.loadResources=t,r.loadResourcesAsync=e}}},D="CompilerSupportStrategy",_=function(){return{name:D,condition:[A,u],exec(t){t.compilerManager.compilerMap.forEach((e,r)=>{var a;e.useEngine(t),(a=t.dataSupportManager.dataSupportMap.get(r))==null||a.addCompiler(e)})},rollback(){}}};class v extends E{constructor(e={},r={}){super(),this.install(g()).install(h()).install(S()).install(R()).install(P({resources:r})).install(C(e)).install(L()),this.exec(x()).exec(T()).exec(_())}loadLifeCycle(e){const r=this.dataSupportManager;e.texture&&r.load({texture:e.texture}),e.material&&r.load({material:e.material}),delete e.texture,delete e.material,r.load(e)}removeLifeCycle(e){const r=this.dataSupportManager,a=e[d.TEXTURE]||[],s=e[d.MATERIAL]||[],o=e.assets||[];delete e.texture,delete e.material,delete e.assets,r.remove(e),r.remove({[d.MATERIAL]:s}),r.remove({[d.TEXTURE]:a});const n=this.resourceManager,c=this.loaderManager;o.forEach(l=>{n.remove(l),c.remove(l)})}loadConfig(e,r){const a=this.renderManager.hasRendering();if(a&&this.renderManager.stop(),e.assets&&e.assets.length){const s=o=>{delete e.assets,this.loadLifeCycle(e),this.resourceManager.removeEventListener("mapped",s),r&&r(o),a?this.renderManager.play():this.renderManager.render()};this.resourceManager.addEventListener("mapped",s),this.loaderManager.reset().load(e.assets)}else this.loadLifeCycle(e),r&&r(),a?this.renderManager.play():this.renderManager.render();return this}loadConfigAsync(e){return new Promise((r,a)=>{const s=this.renderManager.hasRendering();s&&this.renderManager.stop(),e.assets&&e.assets.length?this.loadResourcesAsync(e.assets).then(o=>{delete e.assets,this.loadLifeCycle(e),s?this.renderManager.play():this.renderManager.render(),r(o)}):(this.loadLifeCycle(e),s?this.renderManager.play():this.renderManager.render(),r(void 0))})}removeConfig(e){this.removeLifeCycle(e)}getObjectConfig(e){const r=this.getObjectSymbol(e);return r?this.getConfigBySymbol(r):null}setCameraBySymbol(e){const r=this.compilerManager.getCompiler(d.CAMERA);return r.map.has(e)?this.setCamera(r.map.get(e)):console.warn("can not found camera",e),this}setSceneBySymbol(e){const r=this.compilerManager.getCompiler(d.SCENE);return r.map.has(e)?this.setScene(r.map.get(e)):console.warn("can not found scene",e),this}}const j=function(t){const e=new v;return t.plugins&&t.plugins.forEach(r=>{e.install(r)}),t.strategy&&t.strategy.forEach(r=>{e.exec(r)}),e};export{v as E,j as d};
