var E=Object.defineProperty;var b=(a,e,t)=>e in a?E(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var o=(a,e,t)=>(b(a,typeof e!="symbol"?e+"":e,t),t);import{t as h,a as n,v as f}from"../index.4a26448f.js";import{M as u,B as k,a as R,P as K,L,b as g}from"../three.073ebd5b.js";import{W as D,C as M}from"../index.523a52b5.js";import{a as A,b as v,R as S}from"../index.4d1bf992.js";import{E as C,a as N}from"../index.bda3cae9.js";import{G as U}from"../index.cfd9758f.js";const _="@vis-three/keyboard-move-render-strategy";class P{constructor(e,t){o(this,"object");o(this,"domElement");o(this,"enabled",!0);o(this,"movementSpeed",1);o(this,"moveForward",!1);o(this,"moveBackward",!1);o(this,"moveLeft",!1);o(this,"moveRight",!1);o(this,"moveUp",!1);o(this,"moveDown",!1);o(this,"_onKeyDown",this.onKeyDown.bind(this));o(this,"_onKeyUp",this.onKeyUp.bind(this));t===void 0&&(console.warn('THREE.KeyboardMoveControls: The second parameter "domElement" is now mandatory.'),t=document.body),this.object=e,this.domElement=t,window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp)}setCamera(e){this.object=e}setDom(e){this.domElement=e}onKeyDown(e){switch(e.code){case"ArrowUp":case"KeyW":this.moveForward=!0;break;case"ArrowLeft":case"KeyA":this.moveLeft=!0;break;case"ArrowDown":case"KeyS":this.moveBackward=!0;break;case"ArrowRight":case"KeyD":this.moveRight=!0;break;case"KeyR":this.moveUp=!0;break;case"KeyF":this.moveDown=!0;break}}onKeyUp(e){switch(e.code){case"ArrowUp":case"KeyW":this.moveForward=!1;break;case"ArrowLeft":case"KeyA":this.moveLeft=!1;break;case"ArrowDown":case"KeyS":this.moveBackward=!1;break;case"ArrowRight":case"KeyD":this.moveRight=!1;break;case"KeyR":this.moveUp=!1;break;case"KeyF":this.moveDown=!1;break}}update(e){if(this.enabled===!1)return;const t=e*this.movementSpeed;this.moveForward&&this.object.translateZ(-t),this.moveBackward&&this.object.translateZ(t),this.moveLeft&&this.object.translateX(-t),this.moveRight&&this.object.translateX(t),this.moveUp&&this.object.translateY(t),this.moveDown&&this.object.translateY(-t)}dispose(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp)}}const T="@vis-three/keyboard-move-controls-plugin",w=h(T),j=function(a={}){let e,t,m;return{name:w,install(s){const r=new P(s.camera,s.dom);r.movementSpeed=a.movementSpeed||1,s.keyboardMoveControls=r,e=c=>{r.setDom(c.dom)},s.addEventListener(n.SETDOM,e),t=c=>{r.setCamera(c.camera)},s.addEventListener(n.SETCAMERA,t),m=s.render,s.render=function(){m(),r.update(1e3/60)}},dispose(s){s.removeEventListener(n.SETDOM,e),s.removeEventListener(n.SETCAMERA,t),s.render=m}}},B=h(_),F=function(){let a;return{name:B,condition:[w,A],exec(e){a=t=>{e.keyboardMoveControls.update(t.delta)},e.renderManager.addEventListener(v.RENDER,a)},rollback(e){e.renderManager.removeEventListener(v.RENDER,a)}}},l=f({plugins:[S(),D({antialias:!0,alpha:!0}),C({WebGLMultisampleRenderTarget:!0}),M(),U(),j({movementSpeed:30})],strategy:[N(),F()]}).setDom(document.getElementById("app")).setSize().play(),i=l.scene,d=new u(new k(10,10,10),new R({color:"rgb(255, 105, 100)"}));d.position.x=10;i.add(d);const p=new K("rgb(255, 255, 255)",1,300,0);p.position.y=30;i.add(p);const G=new L(d.geometry);i.add(G);const y=new g(d.geometry);y.position.x=-10;i.add(y);window.engine=l;document.getElementById("lock").onclick=()=>{l.pointerLockControls.lock()};
