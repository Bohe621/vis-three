(function(r,n){typeof exports=="object"&&typeof module<"u"?n(exports,require("@vis-three/tdcm"),require("@vis-three/module-object"),require("three"),require("@vis-three/core")):typeof define=="function"&&define.amd?define(["exports","@vis-three/tdcm","@vis-three/module-object","three","@vis-three/core"],n):(r=typeof globalThis<"u"?globalThis:r||self,n((r["vis-three"]=r["vis-three"]||{},r["vis-three"]["module-camera"]={}),r.tdcm,r.moduleObject,r.three,r.core))})(this,function(r,n,c,p,s){"use strict";function E(d){d.setCameraBySymbol=function(e){const i=this.getObjectFromModule(n.MODULE_TYPE.CAMERA,e);return i?this.setCamera(i):console.warn("can not found camera",e),this}}const u=function(){return Object.assign(c.getObjectConfig(),{adaptiveWindow:!1,fov:45,aspect:1920/1080,near:5,far:50})},f=function(){return Object.assign(c.getObjectConfig(),{adaptiveWindow:!1,left:-window.innerWidth,right:window.innerWidth,top:window.innerHeight,bottom:-window.innerHeight,near:5,far:50,zoom:1})},m=c.defineObjectModel(d=>({type:"OrthographicCamera",config:f,context({model:e}){return{updateFun:i=>{const t=e.puppet,a=i.width,o=i.height;t.left=-a,t.right=a,t.top=o,t.bottom=-o,t.updateProjectionMatrix()}}},commands:{add:{scale(){}},set:{scale(){},adaptiveWindow({model:e,value:i,engine:t}){i?(t.addEventListener(s.ENGINE_EVENT.SETSIZE,e.updateFun),e.updateFun({type:"setSize",width:t.dom.offsetWidth,height:t.dom.offsetHeight})):t.removeEventListener(s.ENGINE_EVENT.SETSIZE,e.updateFun)},$reg:[{reg:new RegExp("left|right|top|bottom|near|far|zoom"),handler({target:e,key:i,value:t}){e[i]=t,e.updateProjectionMatrix()}}]},delete:{scale(){}}},create({model:e,config:i,engine:t}){const a=new p.OrthographicCamera(-50,50,50,-50);if(d.create({model:e,target:a,config:i,filter:{scale:!0,adaptiveWindow:!0},engine:t}),a.updateProjectionMatrix(),i.adaptiveWindow){const o=t.dom.offsetWidth,h=t.dom.offsetHeight;a.left=-o,a.right=o,a.top=h,a.bottom=-h,a.updateProjectionMatrix(),t.addEventListener(s.ENGINE_EVENT.SETSIZE,e.updateFun)}return a},dispose({target:e}){d.dispose({target:e})}})),v=c.defineObjectModel(d=>({type:"PerspectiveCamera",config:u,context({model:e}){return{updateFun:i=>{e.puppet.aspect=i.width/i.height,e.puppet.updateProjectionMatrix()}}},commands:{add:{scale(){}},set:{scale(){},adaptiveWindow({model:e,value:i,engine:t}){i?(t.addEventListener(s.ENGINE_EVENT.SETSIZE,e.updateFun),e.updateFun({type:"setSize",width:t.dom.offsetWidth,height:t.dom.offsetHeight})):t.removeEventListener(s.ENGINE_EVENT.SETSIZE,e.updateFun)},$reg:[{reg:new RegExp("fov|aspect|near|far"),handler({target:e,key:i,value:t}){e[i]=t,e.updateProjectionMatrix()}}]},delete:{scale(){}}},create({model:e,config:i,engine:t,compiler:a}){const o=new p.PerspectiveCamera;return d.create({model:e,target:o,config:i,filter:{scale:!0,adaptiveWindow:!0},engine:t}),o.updateProjectionMatrix(),i.adaptiveWindow&&(o.aspect=t.dom.offsetWidth/t.dom.offsetHeight,o.updateProjectionMatrix(),t.addEventListener(s.ENGINE_EVENT.SETSIZE,e.updateFun)),o},dispose({target:e}){d.dispose({target:e})}})),g=n.defineModule({type:"camera",object:!0,rule:c.ObjectRule,extend:E,models:[m,v],lifeOrder:n.SUPPORT_LIFE_CYCLE.THREE});r.default=g,r.getOrthographicCameraConfig=f,r.getPerspectiveCameraConfig=u,Object.defineProperties(r,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
