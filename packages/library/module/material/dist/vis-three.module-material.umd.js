(function(o,u){typeof exports=="object"&&typeof module<"u"?u(exports,require("@vis-three/tdcm"),require("three"),require("@vis-three/utils")):typeof define=="function"&&define.amd?define(["exports","@vis-three/tdcm","three","@vis-three/utils"],u):(o=typeof globalThis<"u"?globalThis:o||self,u((o["vis-three"]=o["vis-three"]||{},o["vis-three"]["module-material"]={}),o.tdcm,o.three,o.utils))})(this,function(o,u,s,b){"use strict";const f=function(){return Object.assign(u.getBasicConfig(),{type:"Material",alphaTest:0,colorWrite:!0,depthTest:!0,depthWrite:!0,name:"",needsUpdate:!1,opacity:1,dithering:!1,shadowSide:null,side:s.FrontSide,toneMapped:!0,transparent:!1,visible:!0,blendDst:s.OneMinusSrcAlphaFactor,blendDstAlpha:null,blendEquation:s.AddEquation,blendEquationAlpha:null,blending:s.NormalBlending,blendSrc:s.SrcAlphaFactor,blendSrcAlpha:null,polygonOffset:!1,polygonOffsetFactor:0,polygonOffsetUnits:0})},C=function(){return Object.assign(f(),{color:"rgb(255, 255, 255)",combine:s.MultiplyOperation,aoMapIntensity:1,fog:!0,lightMapIntensity:1,reflectivity:1,refractionRatio:.98,wireframe:!1,wireframeLinecap:"round",wireframeLinejoin:"round",wireframeLinewidth:1,map:"",envMap:"",alphaMap:"",aoMap:"",lightMap:"",specularMap:""})},m=function(){return Object.assign(f(),{aoMapIntensity:1,bumpScale:1,color:"rgb(255, 255, 255)",displacementScale:1,displacementBias:0,emissive:"rgb(0, 0, 0)",emissiveIntensity:1,envMapIntensity:1,flatShading:!1,lightMapIntensity:1,metalness:0,normalMapType:s.TangentSpaceNormalMap,normalScale:{x:1,y:1},refractionRatio:.98,roughness:1,wireframe:!1,wireframeLinecap:"round",wireframeLinejoin:"round",roughnessMap:"",normalMap:"",metalnessMap:"",map:"",lightMap:"",envMap:"",emissiveMap:"",displacementMap:"",bumpMap:"",alphaMap:"",aoMap:""})},v=function(){return Object.assign(m(),{attenuationColor:"rgb(255, 255, 255)",attenuationDistance:0,clearcoat:0,clearcoatNormalScale:{x:1,y:1},clearcoatRoughness:0,ior:1.5,reflectivity:.5,sheen:0,sheenRoughness:1,sheenColor:"rgb(255, 255, 255)",specularIntensity:0,specularColor:"rgb(255, 255, 255)",thickness:0,transmission:0,clearcoatMap:"",clearcoatNormalMap:"",clearcoatRoughnessMap:"",sheenRoughnessMap:"",sheenColorMap:"",specularIntensityMap:"",specularColorMap:"",thicknessMap:"",transmissionMap:""})},w=function(){return Object.assign(f(),{aoMapIntensity:1,bumpScale:1,color:"rgb(255, 255, 255)",displacementScale:1,displacementBias:0,emissive:"rgb(0, 0, 0)",emissiveIntensity:1,envMapIntensity:1,flatShading:!1,lightMapIntensity:1,normalMapType:s.TangentSpaceNormalMap,normalScale:{x:1,y:1},refractionRatio:.98,wireframe:!1,wireframeLinecap:"round",wireframeLinejoin:"round",specular:"rgb(17, 17, 17)",shininess:30,combine:s.MultiplyOperation,normalMap:"",map:"",lightMap:"",envMap:"",emissiveMap:"",displacementMap:"",bumpMap:"",alphaMap:"",aoMap:"",specularMap:""})},O=function(){return Object.assign(f(),{color:"rgb(255, 255, 255)",rotation:0,map:"",alphaMap:"",sizeAttenuation:!0})},S=function(){return Object.assign(f(),{color:"rgb(255, 255, 255)",linecap:"round",linejoin:"round",linewidth:1})},j=function(){return Object.assign(S(),{dashSize:3,gapSize:1,scale:1})},L=function(){return Object.assign(f(),{map:"",alphaMap:"",color:"rgb(255, 255, 255)",sizeAttenuation:!0,size:1})},P=function(){return Object.assign(f(),{shader:"",uniforms:{}})},x=function(){return Object.assign(f(),{color:"rgb(255, 255, 255)",bumpScale:1,displacementScale:1,displacementBias:0,flatShading:!1,fog:!0,normalMapType:s.TangentSpaceNormalMap,normalSale:{x:1,y:1},map:"",alphaMap:"",bumpMap:"",displacementMap:"",matcap:"",normalMap:""})},T={reg:new RegExp("transparent|sizeAttenuation"),handler({target:n,key:e,value:a}){n[e]=a,n.needsUpdate=!0}},y=function({model:n,target:e,key:a,value:i,engine:t}){n.toAsync(r=>{if(!i)return e[a]=null,e.needsUpdate=!0,!0;const M=t.compilerManager.getObjectFromModule(u.MODULE_TYPE.TEXTURE,i);return M instanceof s.Texture?(e[a]=M,e.needsUpdate=!0,!0):(r&&console.warn(`this url resource is not instance of Texture: ${a}`,i,M),e[a]=null,!1)})},B=function(){return y},I={reg:new RegExp("map$","i"),handler:y},R=function({model:n,target:e,key:a,value:i}){e[a].copy(n.cacheColor.set(i))},l=function(){return R},d=u.defineModel.extend({shared:{cacheColor:new s.Color},commands:{set:{$reg:[I,T]}},create({model:n,target:e,config:a,engine:i}){const t={};for(const r of Object.keys(a))r.toLocaleLowerCase().endsWith("map")&&a[r]?(y.call(n,{model:n,target:e,key:r,value:a[r],engine:i}),t[r]=!0):e[r]instanceof s.Color&&(e[r]=new s.Color(a[r]),t[r]=!0);return b.syncObject(a,e,t),e.needsUpdate=!0,e},dispose({target:n}){n.dispose()}}),A=d(n=>({type:"LineBasicMaterial",config:S,commands:{set:{color:l()}},create({model:e,config:a,engine:i}){return n.create({model:e,target:new s.LineBasicMaterial,config:a,engine:i})},dispose({target:e}){n.dispose({target:e})}})),U=d(n=>({type:"LineDashedMaterial",config:j,commands:{set:{color:l()}},create({model:e,config:a,engine:i}){return n.create({model:e,target:new s.LineDashedMaterial,config:a,engine:i})},dispose({target:e}){n.dispose({target:e})}})),E=d(n=>({type:"MeshBasicMaterial",config:C,commands:{set:{color:l()}},create({model:e,config:a,engine:i}){return n.create({model:e,target:new s.MeshBasicMaterial,config:a,engine:i})},dispose({target:e}){n.dispose({target:e})}})),F=d(n=>({type:"MeshMatcapMaterial",config:x,commands:{set:{color:l(),matcap:B()}},create({model:e,config:a,engine:i}){return n.create({model:e,target:new s.MeshMatcapMaterial,config:a,engine:i})},dispose({target:e}){n.dispose({target:e})}})),N=d(n=>({type:"MeshPhongMaterial",config:w,commands:{set:{color:l(),emissive:l(),specular:l()}},create({model:e,config:a,engine:i}){return n.create({model:e,target:new s.MeshPhongMaterial,config:a,engine:i})},dispose({target:e}){n.dispose({target:e})}})),D=d(n=>({type:"MeshPhysicalMaterial",config:v,commands:{set:{color:l(),emissive:l(),specularColor:l(),sheenColor:l(),attenuationColor:l()}},create({model:e,config:a,engine:i}){return n.create({model:e,target:new s.MeshPhysicalMaterial,config:a,engine:i})},dispose({target:e}){n.dispose({target:e})}})),q=d(n=>({type:"MeshStandardMaterial",config:m,commands:{set:{color:l(),emissive:l()}},create({model:e,config:a,engine:i}){return n.create({model:e,target:new s.MeshStandardMaterial,config:a,engine:i})},dispose({target:e}){n.dispose({target:e})}})),z=d(n=>({type:"PointsMaterial",config:L,commands:{set:{color:l()}},create({model:e,config:a,engine:i}){return n.create({model:e,target:new s.PointsMaterial,config:a,engine:i})},dispose({target:e}){n.dispose({target:e})}})),c=class c{static getShader(e){return c.library.has(e)?c.cloneShader(c.library.get(e)):(console.warn(`con not found shader in shader library: ${e}`),null)}static generateConfig(e,a){if(!c.library.has(e))return console.warn(`con not found shader in shader library: ${e}`),{shader:e,uniforms:{}};const i=c.library.get(e),t={shader:e,uniforms:{}};if(i.uniforms&&(t.uniforms=JSON.parse(JSON.stringify(i.uniforms))),a){const r=(M,g)=>{for(const p in g)M[p]!==void 0&&(typeof g[p]=="object"&&g[p]!==null&&!Array.isArray(g[p])?(M[p]===null&&(M[p]={...g[p]}),r(M[p],g[p])):M[p]=g[p])};r(t.uniforms,a)}return t}static cloneShader(e){const a={name:e.name};return e.vertexShader&&(a.vertexShader=e.vertexShader),e.fragmentShader&&(a.fragmentShader=e.fragmentShader),e.uniforms&&(a.uniforms=JSON.parse(JSON.stringify(e.uniforms))),a}};c.library=new Map,c.register=function(e){c.library.has(e.name)&&console.warn(`shader library has exist shader: ${e.name} that will be cover.`),c.library.set(e.name,e)};let h=c;const $=d(n=>({type:"ShaderMaterial",config:P,shared:{defaultVertexShader:`
  void main () {
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
  }`,defaultFragmentShader:`
    void main () {
      gl_FragColor = vec4(0.8,0.8,0.8,1.0);
    }`},commands:{set:{shader({model:e,target:a,value:i}){if(a.vertexShader=e.defaultVertexShader,a.fragmentShader=e.defaultFragmentShader,i){const t=h.getShader(i);t!=null&&t.vertexShader&&(a.vertexShader=t.vertexShader),t!=null&&t.fragmentShader&&(a.fragmentShader=t.fragmentShader),t!=null&&t.uniforms&&(a.uniforms=t.uniforms),t!=null&&t.defines&&(a.defines=t.defines)}a.needsUpdate=!0}}},create({model:e,config:a,engine:i}){const t=new s.ShaderMaterial;if(t.vertexShader=e.defaultVertexShader,t.fragmentShader=e.defaultFragmentShader,a.shader){const r=h.getShader(a.shader);r!=null&&r.vertexShader&&(t.vertexShader=r.vertexShader),r!=null&&r.fragmentShader&&(t.fragmentShader=r.fragmentShader),r!=null&&r.uniforms&&(t.uniforms=r.uniforms),r!=null&&r.defines&&(t.defines=r.defines)}return b.syncObject(a,t,{type:!0,shader:!0}),t.needsUpdate=!0,t},dispose({target:e}){n.dispose({target:e})}})),H=d(n=>({type:"SpriteMaterial",config:O,commands:{set:{color:l()}},create({model:e,config:a,engine:i}){return n.create({model:e,target:new s.SpriteMaterial,config:a,engine:i})},dispose({target:e}){n.dispose({target:e})}})),J=u.defineModule({type:"material",models:[A,U,E,F,N,D,q,z,$,H],lifeOrder:u.SUPPORT_LIFE_CYCLE.TWO});o.ShaderGeneratorManager=h,o.default=J,o.getLineBasicMaterialConfig=S,o.getLineDashedMaterialConfig=j,o.getMaterialConfig=f,o.getMeshBasicMaterialConfig=C,o.getMeshMatcapMaterialConfig=x,o.getMeshPhongMaterialConfig=w,o.getMeshPhysicalMaterialConfig=v,o.getMeshStandardMaterialConfig=m,o.getPointsMaterialConfig=L,o.getShaderMaterialConfig=P,o.getSpriteMaterialConfig=O,Object.defineProperties(o,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
