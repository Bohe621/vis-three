(function(n,u){typeof exports=="object"&&typeof module!="undefined"?u(exports,require("@vis-three/middleware"),require("three/examples/jsm/postprocessing/FilmPass"),require("three/examples/jsm/postprocessing/LUTPass"),require("three"),require("three/examples/jsm/postprocessing/Pass"),require("three/examples/jsm/shaders/LuminosityHighPassShader"),require("three/examples/jsm/postprocessing/SMAAPass"),require("three/examples/jsm/postprocessing/SSRPass"),require("three/examples/jsm/objects/ReflectorForSSRPass"),require("three/examples/jsm/postprocessing/UnrealBloomPass")):typeof define=="function"&&define.amd?define(["exports","@vis-three/middleware","three/examples/jsm/postprocessing/FilmPass","three/examples/jsm/postprocessing/LUTPass","three","three/examples/jsm/postprocessing/Pass","three/examples/jsm/shaders/LuminosityHighPassShader","three/examples/jsm/postprocessing/SMAAPass","three/examples/jsm/postprocessing/SSRPass","three/examples/jsm/objects/ReflectorForSSRPass","three/examples/jsm/postprocessing/UnrealBloomPass"],u):(n=typeof globalThis!="undefined"?globalThis:n||self,u((n["vis-three"]=n["vis-three"]||{},n["vis-three"]["module-pass"]={}),n.middleware,n.FilmPass,n.LUTPass,n.three,n.Pass,n.LuminosityHighPassShader,n.SMAAPass,n.SSRPass,n.ReflectorForSSRPass,n.UnrealBloomPass))})(this,function(n,u,g,L,i,C,y,z,k,W,G){"use strict";var Z=Object.defineProperty;var ee=(n,u,g)=>u in n?Z(n,u,{enumerable:!0,configurable:!0,writable:!0,value:g}):n[u]=g;var o=(n,u,g)=>(ee(n,typeof u!="symbol"?u+"":u,g),g);class R extends u.Compiler{constructor(){super();o(this,"composer")}useEngine(t){return super.useEngine(t),t.effectComposer?(this.composer=t.effectComposer,this):(console.warn("engine need install effectComposer plugin that can use pass compiler."),this)}add(t){const r=super.add(t);return r&&this.composer.addPass(r),r}remove(t){if(!this.map.has(t.vid))return console.warn(`PassCompiler can not found this vid pass: ${t.vid}.`),this;const r=this.map.get(t.vid);return this.composer.removePass(r),super.remove(t),this}}const I=function(e,s){u.Rule(e,s)},p=function(){return Object.assign(u.getSymbolConfig(),{vid:"",name:"",type:"Pass",index:0})},B=function(){return Object.assign(p(),{})},j=function(){return Object.assign(p(),{strength:1.5,threshold:0,radius:0})},U=function(){return Object.assign(p(),{strength:1,threshold:0,radius:0,renderScene:"",renderCamera:"",selectedObjects:[]})},Q=function(){return Object.assign(p(),{camera:"",scene:"",kernelRadius:8,kernelSize:32,noiseTexture:"",output:0,minDistance:.005,maxDistance:.1})},O=function(){return Object.assign(p(),{renderer:"",scene:"",camera:"",width:0,height:0,ground:!0,groudOption:{geometry:"",color:"rgb(127, 127, 127)",textureWidth:0,textureHeight:0,clipBias:0,multisample:4},selects:[],opacity:.5,output:0,maxDistance:180,thickness:.018,bouncing:!0,distanceAttenuation:!0,fresnel:!0,infiniteThick:!0})},D=function(){return Object.assign(p(),{grayscale:!1,noiseIntensity:.5,scanlinesIntensity:.05,scanlinesCount:4096})},F=function(){return Object.assign(p(),{lut:"",intensity:1,use2D:!1})};var E=u.defineProcessor({type:"FilmPass",config:D,commands:{set:{noiseIntensity({target:e,value:s}){e.uniforms.nIntensity.value=s},grayscale({target:e,value:s}){e.uniforms.grayscale.value=s?1:0},scanlinesIntensity({target:e,value:s}){e.uniforms.sIntensity.value=s},scanlinesCount({target:e,value:s}){e.uniforms.sCount.value=s}}},create(e,s){return new g.FilmPass(e.noiseIntensity,e.scanlinesIntensity,e.scanlinesCount,e.grayscale?1:0)},dispose(e){}});const P=function(e,s){if(e.lut){const t=s.resourceManager.resourceMap.get(e.lut);if(!t)console.warn(`LUT pass processor can not found resource: ${e.lut}`);else return e.use2D?t.texture:t.texture3D}return null};var _=u.defineProcessor({type:"LUTPass",config:F,commands:{set:{lut({target:e,config:s,engine:t}){e.lut=P(s,t)},use2D({target:e,config:s,engine:t}){e.lut=P(s,t)}}},create(e,s){return new L.LUTPass({intensity:e.intensity,lut:P(e,s)})},dispose(e){e.lut=void 0}});const x=class extends C.Pass{constructor(t=new i.Vector2(256,256),r=1,l=0,c=0,m=new i.Scene,T=new i.PerspectiveCamera,S){super();o(this,"resolution");o(this,"strength");o(this,"radius");o(this,"threshold");o(this,"selectedObjects",[]);o(this,"renderScene");o(this,"renderCamera");o(this,"clearColor",new i.Color(0,0,0));o(this,"renderTargetsHorizontal",[]);o(this,"renderTargetsVertical",[]);o(this,"nMips",5);o(this,"selectRenderTarget");o(this,"renderTargetBright");o(this,"highPassUniforms");o(this,"materialHighPassFilter");o(this,"separableBlurMaterials",[]);o(this,"compositeMaterial");o(this,"bloomTintColors");o(this,"mixMaterial");o(this,"enabled",!0);o(this,"needsSwap",!1);o(this,"_oldClearColor",new i.Color);o(this,"oldClearAlpha",1);o(this,"basic",new i.MeshBasicMaterial);o(this,"fsQuad",new C.FullScreenQuad);o(this,"materialCache",new Map);o(this,"sceneBackgroundCache",null);o(this,"overrideBackground",new i.Color("black"));o(this,"overrideMeshMaterial",new i.MeshBasicMaterial({color:"black"}));o(this,"overrideLineMaterial",new i.LineBasicMaterial({color:"black"}));o(this,"overridePointsMaterial",new i.PointsMaterial({color:"black"}));o(this,"overrideSpriteMaterial",new i.SpriteMaterial({color:"black"}));this.resolution=t,this.strength=r,this.radius=l,this.threshold=c,this.renderScene=m,this.renderCamera=T,this.selectedObjects=S;let d=Math.round(this.resolution.x/2),h=Math.round(this.resolution.y/2);this.selectRenderTarget=new i.WebGLRenderTarget(d,h),this.selectRenderTarget.texture.name="UnrealBloomPass.selected",this.selectRenderTarget.texture.generateMipmaps=!1,this.renderTargetBright=new i.WebGLRenderTarget(d,h),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(let f=0;f<this.nMips;f++){const M=new i.WebGLRenderTarget(d,h);M.texture.name="UnrealBloomPass.h"+f,M.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(M);const w=new i.WebGLRenderTarget(d,h);w.texture.name="UnrealBloomPass.v"+f,w.texture.generateMipmaps=!1,this.renderTargetsVertical.push(w),d=Math.round(d/2),h=Math.round(h/2)}y.LuminosityHighPassShader===void 0&&console.error("THREE.UnrealBloomPass relies on LuminosityHighPassShader");const a=y.LuminosityHighPassShader;this.highPassUniforms=i.UniformsUtils.clone(a.uniforms),this.highPassUniforms.luminosityThreshold.value=c,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new i.ShaderMaterial({uniforms:this.highPassUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:{}});const X=[3,5,7,9,11];d=Math.round(this.resolution.x/2),h=Math.round(this.resolution.y/2);for(let f=0;f<this.nMips;f++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(X[f])),this.separableBlurMaterials[f].uniforms.texSize.value=new i.Vector2(d,h),d=Math.round(d/2),h=Math.round(h/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=r,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0;const J=[1,.8,.6,.4,.2];this.compositeMaterial.uniforms.bloomFactors.value=J,this.bloomTintColors=[new i.Vector3(1,1,1),new i.Vector3(1,1,1),new i.Vector3(1,1,1),new i.Vector3(1,1,1),new i.Vector3(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,this.mixMaterial=this.getMixMaterial()}dispose(){for(let t=0;t<this.renderTargetsHorizontal.length;t++)this.renderTargetsHorizontal[t].dispose();for(let t=0;t<this.renderTargetsVertical.length;t++)this.renderTargetsVertical[t].dispose();this.renderTargetBright.dispose()}setSize(t,r){let l=Math.round(t/2),c=Math.round(r/2);this.selectRenderTarget.setSize(l,c),this.renderTargetBright.setSize(l,c);for(let m=0;m<this.nMips;m++)this.renderTargetsHorizontal[m].setSize(l,c),this.renderTargetsVertical[m].setSize(l,c),this.separableBlurMaterials[m].uniforms.texSize.value=new i.Vector2(l,c),l=Math.round(l/2),c=Math.round(c/2)}render(t,r,l,c,m){if(!this.selectedObjects.length){this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=l.texture,t.setRenderTarget(null),t.clear(),this.fsQuad.render(t));return}t.getClearColor(this._oldClearColor),this.oldClearAlpha=t.getClearAlpha();const T=t.autoClear;t.autoClear=!1,t.setClearColor(this.clearColor,0),m&&t.state.buffers.stencil.setTest(!1);const S=new Map;for(const a of this.selectedObjects)S.set(a,!0);const d=this.materialCache;this.renderScene.background&&(this.sceneBackgroundCache=this.renderScene.background,this.renderScene.background=this.overrideBackground),this.renderScene.traverse(a=>{!S.has(a)&&!a.isLight&&a.visible&&(d.set(a,a.material),a instanceof i.Mesh?a.material=this.overrideMeshMaterial:a instanceof i.Line?a.material=this.overrideLineMaterial:a instanceof i.Points?a.material=this.overridePointsMaterial:a instanceof i.Sprite&&(a.material=this.overrideSpriteMaterial))}),t.setRenderTarget(this.selectRenderTarget),t.clear(),t.render(this.renderScene,this.renderCamera),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=this.selectRenderTarget.texture,t.setRenderTarget(null),t.clear(),this.fsQuad.render(t)),this.highPassUniforms.tDiffuse.value=this.selectRenderTarget.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,t.setRenderTarget(this.renderTargetBright),t.clear(),this.fsQuad.render(t);let h=this.renderTargetBright;for(let a=0;a<this.nMips;a++)this.fsQuad.material=this.separableBlurMaterials[a],this.separableBlurMaterials[a].uniforms.colorTexture.value=h.texture,this.separableBlurMaterials[a].uniforms.direction.value=x.BlurDirectionX,t.setRenderTarget(this.renderTargetsHorizontal[a]),t.clear(),this.fsQuad.render(t),this.separableBlurMaterials[a].uniforms.colorTexture.value=this.renderTargetsHorizontal[a].texture,this.separableBlurMaterials[a].uniforms.direction.value=x.BlurDirectionY,t.setRenderTarget(this.renderTargetsVertical[a]),t.clear(),this.fsQuad.render(t),h=this.renderTargetsVertical[a];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,t.setRenderTarget(this.renderTargetsHorizontal[0]),t.clear(),this.fsQuad.render(t),this.fsQuad.material=this.mixMaterial,this.mixMaterial.uniforms.bloom.value=this.renderTargetsHorizontal[0].texture,this.mixMaterial.uniforms.origin.value=l.texture,m&&t.state.buffers.stencil.setTest(!0),this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(l),this.fsQuad.render(t)),t.setClearColor(this._oldClearColor,this.oldClearAlpha),t.autoClear=T;for(const a of d.entries())a[0].material=a[1];d.clear(),this.sceneBackgroundCache&&(this.renderScene.background=this.sceneBackgroundCache,this.sceneBackgroundCache=null)}getMixMaterial(){return new i.ShaderMaterial({blending:i.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0,uniforms:{bloom:{value:null},origin:{value:null}},vertexShader:`
    
        varying vec2 vUv;
    
        void main() {
    
          vUv = uv;
          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
    
        }`,fragmentShader:`
        uniform sampler2D bloom;
        uniform sampler2D origin;
    
        varying vec2 vUv;
    
        void main() {
          vec3 bloomColor = texture2D(bloom, vUv).rgb;
          vec3 originColor = texture2D(origin, vUv).rgb;
          gl_FragColor = vec4(originColor + bloomColor, 1.0);
        }`})}getSeperableBlurMaterial(t){return new i.ShaderMaterial({defines:{KERNEL_RADIUS:t,SIGMA:t},uniforms:{colorTexture:{value:null},texSize:{value:new i.Vector2(.5,.5)},direction:{value:new i.Vector2(.5,.5)}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`#include <common>
				varying vec2 vUv;
				uniform sampler2D colorTexture;
				uniform vec2 texSize;
				uniform vec2 direction;

				float gaussianPdf(in float x, in float sigma) {
					return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;
				}
				void main() {
					vec2 invSize = 1.0 / texSize;
					float fSigma = float(SIGMA);
					float weightSum = gaussianPdf(0.0, fSigma);
					vec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;
					for( int i = 1; i < KERNEL_RADIUS; i ++ ) {
						float x = float(i);
						float w = gaussianPdf(x, fSigma);
						vec2 uvOffset = direction * invSize * x;
						vec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;
						vec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;
						diffuseSum += (sample1 + sample2) * w;
						weightSum += 2.0 * w;
					}
					gl_FragColor = vec4(diffuseSum/weightSum, 1.0);
				}`})}getCompositeMaterial(t){return new i.ShaderMaterial({defines:{NUM_MIPS:t},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;
				uniform sampler2D blurTexture1;
				uniform sampler2D blurTexture2;
				uniform sampler2D blurTexture3;
				uniform sampler2D blurTexture4;
				uniform sampler2D blurTexture5;
				uniform float bloomStrength;
				uniform float bloomRadius;
				uniform float bloomFactors[NUM_MIPS];
				uniform vec3 bloomTintColors[NUM_MIPS];

				float lerpBloomFactor(const in float factor) {
					float mirrorFactor = 1.2 - factor;
					return mix(factor, mirrorFactor, bloomRadius);
				}

				void main() {
					gl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +
						lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +
						lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +
						lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +
						lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );
				}`})}};let v=x;o(v,"BlurDirectionX",new i.Vector2(1,0)),o(v,"BlurDirectionY",new i.Vector2(0,1));var q=u.defineProcessor({type:"SelectiveBloomPass",config:U,commands:{add:{selectedObjects({target:e,engine:s,value:t}){const r=s.getObject3D(t);r?e.selectedObjects.push(r):console.warn(`selectiveBloomPassProcessor: can not found vid in engine: ${t}`)}},set:{renderScene({target:e,engine:s,value:t}){const r=s.getObject3D(t);r instanceof i.Scene&&(e.renderScene=r)},renderCamera({target:e,engine:s,value:t}){const r=s.getObject3D(t);r instanceof i.Camera&&(e.renderCamera=r)},selectedObjects({target:e,config:s,engine:t}){const r=s.selectedObjects.map(l=>{const c=t.getObject3D(l);if(c)return c;console.warn(`selectiveBloomPassProcessor: can not found vid in engine: ${l}`)}).filter(l=>l);e.selectedObjects=r}},delete:{selectedObjects({target:e,engine:s,value:t}){const r=s.getObject3D(t);r?e.selectedObjects.includes(r)&&e.selectedObjects.splice(e.selectedObjects.indexOf(r),1):console.warn(`selectiveBloomPassProcessor: can not found vid in engine: ${t}`)}}},create(e,s){const t=[];for(const c of e.selectedObjects){const m=s.getObject3D(c);m&&t.push(m)}const r=window.devicePixelRatio;return new v(new i.Vector2(s.dom?s.dom.offsetWidth*r:window.innerWidth*r,s.dom?s.dom.offsetHeight*r:window.innerWidth*r),e.strength,e.radius,e.threshold,e.renderScene&&s.getObjectfromModule(u.MODULETYPE.SCENE,e.renderScene)||void 0,e.renderCamera&&s.getObjectfromModule(u.MODULETYPE.CAMERA,e.renderCamera)||void 0,t)},dispose(e){e.dispose()}}),N=u.defineProcessor({type:"SMAAPass",config:B,create(e,s){const t=window.devicePixelRatio;return new z.SMAAPass(s.dom?s.dom.offsetWidth*t:window.innerWidth*t,s.dom?s.dom.offsetHeight*t:window.innerWidth*t)},dispose(e){}});let b=new i.PlaneBufferGeometry(window.innerWidth,window.innerHeight);const A=function(e){const s=new i.PlaneBufferGeometry(e.width?e.width:window.innerWidth,e.height?e.height:window.innerHeight);return b.copy(s),s.dispose(),b},V=function(e,s){const t=new W.ReflectorForSSRPass(s.getObjectBySymbol(e.groudOption.geometry)||A(e),{color:e.groudOption.color,clipBias:e.groudOption.clipBias,textureHeight:e.groudOption.textureHeight||s.dom.offsetWidth*window.devicePixelRatio,textureWidth:e.groudOption.textureWidth||s.dom.offsetHeight*window.devicePixelRatio,multisample:e.groudOption.multisample,useDepthTexture:!0});return t.material.depthWrite=!1,t.raycast=()=>{},t.visible=!1,t.geometry===b&&(t.rotation.x=-Math.PI/2),(e.scene?s.getObjectBySymbol(e.scene):s.scene).add(t),t},H=function(e){e.getRenderTarget().dispose(),e.material.dispose()};var $=u.defineProcessor({type:"SSRPass",config:O,commands:{set:{ground({target:e,config:s,value:t,engine:r}){if(t&&!e.groundReflector){e.groundReflector=V(s,r);return}!t&&e.groundReflector&&(H(e.groundReflector),e.groundReflector=null)},groudOption:{geometry({target:e,config:s,value:t,engine:r}){if(s.ground)if(t){const l=r.getObjectBySymbol(t);if(!l){console.warn(`SSR pass processor: can not found geometry with: ${t}`);return}e.groundReflector.geometry=l}else e.groundReflector.geometry=A(s)}},opacity({target:e,value:s}){e.groundReflector&&(e.groundReflector.opacity=s),e.opacity=s},maxDistance({target:e,value:s}){e.groundReflector&&(e.groundReflector.maxDistance=s),e.maxDistance=s}}},create(e,s){const t=window.devicePixelRatio,r=new k.SSRPass({renderer:e.renderer?s.getObjectBySymbol(e.renderer):s.webGLRenderer,scene:e.scene?s.getObjectBySymbol(e.scene):s.scene,camera:e.camera?s.getObjectBySymbol(e.camera):s.camera,width:e.width?e.width:s.dom.offsetWidth*t,height:e.height?e.height:s.dom.offsetHeight*t,groundReflector:e.ground?V(e,s):void 0,selects:e.selects.map(l=>s.getObjectBySymbol(l)),bouncing:e.bouncing});if(r.infiniteThick=e.infiniteThick,r.opacity=e.opacity,r.output=e.output,r.maxDistance=e.maxDistance,r.thickness=e.thickness,r.groundReflector){const l=r.groundReflector;l.opacity=r.opacity,l.maxDistance=r.maxDistance}return r},dispose(e){H(e.groundReflector),e.groundReflector=null,e.dispose(),b.dispose(),b=void 0}}),Y=u.defineProcessor({type:"UnrealBloomPass",config:j,create(e,s){const t=window.devicePixelRatio;return new G.UnrealBloomPass(new i.Vector2(s.dom?s.dom.offsetWidth*t:window.innerWidth*t,s.dom?s.dom.offsetHeight*t:window.innerWidth*t),e.strength,e.radius,e.threshold)},dispose(e){e.dispose()}}),K={type:"pass",compiler:R,rule:I,processors:[Y,N,q,$,E,_]};n.PassCompiler=R,n.default=K,n.getFilmPassConfig=D,n.getLUTPassConfig=F,n.getPassConfig=p,n.getSMAAPassConfig=B,n.getSSAOPassConfig=Q,n.getSSRPassConfig=O,n.getSelectiveBloomPassConfig=U,n.getUnrealBloomPassConfig=j,Object.defineProperties(n,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
