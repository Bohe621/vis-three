(function(t,r){typeof exports=="object"&&typeof module!="undefined"?r(exports,require("@vis-three/middleware"),require("uuid"),require("three")):typeof define=="function"&&define.amd?define(["exports","@vis-three/middleware","uuid","three"],r):(t=typeof globalThis!="undefined"?globalThis:t||self,r((t["vis-three"]=t["vis-three"]||{},t["vis-three"]["module-shape"]={}),t.middleware,t.uuid,t.three))})(this,function(t,r,f,d){"use strict";class a extends r.Compiler{constructor(){super()}}const E=function(e,n,s=f.validate){r.Rule(e,n,s)},l=function(){return Object.assign(r.getSymbolConfig(),{shape:"",holes:[]})},u=new WeakMap,p=function(e,n,s){u.has(e)||u.set(e,new Set),u.get(e).add({target:n,eventFun:s}),r.Bus.compilerEvent.on(n,r.COMPILER_EVENT.UPDATE,s)},i=function(e,n){if(!u.has(e)){console.warn("shape processor found an error can not found cache shape:",e);return}const s=u.get(e);for(const o of s.values())if(o.target===n){r.Bus.compilerEvent.off(n,r.COMPILER_EVENT.UPDATE,o.eventFun),s.delete(o);break}};var M=r.defineProcessor({type:"Shape",config:l,commands:{add:{holes({target:e,engine:n,config:s,value:o}){const c=n.compilerManager.getObjectfromModule(r.MODULETYPE.PATH,o);if(!c){console.warn(`shape processor can not found path: ${o}`);return}e.holes.push(c);const h=s.holes.length-1;p(e,c,()=>{s.holes[h]=s.holes[h]})}},set:{shape({target:e,engine:n,value:s}){const o=n.compilerManager.getObjectfromModule(r.MODULETYPE.PATH,s);o?e.curves=o.curves:console.warn(`shape processor can not found path: ${s}`)},holes({target:e,engine:n,path:s,value:o}){const c=Number(s[1]);if(!Number.isInteger(c)){console.warn("shape processor: delete holes error:",s);return}const h=n.compilerManager.getObjectfromModule(r.MODULETYPE.PATH,o);if(!h){console.warn(`shape processor can not found path: ${o}`);return}e.holes[c]=h}},delete:{holes({target:e,path:n}){const s=Number(n[1]);if(!Number.isInteger(s)){console.warn("shape processor: delete holes error:",n);return}i(e,e.holes[s]),e.holes.splice(s,1)}}},create(e,n){const s=new d.Shape;if(e.shape){const o=n.compilerManager.getObjectfromModule(r.MODULETYPE.PATH,e.shape);o?(s.curves=o.curves,p(s,o,()=>{e.shape=e.shape})):console.warn(`shape processor can not found path: ${e.shape}`)}if(e.holes.length)for(let o=0;o<e.holes.length;o+=1){const c=e.holes[o],h=n.compilerManager.getObjectfromModule(r.MODULETYPE.PATH,c);h?(s.holes.push(h),p(s,h,()=>{e.holes[o]=e.holes[o]})):console.warn(`shape processor can not found path: ${c}`)}return s},dispose(e){e.curves=[],e.holes=[];const n=u.get(e);if(!e){console.warn("shape processor found an error can not found cache shape:",e);return}n.forEach(s=>{i(e,s.target)}),u.delete(e)}}),P={type:"shape",compiler:a,rule:E,processors:[M],lifeOrder:r.SUPPORT_LIFE_CYCLE.ONE};t.ShapeCompiler=a,t.default=P,t.getShapeConfig=l,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
