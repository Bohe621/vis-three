(function(l,f){typeof exports=="object"&&typeof module<"u"?f(exports,require("three"),require("@vis-three/utils"),require("@vis-three/tdcm")):typeof define=="function"&&define.amd?define(["exports","three","@vis-three/utils","@vis-three/tdcm"],f):(l=typeof globalThis<"u"?globalThis:l||self,f((l["vis-three"]=l["vis-three"]||{},l["vis-three"]["library-parser"]={}),l.three,l.utils,l.tdcm))})(this,function(l,f,T,i){"use strict";class u extends i.Parser{constructor(){super(...arguments),this.selector=(t,e,s)=>e.isObject3D&&s.get(u)||null}parse(t){this.parseObject3D(t)}parseAnimation({url:t,resource:e,configMap:s,resourceMap:a}){a.set(t,e);const n=i.CONFIG_FACTORY[i.CONFIG_TYPE.LOADANIMATIONCLIP]();n.vid=i.createSymbol(),n.url=t,n.name=e.name,s.set(t,n)}parseColor(t){return`rgb(${Math.round(255*t.r)}, ${Math.round(255*t.g)}, ${Math.round(255*t.b)})`}attributeEnhance(t){const e={};for(const s in t)s.startsWith("_")?e[s.slice(1)]=t[s]:e[s]=t[s];return e}parseTexture({url:t,resource:e,configMap:s,resourceMap:a}){a.set(t,e);const n=i.CONFIG_FACTORY[i.CONFIG_TYPE.LOADTEXTURE]();s.set(t,n),n.vid=i.createSymbol(),n.url=t,T.syncObject(e,n,{type:!0,vid:!0,url:!0})}parseMaterial({url:t,resource:e,configMap:s,resourceMap:a}){if(a.set(t,e),!i.CONFIG_FACTORY[e.type]){console.warn("can not found support config in vis for this resource",e);return}const n=i.CONFIG_FACTORY[e.type]();s.set(t,n),n.vid=i.createSymbol(),T.syncObject(this.attributeEnhance(e),n,{type:!0,vid:!0});for(const r in e)if(e[r]){if(e[r].isColor)n[r]=this.parseColor(e[r]);else if(r.toLocaleLowerCase().endsWith("map")&&e[r]){const o=`${t}.${r}`;this.parseTexture({url:o,resource:e[r],configMap:s,resourceMap:a}),n[r]=s.get(o).vid}}}parseGeometry({url:t,resource:e,configMap:s,resourceMap:a}){a.set(t,e),e.computeBoundingBox();const n=e.boundingBox,r=n.getCenter(new f.Vector3),o=i.CONFIG_FACTORY[i.CONFIG_TYPE.LOADGEOMETRY]();o.vid=i.createSymbol(),o.url=t,o.position.x=r.x/(n.max.x-n.min.x)*2,o.position.y=r.y/(n.max.y-n.min.y)*2,o.position.z=r.z/(n.max.z-n.min.z)*2,s.set(t,o)}parseSkeleton({url:t,resource:e,configMap:s,resourceMap:a}){const n=i.CONFIG_FACTORY[i.CONFIG_TYPE.SKELETON]();n.vid=i.createSymbol();const r=new WeakMap;for(const[o,h]of a.entries())h instanceof f.Bone&&r.set(h,s.get(o));for(const o of e.bones){if(!r.has(o)){console.warn("object3D parser can not fond bone in configMap",o);continue}n.bones.push(r.get(o).vid)}e.boneInverses.length&&(n.boneInverses=e.boneInverses.map(o=>[].concat(o.elements))),s.set(t,n)}parseObject3D({url:t,resource:e,configMap:s,resourceMap:a}){if(a.set(t,e),!i.CONFIG_FACTORY[e.type]){console.warn("can not found support config in middleware module for this resource",e);return}const n=i.CONFIG_FACTORY[e.type]();if(n.vid=i.createSymbol(),T.syncObject(e,n,{type:!0,vid:!0,children:!0,geometry:!0,material:!0,parent:!0,lookAt:!0,skeleton:!0}),n.rotation.x=e.rotation.x,n.rotation.y=e.rotation.y,n.rotation.z=e.rotation.z,e.isMesh&&e.morphTargetInfluences&&e.morphTargetInfluences.length&&(n.morphTargetInfluences=[...e.morphTargetInfluences],n.morphTargetDictionary={...e.morphTargetDictionary}),e.isSkinnedMesh&&(n.bindMatrix=[].concat(e.bindMatrix.elements)),s.set(t,n),e.material)if(Array.isArray(e.material))n.material=[],e.material.forEach((r,o,h)=>{const E=`${t}.material.${o}`;this.parseMaterial({url:E,resource:r,configMap:s,resourceMap:a}),n.material.push(s.get(E).vid)});else{const r=`${t}.material`;this.parseMaterial({url:r,resource:e.material,configMap:s,resourceMap:a}),n.material=s.get(r).vid}if(e.geometry){const r=`${t}.geometry`;this.parseGeometry({url:r,resource:e.geometry,configMap:s,resourceMap:a}),n.geometry=s.get(r).vid}if(e.skeleton){const r=`${t}.skeleton`;this.parseSkeleton({url:r,resource:e.skeleton,configMap:s,resourceMap:a}),n.skeleton=s.get(r).vid}if(e.children&&e.children.length){const r=[];e.children.forEach((o,h)=>{o.type==="Bone"?r.unshift({index:h,object:o,type:o.type}):r.push({index:h,object:o,type:o.type})}),r.forEach(o=>{const h=`${t}.children.${o.index}`;this.parseObject3D({url:h,resource:o.object,configMap:s,resourceMap:a}),n.children.push(s.get(h).vid)})}e.animations&&e.animations.length&&Array.isArray(e.animations)&&e.animations.forEach((r,o)=>{const h=`${t}.animations.${o}`;this.parseAnimation({url:h,resource:r,configMap:s,resourceMap:a})})}}class g extends u{constructor(){super()}}class O extends i.Parser{constructor(){super(),this.object3DParser=new u,this.selector=(t,e,s)=>e.parser&&e.animations&&e.scene&&e.scenes&&s.get(O)||null}parse({url:t,resource:e,configMap:s,resourceMap:a}){this.object3DParser.parse({url:`${t}.scene`,resource:e.scene,configMap:s,resourceMap:a}),e.animations.forEach((n,r)=>{this.object3DParser.parseAnimation({url:`${t}.animations.${r}`,resource:n,configMap:s,resourceMap:a})})}}class c extends i.Parser{constructor(){super(...arguments),this.selector=(t,e,s)=>e instanceof HTMLCanvasElement&&s.get(c)||null}parse({url:t,resource:e,configMap:s,resourceMap:a}){const n=i.CONFIG_FACTORY[i.CONFIG_TYPE.CANVASTEXTURE]();n.url=t,a.set(t,e),s.set(t,n)}}class p extends i.Parser{constructor(){super(...arguments),this.selector=(t,e,s)=>e instanceof HTMLImageElement&&s.get(p)||null}parse({url:t,resource:e,configMap:s,resourceMap:a}){const n=i.CONFIG_FACTORY[i.CONFIG_TYPE.IMAGETEXTURE]();n.url=t,a.set(t,e),s.set(t,n)}}class y extends i.Parser{constructor(){super(...arguments),this.selector=(t,e,s)=>e instanceof HTMLVideoElement&&s.get(y)||null}parse({url:t,resource:e,configMap:s,resourceMap:a}){const n=i.CONFIG_FACTORY[i.CONFIG_TYPE.VIDEOTEXTURE]();n.url=t,a.set(t,e),s.set(t,n)}}class C extends i.Parser{constructor(){super(...arguments),this.selector=(t,e,s)=>e instanceof f.Texture&&s.get(C)||null}parse({url:t,resource:e,configMap:s,resourceMap:a}){const n=i.CONFIG_FACTORY[i.CONFIG_TYPE.LOADTEXTURE]();n.url=t,a.set(t,e),s.set(t,n)}}class m extends i.Parser{constructor(t="css3D"){super(),this.selector=(e,s,a)=>s instanceof HTMLElement&&a.get(m)||null,this.type=t}parse({url:t,resource:e,configMap:s,resourceMap:a}){const n=i.CONFIG_FACTORY[this.type==="css3D"?i.CONFIG_TYPE.CSS3DPLANE:i.CONFIG_TYPE.CSS2DPLANE]();n.element=t,a.set(t,e),s.set(t,n)}}l.FBXResourceParser=g,l.GLTFResourceParser=O,l.HTMLCanvasElementParser=c,l.HTMLElementParser=m,l.HTMLImageElementParser=p,l.HTMLVideoElementParser=y,l.Object3DParser=u,l.TextureParser=C,Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});
