(function(a,s){typeof exports=="object"&&typeof module<"u"?s(exports,require("@vis-three/utils"),require("@vis-three/plugin-pointer-manager"),require("@vis-three/core"),require("three")):typeof define=="function"&&define.amd?define(["exports","@vis-three/utils","@vis-three/plugin-pointer-manager","@vis-three/core","three"],s):(a=typeof globalThis<"u"?globalThis:a||self,s((a["vis-three"]=a["vis-three"]||{},a["vis-three"]["plugin-path-drawing"]={}),a.utils,a.pluginPointerManager,a.core,a.three))})(this,function(a,s,p,o,n){"use strict";const l="@vis-three/plugin-path-drawing";var h=(r=>(r.BEGIN="begin",r.END="end",r.WRITE="write",r.MOVE="move",r))(h||{});class c extends o.EventDispatcher{constructor(e){super(),this.camera=new n.OrthographicCamera(-window.innerWidth,window.innerWidth,window.innerHeight,-window.innerHeight,0,1e4),this.plane=new n.Plane(new n.Vector3(0,0,1),0),this.boardOffset=20,this.drawingBoard=new n.Mesh(new n.PlaneGeometry(150,150),new n.MeshBasicMaterial({transparent:!0,opacity:.2,color:"rgb(64, 255, 242)"})),this.relativeMatrixInvert=new n.Matrix4,this.cachePoint=new n.Vector3,this.cacheRelativePoint=new n.Vector3,this._tempVector=new n.Vector3,this._tempVector2=new n.Vector3,this._tempQuaternion=new n.Quaternion,this.begun=!1,this.autoPlane=!1,this.setScene=i=>{this.drawingBoard.parent&&i.scene.add(this.drawingBoard)},this.cacheBeginWriteFun=i=>{const t=this.engine.pointerManager;this.cacheWriteFun(i),t.addEventListener("mousedown",this.cacheWriteFun),t.addEventListener("pointermove",this.cacheMoveFun),t.removeEventListener("mousedown",this.cacheBeginWriteFun),this.begun=!0},this.cacheWriteFun=i=>{this.autoPlane&&this.autoCalcPlane();const t=this.engine.pointerManager.intersectPlane(this.camera,this.plane,this.cachePoint);if(!t){console.warn("path sketcher can not intersect point in this plane and this camera");return}this.dispatchEvent({type:"write",point:t,relativePoint:this.cacheRelativePoint.copy(t).applyMatrix4(this.relativeMatrixInvert)})},this.cacheMoveFun=i=>{this.autoPlane&&this.autoCalcPlane();const t=this.engine.pointerManager.intersectPlane(this.camera,this.plane,this.cachePoint);if(!t){console.warn("path sketcher can not intersect point in this plane and this camera");return}this.dispatchEvent({type:"move",point:t,relativePoint:this.cacheRelativePoint.copy(t).applyMatrix4(this.relativeMatrixInvert)})},this.engine=e,this.drawingBoard.raycast=()=>{},this.drawingBoard.matrixAutoUpdate=!1,this.setDrawingBoardMatrix(),e.addEventListener(o.ENGINE_EVENT.SETSCENE,this.setScene)}autoCalcPlane(){const e=this.plane,i=this.camera,t=this._tempVector.set(0,0,0),m=this._tempQuaternion;e.normal.set(0,0,1).applyQuaternion(i.getWorldQuaternion(m)).normalize(),t.set(0,0,0).project(i),t.x>1||t.x<-1||t.y>1||t.y<-1||t.z>1||t.z<-1?e.constant=i.getWorldPosition(t).length()+50:e.constant=0}setCamera(e){return this.camera=e,this}setAutoPlane(e){return this.autoPlane=e,this}setDraingBoardSize(e,i){const t=new n.PlaneGeometry(e,i);this.drawingBoard.geometry.copy(t),t.dispose()}offsetCamera(e){const i=e.length();return e.normalize().applyQuaternion(new n.Quaternion().setFromUnitVectors(new n.Vector3(0,1,0),this.plane.normal)),this.camera.position.copy(this.plane.normal).multiplyScalar(this.plane.constant).add(e.multiplyScalar(i)),this.camera instanceof n.OrthographicCamera&&(this.camera.zoom=(this.camera.top-this.camera.bottom)/(this.drawingBoard.geometry.parameters.height+this.boardOffset)),this.camera.updateProjectionMatrix(),this.drawingBoard.position.add(e),this.drawingBoard.updateMatrix(),this.drawingBoard.updateMatrixWorld(!0),this}setRelativeObject(e){return this.relativeMatrixInvert.copy(e.matrixWorld).invert(),this}setDrawPlane(e,i=0){return this.plane.set(e,i),this.setDrawingBoardMatrix(),this}setDrawPlaneByFace(e){return this.plane.setFromCoplanarPoints(e.a,e.b,e.c),this.setDrawingBoardMatrix(),this}setDrawingBoardMatrix(){const e=this.drawingBoard;e.position.copy(this.plane.normal).multiplyScalar(this.plane.constant),e.applyQuaternion(new n.Quaternion().setFromUnitVectors(new n.Vector3(0,0,1),this.plane.normal)),e.updateMatrix(),e.updateMatrixWorld(!0)}dispose(){this.drawingBoard.removeFromParent(),this.drawingBoard.geometry.dispose(),this.drawingBoard.material.dispose(),this.engine.removeEventListener(o.ENGINE_EVENT.SETSCENE,this.setScene)}showDrawingBoard(e){return e?this.engine.scene.add(this.drawingBoard):this.engine.scene.remove(this.drawingBoard),this}setSketcherByPlane(e=new n.Vector3(0,0,1),i=0,t=new n.Vector3(0,50,0)){return this.setDrawPlane(e,i).offsetCamera(t)}setSketcherByFace(e,i=new n.Vector3(0,50,0)){return this.setDrawPlaneByFace(e).offsetCamera(i)}setSketcherByFaceAndObject(e,i){const t=new n.Vector3().setFromMatrixPosition(i.matrixWorld);return this.setRelativeObject(i),this.setSketcherByFace(e,t)}changeToDrawingView(){return this.engine.setCamera(this.camera),this}beginDraw(){return this.dispatchEvent({type:"begin"}),this.begun=!1,this.engine.pointerManager.addEventListener("mousedown",this.cacheBeginWriteFun),this}endDraw(e=!0){const i=this.engine.pointerManager;return i.removeEventListener("mousedown",this.cacheWriteFun),i.removeEventListener("pointermove",this.cacheMoveFun),this.dispatchEvent({type:"end"}),e&&(this.begun||this.engine.pointerManager.removeEventListener("mousedown",this.cacheBeginWriteFun),this.removeEvent("begin"),this.removeEvent("write"),this.removeEvent("move"),this.removeEvent("end")),this.begun=!1,this}}const d=s.transPkgName(l),u=function(){return{name:d,deps:[p.POINTER_MANAGER_PLUGIN],install(r){const e=new c(r);r.pathSketcher=e},dispose(r){r.pathSketcher.dispose(),delete r.pathSketcher}}};a.PATHSKETCHER_EVENT=h,a.PATH_DRAWING_PLUGIN=d,a.PathDrawingPlugin=u,a.PathSketcher=c,Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})});
