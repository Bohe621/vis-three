(function(i,r){typeof exports=="object"&&typeof module!="undefined"?r(exports,require("@vis-three/utils"),require("@vis-three/plugin-pointer-manager"),require("@vis-three/core"),require("three")):typeof define=="function"&&define.amd?define(["exports","@vis-three/utils","@vis-three/plugin-pointer-manager","@vis-three/core","three"],r):(i=typeof globalThis!="undefined"?globalThis:i||self,r((i["vis-three"]=i["vis-three"]||{},i["vis-three"]["plugin-path-drawing"]={}),i.utils,i.pluginPointerManager,i.core,i.three))})(this,function(i,r,o,c,n){"use strict";var v=Object.defineProperty;var g=(i,r,o)=>r in i?v(i,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):i[r]=o;var s=(i,r,o)=>(g(i,typeof r!="symbol"?r+"":r,o),o);const l="@vis-three/plugin-path-drawing";var d=(a=>(a.BEGIN="begin",a.END="end",a.WRITE="write",a.MOVE="move",a))(d||{});class w extends c.EventDispatcher{constructor(e){super();s(this,"camera",new n.OrthographicCamera(-window.innerWidth,window.innerWidth,window.innerHeight,-window.innerHeight,0,1e4));s(this,"plane",new n.Plane(new n.Vector3(0,0,1),0));s(this,"boardOffset",20);s(this,"drawingBoard",new n.Mesh(new n.PlaneBufferGeometry(150,150),new n.MeshBasicMaterial({transparent:!0,opacity:.2,color:"rgb(64, 255, 242)"})));s(this,"relativeMatrixInvert",new n.Matrix4);s(this,"engine");s(this,"cachePoint",new n.Vector3);s(this,"cacheRelativePoint",new n.Vector3);s(this,"setScene",e=>{e.scene.add(this.drawingBoard)});s(this,"cacheWriteFun",e=>{const t=this.engine.pointerManager.intersectPlane(this.camera,this.plane,this.cachePoint);if(!t){console.warn("path sketcher can not intersect point in this plane and this camera");return}this.dispatchEvent({type:"write",point:t,relativePoint:this.cacheRelativePoint.copy(t).applyMatrix4(this.relativeMatrixInvert)})});s(this,"cacheMoveFun",e=>{const t=this.engine.pointerManager.intersectPlane(this.camera,this.plane,this.cachePoint);if(!t){console.warn("path sketcher can not intersect point in this plane and this camera");return}this.dispatchEvent({type:"move",point:t,relativePoint:this.cacheRelativePoint.copy(t).applyMatrix4(this.relativeMatrixInvert)})});this.engine=e,this.drawingBoard.raycast=()=>{},this.drawingBoard.matrixAutoUpdate=!1,this.setDrawingBoardMatrix(),e.addEventListener(c.ENGINE_EVENT.SETSCENE,this.setScene)}setDraingBoardSize(e,t){const h=new n.PlaneBufferGeometry(e,t);this.drawingBoard.geometry.copy(h),h.dispose()}offsetCamera(e){return e.normalize().applyQuaternion(new n.Quaternion().setFromUnitVectors(new n.Vector3(0,1,0),this.plane.normal)),this.camera.position.copy(this.plane.normal).multiplyScalar(this.plane.constant).add(e),this.camera.zoom=(this.camera.top-this.camera.bottom)/(this.drawingBoard.geometry.parameters.height+this.boardOffset),this.camera.updateProjectionMatrix(),this.drawingBoard.position.add(e),this.drawingBoard.updateMatrix(),this.drawingBoard.updateMatrixWorld(!0),this}setRelativeObject(e){return this.relativeMatrixInvert.copy(e.matrixWorld).invert(),this}setDrawPlane(e,t=0){return this.plane.set(e,t),this.setDrawingBoardMatrix(),this}setDrawPlaneByFace(e){return this.plane.setFromCoplanarPoints(e.a,e.b,e.c),this.setDrawingBoardMatrix(),this}setDrawingBoardMatrix(){const e=this.drawingBoard;e.position.copy(this.plane.normal).multiplyScalar(this.plane.constant),e.applyQuaternion(new n.Quaternion().setFromUnitVectors(new n.Vector3(0,0,1),this.plane.normal)),e.updateMatrix(),e.updateMatrixWorld(!0)}dispose(){this.drawingBoard.removeFromParent(),this.drawingBoard.geometry.dispose(),this.drawingBoard.material.dispose(),this.engine.removeEventListener(c.ENGINE_EVENT.SETSCENE,this.setScene)}showDrawingBoard(e){return e?this.engine.scene.add(this.drawingBoard):this.engine.scene.remove(this.drawingBoard),this}setSketcherByPlane(e=new n.Vector3(0,0,1),t=0,h=new n.Vector3(0,50,0)){return this.setDrawPlane(e,t).offsetCamera(h)}setSketcherByFace(e,t=new n.Vector3(0,50,0)){return this.setDrawPlaneByFace(e).offsetCamera(t)}setSketcherByFaceAndObject(e,t){const h=new n.Vector3().setFromMatrixPosition(t.matrixWorld);return this.setRelativeObject(t),this.setSketcherByFace(e,h)}changeToDrawingView(){return this.engine.setCamera(this.camera),this}beginDraw(){this.dispatchEvent({type:"begin"});const e=this.engine.pointerManager;return e.once("mousedown",t=>{this.cacheWriteFun(t),e.addEventListener("mousedown",this.cacheWriteFun),e.addEventListener("pointermove",this.cacheMoveFun)}),this}endDraw(e=!0){const t=this.engine.pointerManager;return t.removeEventListener("mousedown",this.cacheWriteFun),t.removeEventListener("pointermove",this.cacheMoveFun),this.dispatchEvent({type:"end"}),e&&(this.removeEvent("begin"),this.removeEvent("write"),this.removeEvent("move"),this.removeEvent("end")),this}}const p=r.transPkgName(l),m=function(){return{name:p,deps:[o.POINTER_MANAGER_PLUGIN],install(a){const u=new w(a);a.pathSketcher=u},dispose(a){a.pathSketcher.dispose(),delete a.pathSketcher}}};i.PATHSKETCHER_EVENT=d,i.PATH_DRAWING_PLUGIN=p,i.PathDrawingPlugin=m,Object.defineProperties(i,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
