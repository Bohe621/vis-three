(function(i,a){typeof exports=="object"&&typeof module!="undefined"?a(exports,require("@vis-three/utils"),require("@vis-three/plugin-pointer-manager"),require("@vis-three/core"),require("three")):typeof define=="function"&&define.amd?define(["exports","@vis-three/utils","@vis-three/plugin-pointer-manager","@vis-three/core","three"],a):(i=typeof globalThis!="undefined"?globalThis:i||self,a((i["vis-three"]=i["vis-three"]||{},i["vis-three"]["plugin-path-drawing"]={}),i.utils,i.pluginPointerManager,i.core,i.three))})(this,function(i,a,o,c,n){"use strict";var m=Object.defineProperty;var v=(i,a,o)=>a in i?m(i,a,{enumerable:!0,configurable:!0,writable:!0,value:o}):i[a]=o;var r=(i,a,o)=>(v(i,typeof a!="symbol"?a+"":a,o),o);const g="@vis-three/plugin-path-drawing";var d=(s=>(s.BEGIN="begin",s.END="end",s.WRITE="write",s.MOVE="move",s))(d||{});class p extends c.EventDispatcher{constructor(e){super();r(this,"camera",new n.OrthographicCamera(-window.innerWidth,window.innerWidth,window.innerHeight,-window.innerHeight,0,1e4));r(this,"plane",new n.Plane(new n.Vector3(0,0,1),0));r(this,"boardOffset",20);r(this,"drawingBoard",new n.Mesh(new n.PlaneBufferGeometry(150,150),new n.MeshBasicMaterial({transparent:!0,opacity:.2,color:"rgb(64, 255, 242)"})));r(this,"relativeMatrixInvert",new n.Matrix4);r(this,"engine");r(this,"cachePoint",new n.Vector3);r(this,"cacheRelativePoint",new n.Vector3);r(this,"begun",!1);r(this,"setScene",e=>{this.drawingBoard.parent&&e.scene.add(this.drawingBoard)});r(this,"cacheBeginWriteFun",e=>{const t=this.engine.pointerManager;this.cacheWriteFun(e),t.addEventListener("mousedown",this.cacheWriteFun),t.addEventListener("pointermove",this.cacheMoveFun),t.removeEventListener("mousedown",this.cacheBeginWriteFun),this.begun=!0});r(this,"cacheWriteFun",e=>{const t=this.engine.pointerManager.intersectPlane(this.camera,this.plane,this.cachePoint);if(!t){console.warn("path sketcher can not intersect point in this plane and this camera");return}this.dispatchEvent({type:"write",point:t,relativePoint:this.cacheRelativePoint.copy(t).applyMatrix4(this.relativeMatrixInvert)})});r(this,"cacheMoveFun",e=>{const t=this.engine.pointerManager.intersectPlane(this.camera,this.plane,this.cachePoint);if(!t){console.warn("path sketcher can not intersect point in this plane and this camera");return}this.dispatchEvent({type:"move",point:t,relativePoint:this.cacheRelativePoint.copy(t).applyMatrix4(this.relativeMatrixInvert)})});this.engine=e,this.drawingBoard.raycast=()=>{},this.drawingBoard.matrixAutoUpdate=!1,this.setDrawingBoardMatrix(),e.addEventListener(c.ENGINE_EVENT.SETSCENE,this.setScene)}setDraingBoardSize(e,t){const h=new n.PlaneBufferGeometry(e,t);this.drawingBoard.geometry.copy(h),h.dispose()}offsetCamera(e){const t=e.length();return e.normalize().applyQuaternion(new n.Quaternion().setFromUnitVectors(new n.Vector3(0,1,0),this.plane.normal)),this.camera.position.copy(this.plane.normal).multiplyScalar(this.plane.constant).add(e.multiplyScalar(t)),this.camera.zoom=(this.camera.top-this.camera.bottom)/(this.drawingBoard.geometry.parameters.height+this.boardOffset),this.camera.updateProjectionMatrix(),this.drawingBoard.position.add(e),this.drawingBoard.updateMatrix(),this.drawingBoard.updateMatrixWorld(!0),this}setRelativeObject(e){return this.relativeMatrixInvert.copy(e.matrixWorld).invert(),this}setDrawPlane(e,t=0){return this.plane.set(e,t),this.setDrawingBoardMatrix(),this}setDrawPlaneByFace(e){return this.plane.setFromCoplanarPoints(e.a,e.b,e.c),this.setDrawingBoardMatrix(),this}setDrawingBoardMatrix(){const e=this.drawingBoard;e.position.copy(this.plane.normal).multiplyScalar(this.plane.constant),e.applyQuaternion(new n.Quaternion().setFromUnitVectors(new n.Vector3(0,0,1),this.plane.normal)),e.updateMatrix(),e.updateMatrixWorld(!0)}dispose(){this.drawingBoard.removeFromParent(),this.drawingBoard.geometry.dispose(),this.drawingBoard.material.dispose(),this.engine.removeEventListener(c.ENGINE_EVENT.SETSCENE,this.setScene)}showDrawingBoard(e){return e?this.engine.scene.add(this.drawingBoard):this.engine.scene.remove(this.drawingBoard),this}setSketcherByPlane(e=new n.Vector3(0,0,1),t=0,h=new n.Vector3(0,50,0)){return this.setDrawPlane(e,t).offsetCamera(h)}setSketcherByFace(e,t=new n.Vector3(0,50,0)){return this.setDrawPlaneByFace(e).offsetCamera(t)}setSketcherByFaceAndObject(e,t){const h=new n.Vector3().setFromMatrixPosition(t.matrixWorld);return this.setRelativeObject(t),this.setSketcherByFace(e,h)}changeToDrawingView(){return this.engine.setCamera(this.camera),this}beginDraw(){return this.dispatchEvent({type:"begin"}),this.begun=!1,this.engine.pointerManager.addEventListener("mousedown",this.cacheBeginWriteFun),this}endDraw(e=!0){const t=this.engine.pointerManager;return t.removeEventListener("mousedown",this.cacheWriteFun),t.removeEventListener("pointermove",this.cacheMoveFun),this.dispatchEvent({type:"end"}),e&&(this.begun||this.engine.pointerManager.removeEventListener("mousedown",this.cacheBeginWriteFun),this.removeEvent("begin"),this.removeEvent("write"),this.removeEvent("move"),this.removeEvent("end")),this}}const u=a.transPkgName(g),w=function(){return{name:u,deps:[o.POINTER_MANAGER_PLUGIN],install(s){const l=new p(s);s.pathSketcher=l},dispose(s){s.pathSketcher.dispose(),delete s.pathSketcher}}};i.PATHSKETCHER_EVENT=d,i.PATH_DRAWING_PLUGIN=u,i.PathDrawingPlugin=w,i.PathSketcher=p,Object.defineProperties(i,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
