(function(i,n){typeof exports=="object"&&typeof module!="undefined"?n(exports,require("@vis-three/core"),require("@vis-three/middleware"),require("@vis-three/utils"),require("@vis-three/convenient"),require("three")):typeof define=="function"&&define.amd?define(["exports","@vis-three/core","@vis-three/middleware","@vis-three/utils","@vis-three/convenient","three"],n):(i=typeof globalThis!="undefined"?globalThis:i||self,n((i["vis-three"]=i["vis-three"]||{},i["vis-three"]["plugin-path-support-controls"]={}),i.core,i.middleware,i.utils,i.convenient,i.three))})(this,function(i,n,h,E,f,a){"use strict";var N=Object.defineProperty;var _=(i,n,h)=>n in i?N(i,n,{enumerable:!0,configurable:!0,writable:!0,value:h}):i[n]=h;var s=(i,n,h)=>(_(i,typeof n!="symbol"?n+"":n,h),h);const g="@vis-three/plugin-path-support-controls",P=new a.CanvasTexture(new f.CanvasGenerator({width:32,height:32}).draw(r=>{r.beginPath(),r.fillStyle="rgba(0, 0, 0, 0)",r.fillRect(0,0,32,32),r.closePath(),r.beginPath(),r.fillStyle="rgb(0, 255, 238)",r.strokeStyle="black",r.lineWidth=1,r.arc(16,16,15,0,2*Math.PI),r.stroke(),r.fill(),r.closePath()}).getDom()),d=class extends a.Points{constructor(e,t,o,c){super();s(this,"dragging",!1);s(this,"raycaster",new a.Raycaster);s(this,"plane",new a.Plane);s(this,"pointerManager");s(this,"cachePlaneVector3",new a.Vector3);s(this,"cacheQuaternion",new a.Quaternion);s(this,"cacheNormal",new a.Vector3);s(this,"cachePosition",new a.Vector3);s(this,"index",0);s(this,"domElement");s(this,"camera");s(this,"config");s(this,"object");s(this,"_pointerHover",this.pointerHover.bind(this));s(this,"_pointerMove",this.pointerMove.bind(this));s(this,"_pointerDown",this.pointerDown.bind(this));s(this,"_pointerUp",this.pointerUp.bind(this));this.material=d.commonMaterial,this.renderOrder=1/0,this.matrixAutoUpdate=!1,c&&this.setConfig(c),o&&this.setObject(o),this.setDom(t).setCamera(e).connect()}setDom(e){return this.domElement&&this.disconnect(),this.domElement=e,this.connect(),this}setCamera(e){return this.camera=e,this}setObject(e){return this.object=e,this.matrix=e.matrix,this.matrixWorld=e.matrixWorld,this}setConfig(e){this.config=e;const t=[];return this.config.curves.forEach((o,c,l)=>{c===l.length-1?t.push(o.params[0],o.params[1],0,o.params[o.params.length-2],o.params[o.params.length-1],0):t.push(o.params[0],o.params[1],0)}),this.geometry.setAttribute("position",new a.BufferAttribute(new Float32Array(t),3)),this.geometry.getAttribute("position").needsUpdate=!0,this}update(){this.setConfig(this.config)}use(e){this.pointerManager=e}connect(){return this.object&&this.config&&(this.domElement.addEventListener("pointermove",this._pointerHover),this.domElement.addEventListener("mousedown",this._pointerDown)),this}disconnect(){return this.domElement.removeEventListener("pointermove",this._pointerHover),this.domElement.removeEventListener("mousedown",this._pointerDown),this}dispose(){this.geometry.dispose(),Array.isArray(this.material)?this.material.forEach(e=>{e.dispose()}):this.material.dispose()}intersectPoint(e){this.raycaster.setFromCamera(this.pointerManager.mouse,this.camera);const t=this.raycaster.intersectObject(this);return t.length?t[0].index:null}intersectPlane(e){return this.raycaster.setFromCamera(this.pointerManager.mouse,this.camera),this.raycaster.ray.intersectPlane(this.plane,this.cachePlaneVector3)}pointerHover(e){if(this.dragging||!this.visible)return;const t=this.intersectPoint(e);Number.isInteger(t)?this.domElement.style.cursor="move":this.domElement.style.cursor=""}pointerDown(e){if(!this.visible)return;this.cacheQuaternion.setFromRotationMatrix(this.object.matrixWorld),this.cacheNormal.set(0,0,1).applyQuaternion(this.cacheQuaternion),this.cachePosition.setFromMatrixPosition(this.object.matrixWorld),this.plane.set(this.cacheNormal,this.cachePosition.length());const t=this.intersectPoint(e);typeof t=="number"&&(this.index=t,this.dragging=!0,this.domElement.addEventListener("mousemove",this._pointerMove),this.domElement.addEventListener("mouseup",this._pointerUp))}pointerMove(e){if(!this.visible&&!this.dragging)return;const t=this.intersectPlane(e);if(!t)return;t.sub(this.cachePosition);const o=this.config.curves.length;if(this.index!==this.config.curves.length){const m=this.config.curves[this.index];m.params[0]=t.x,m.params[1]=t.y}else{const m=this.config.curves[o-1];m.params[m.params.length-2]=t.x,m.params[m.params.length-1]=t.y}const c=this.geometry.getAttribute("position"),l=c.array;l[this.index*3]=t.x,l[this.index*3+1]=t.y,c.needsUpdate=!0}pointerUp(e){this.dragging=!1,this.domElement.removeEventListener("mousemove",this._pointerMove),this.domElement.removeEventListener("mouseup",this._pointerUp),this.geometry.computeBoundingSphere(),this.geometry.computeBoundingBox()}};let p=d;s(p,"commonMaterial",new a.PointsMaterial({map:P,transparent:!0,depthFunc:a.AlwaysDepth,alphaTest:.01,sizeAttenuation:!1,size:15}));const v=E.transPkgName(g),y=function(){let r,u;return{name:v,deps:[...h.PLUGINS,h.POINTER_MANAGER_PLUGIN],install(e){const t=new p(e.camera,e.dom);u=o=>{t.setDom(o.dom)},r=o=>{t.setCamera(e.camera)},e.addEventListener(n.ENGINE_EVENT.SETDOM,u),e.addEventListener(n.ENGINE_EVENT.SETCAMERA,r)},dispose(e){e.removeEventListener(n.ENGINE_EVENT.SETDOM,u),e.removeEventListener(n.ENGINE_EVENT.SETCAMERA,r),e.pathSupportControls.disconnect().dispose(),delete e.pathSupportControls}}};i.PATH_SUPPORT_CONTROLS_PLUGIN=v,i.PathSupportControlsPlugin=y,Object.defineProperties(i,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
