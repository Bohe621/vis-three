(function(r,m){typeof exports=="object"&&typeof module!="undefined"?m(exports,require("@vis-three/core"),require("@vis-three/middleware"),require("@vis-three/utils"),require("three"),require("@vis-three/convenient")):typeof define=="function"&&define.amd?define(["exports","@vis-three/core","@vis-three/middleware","@vis-three/utils","three","@vis-three/convenient"],m):(r=typeof globalThis!="undefined"?globalThis:r||self,m((r["vis-three"]=r["vis-three"]||{},r["vis-three"]["plugin-path-support-controls"]={}),r.core,r.middleware,r.utils,r.three,r.convenient))})(this,function(r,m,d,P,s,E){"use strict";var T=Object.defineProperty;var A=(r,m,d)=>m in r?T(r,m,{enumerable:!0,configurable:!0,writable:!0,value:d}):r[m]=d;var n=(r,m,d)=>(A(r,typeof m!="symbol"?m+"":m,d),d);const I="@vis-three/plugin-path-support-controls",C=new s.CanvasTexture(new E.CanvasGenerator({width:32,height:32}).draw(e=>{e.beginPath(),e.fillStyle="rgba(0, 0, 0, 0)",e.fillRect(0,0,32,32),e.closePath(),e.beginPath(),e.fillStyle="rgb(0, 255, 238)",e.strokeStyle="black",e.lineWidth=1,e.arc(16,16,15,0,2*Math.PI),e.stroke(),e.fill(),e.closePath()}).getDom()),b=new s.CanvasTexture(new E.CanvasGenerator({width:32,height:32}).draw(e=>{e.beginPath(),e.fillStyle="rgba(0, 0, 0, 0)",e.fillRect(0,0,32,32),e.closePath(),e.beginPath(),e.fillStyle="rgb(255, 248, 0)",e.strokeStyle="black",e.lineWidth=1,e.arc(16,16,15,0,2*Math.PI),e.stroke(),e.fill(),e.closePath()}).getDom()),D=new s.CanvasTexture(new E.CanvasGenerator({width:32,height:32}).draw(e=>{e.beginPath(),e.fillStyle="rgba(0, 0, 0, 0)",e.fillRect(0,0,32,32),e.closePath(),e.beginPath(),e.fillStyle="rgb(255, 0, 0)",e.strokeStyle="black",e.lineWidth=1,e.moveTo(1,0),e.lineTo(31,16),e.lineTo(0,31),e.lineTo(1,0),e.stroke(),e.fill(),e.closePath()}).getDom()),v=class extends s.Object3D{constructor(t,i,h,o){super();n(this,"dragging",!1);n(this,"anchorGizmo",new s.Points(new s.BufferGeometry,v.anchorMaterial));n(this,"moveGizmo",new s.Points(new s.BufferGeometry,v.moveMaterial));n(this,"switchGizmo",new s.Points(new s.BufferGeometry,v.switchMaterial));n(this,"raycaster",new s.Raycaster);n(this,"plane",new s.Plane);n(this,"pointerManager");n(this,"cachePlaneVector3",new s.Vector3);n(this,"cacheQuaternion",new s.Quaternion);n(this,"cacheNormal",new s.Vector3);n(this,"cachePosition",new s.Vector3);n(this,"cacheVertical",0);n(this,"cacheMouseDownPoistion",new s.Vector3);n(this,"cacheMouseMoveDirection",new s.Vector3);n(this,"geometryIndexFunMap",{arcVertical:[],arcClockwise:[],bezierCP1:[],bezierCP2:[],quadraticCP1:[]});n(this,"anchorArcUpdateIndexs",[]);n(this,"arcVecticalDirectionsMap",{});n(this,"cacheConfigIndex",0);n(this,"currentGuizmo");n(this,"currentIndex",0);n(this,"domElement");n(this,"camera");n(this,"config");n(this,"object");n(this,"_pointerHover",this.pointerHover.bind(this));n(this,"_pointerMove",this.pointerMove.bind(this));n(this,"_pointerDown",this.pointerDown.bind(this));n(this,"_pointerUp",this.pointerUp.bind(this));this.anchorGizmo.type="PathSupportControlsAnchorGizmo",this.moveGizmo.type="PathSupportControlsMoveGizmo",this.switchGizmo.type="PathSupportControlsSwitchGizmo",this.add(this.anchorGizmo,this.moveGizmo,this.switchGizmo),this.renderOrder=1/0,this.matrixAutoUpdate=!1,o&&this.setConfig(o),h&&this.setObject(h),this.setDom(i).setCamera(t).connect()}setDom(t){return this.domElement&&this.disconnect(),this.domElement=t,this.connect(),this}setCamera(t){return this.camera=t,this}setObject(t){return this.object=t,this.matrix=t.matrix,this.matrixWorld=t.matrixWorld,this}setConfig(t){this.geometryIndexFunMap={arcVertical:[],arcClockwise:[],bezierCP1:[],bezierCP2:[],quadraticCP1:[]},this.arcVecticalDirectionsMap={},this.anchorArcUpdateIndexs=[],this.config=t;const i=[],h=[],o=[],u=this.geometryIndexFunMap,M=this.arcVecticalDirectionsMap;this.config.curves.forEach((a,p,l)=>{if(p===l.length-1?i.push(a.params[0],a.params[1],0,a.params[a.params.length-2],a.params[a.params.length-1],0):i.push(a.params[0],a.params[1],0),a.curve==="arc"){this.anchorArcUpdateIndexs.push(p,p+1);const c=P.getArcDetail(...a.params);o.push(c.center.x,c.center.y,0),u.arcVertical.push(o.length/3-1),M[o.length/3-1]={segment:p,direction:new s.Vector3(c.verticalDirection.x,c.verticalDirection.y,0)};const w=c.mid.clone().sub(c.start).multiplyScalar(.5),z=c.start.clone().add(w);h.push(z.x,z.y,0),u.arcClockwise.push(p)}});const f=function(a,p){const l=a.geometry;l.setAttribute("position",new s.BufferAttribute(new Float32Array(p),3)),l.getAttribute("position").needsUpdate=!0,l.computeBoundingBox(),l.computeBoundingSphere()};return f(this.anchorGizmo,i),f(this.moveGizmo,o),f(this.switchGizmo,h),this}update(){this.setConfig(this.config)}use(t){this.pointerManager=t}connect(){return this.object&&this.config&&(this.domElement.addEventListener("pointermove",this._pointerHover),this.domElement.addEventListener("mousedown",this._pointerDown)),this}disconnect(){return this.domElement.removeEventListener("pointermove",this._pointerHover),this.domElement.removeEventListener("mousedown",this._pointerDown),this}dispose(){const t=i=>{i.geometry.dispose(),Array.isArray(i.material)?i.material.forEach(h=>{h.dispose()}):i.material.dispose()};t(this.anchorGizmo),t(this.moveGizmo),t(this.switchGizmo)}intersectPoint(t){this.raycaster.setFromCamera(this.pointerManager.mouse,this.camera);const i=this.raycaster.intersectObject(this,!0);return i.length?(this.currentGuizmo=i[0].object,this.currentIndex=i[0].index,{guizmo:this.currentGuizmo,index:this.currentIndex}):null}intersectPlane(t){return this.raycaster.setFromCamera(this.pointerManager.mouse,this.camera),this.raycaster.ray.intersectPlane(this.plane,this.cachePlaneVector3)}pointerHover(t){if(this.dragging||!this.visible)return;const i=this.intersectPoint(t);Number.isInteger(i==null?void 0:i.index)?this.domElement.style.cursor="move":this.domElement.style.cursor=""}pointerDown(t){if(!this.visible)return;if(this.cacheQuaternion.setFromRotationMatrix(this.object.matrixWorld),this.cacheNormal.set(0,0,1).applyQuaternion(this.cacheQuaternion),this.cachePosition.setFromMatrixPosition(this.object.matrixWorld),this.plane.set(this.cacheNormal,this.cachePosition.length()),this.intersectPoint(t)){if(this.currentGuizmo===this.switchGizmo){const o=this.geometryIndexFunMap.arcClockwise[this.currentIndex],u=this.config.curves[o];this.dispatchEvent({type:"mousedown",index:o,config:this.config,operate:"switch"}),u.params[3]=!u.params[3],this.dispatchEvent({type:"changing",index:o,config:this.config,operate:"switch"}),this.cacheConfigIndex=o,this.domElement.addEventListener("mouseup",this._pointerUp);return}if(this.dragging=!0,this.cacheMouseDownPoistion.copy(this.intersectPlane(t)).sub(this.cachePosition),this.currentGuizmo===this.moveGizmo&&this.geometryIndexFunMap.arcVertical.includes(this.currentIndex)){const o=this.arcVecticalDirectionsMap[this.currentIndex];this.cacheVertical=this.config.curves[o.segment].params[2],this.dispatchEvent({type:"mousedown",index:o.segment,config:this.config,operate:"move"}),this.cacheConfigIndex=o.segment}const h=this.currentIndex===this.config.curves.length?this.currentIndex-1:this.currentIndex;this.dispatchEvent({type:"mousedown",index:h,config:this.config,operate:"anchor"}),this.cacheConfigIndex=h,this.domElement.addEventListener("mousemove",this._pointerMove),this.domElement.addEventListener("mouseup",this._pointerUp)}}pointerMove(t){if(!this.visible&&!this.dragging)return;const i=this.intersectPlane(t);if(!i)return;i.sub(this.cachePosition),this.cacheMouseMoveDirection.copy(i).sub(this.cacheMouseDownPoistion).normalize();const h=this.currentGuizmo,o=this.currentIndex,u=this.config,M=this.cacheConfigIndex,f=this.geometryIndexFunMap;if(h===this.anchorGizmo){const a=u.curves.length;if(o!==u.curves.length){const c=u.curves[o];c.params[0]=i.x,c.params[1]=i.y}else{const c=u.curves[a-1];c.params[c.params.length-2]=i.x,c.params[c.params.length-1]=i.y}const p=this.anchorGizmo.geometry.getAttribute("position"),l=p.array;l[o*3]=i.x,l[o*3+1]=i.y,p.needsUpdate=!0,this.anchorArcUpdateIndexs.includes(this.currentIndex)&&this.update(),this.dispatchEvent({type:"changing",index:M,config:this.config,operate:"anchor"})}else if(h===this.moveGizmo&&f.arcVertical.includes(o)){const a=this.arcVecticalDirectionsMap[o],p=this.cacheMouseMoveDirection.angleTo(a.direction);u.curves[a.segment].params[2]=this.cacheVertical+i.sub(this.cacheMouseDownPoistion).length()*Math.cos(p);const l=P.getArcDetail(...u.curves[a.segment].params),c=this.moveGizmo.geometry.getAttribute("position"),w=c.array;w[o*3]=l.center.x,w[o*3+1]=l.center.y,c.needsUpdate=!0,this.dispatchEvent({type:"changing",index:a.segment,config:this.config,operate:"move"})}}pointerUp(t){this.dragging=!1,this.domElement.removeEventListener("mousemove",this._pointerMove),this.domElement.removeEventListener("mouseup",this._pointerUp),this.currentGuizmo&&(this.currentGuizmo.geometry.computeBoundingSphere(),this.currentGuizmo.geometry.computeBoundingBox()),this.dispatchEvent({type:"mouseup",index:this.cacheConfigIndex,config:this.config,operate:this.currentGuizmo===this.anchorGizmo?"anchor":this.currentGuizmo===this.moveGizmo?"move":"switch"})}};let g=v;n(g,"anchorMaterial",new s.PointsMaterial({map:C,transparent:!0,depthFunc:s.AlwaysDepth,alphaTest:.01,sizeAttenuation:!1,size:15})),n(g,"moveMaterial",new s.PointsMaterial({map:b,transparent:!0,depthFunc:s.AlwaysDepth,alphaTest:.01,sizeAttenuation:!1,size:15})),n(g,"switchMaterial",new s.PointsMaterial({map:D,transparent:!0,depthFunc:s.AlwaysDepth,alphaTest:.01,sizeAttenuation:!1,size:15}));const G=P.transPkgName(I),x=function(){let e,y;return{name:G,deps:[...d.PLUGINS,d.POINTER_MANAGER_PLUGIN],install(t){const i=new g(t.camera,t.dom);i.use(t.pointerManager),t.pathSupportControls=i,y=h=>{i.setDom(h.dom)},e=h=>{i.setCamera(h.camera)},t.addEventListener(m.ENGINE_EVENT.SETDOM,y),t.addEventListener(m.ENGINE_EVENT.SETCAMERA,e)},dispose(t){t.removeEventListener(m.ENGINE_EVENT.SETDOM,y),t.removeEventListener(m.ENGINE_EVENT.SETCAMERA,e),t.pathSupportControls.disconnect().dispose(),delete t.pathSupportControls}}};r.PATH_SUPPORT_CONTROLS_PLUGIN=G,r.PathSupportControlsPlugin=x,Object.defineProperties(r,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
