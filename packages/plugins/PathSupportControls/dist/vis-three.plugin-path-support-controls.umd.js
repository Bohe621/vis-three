(function(o,m){typeof exports=="object"&&typeof module!="undefined"?m(exports,require("@vis-three/core"),require("@vis-three/middleware"),require("@vis-three/utils"),require("three"),require("@vis-three/convenient")):typeof define=="function"&&define.amd?define(["exports","@vis-three/core","@vis-three/middleware","@vis-three/utils","three","@vis-three/convenient"],m):(o=typeof globalThis!="undefined"?globalThis:o||self,m((o["vis-three"]=o["vis-three"]||{},o["vis-three"]["plugin-path-support-controls"]={}),o.core,o.middleware,o.utils,o.three,o.convenient))})(this,function(o,m,d,P,r,E){"use strict";var T=Object.defineProperty;var A=(o,m,d)=>m in o?T(o,m,{enumerable:!0,configurable:!0,writable:!0,value:d}):o[m]=d;var i=(o,m,d)=>(A(o,typeof m!="symbol"?m+"":m,d),d);const z="@vis-three/plugin-path-support-controls",I=new r.CanvasTexture(new E.CanvasGenerator({width:32,height:32}).draw(e=>{e.beginPath(),e.fillStyle="rgba(0, 0, 0, 0)",e.fillRect(0,0,32,32),e.closePath(),e.beginPath(),e.fillStyle="rgb(0, 255, 238)",e.strokeStyle="black",e.lineWidth=1,e.arc(16,16,15,0,2*Math.PI),e.stroke(),e.fill(),e.closePath()}).getDom()),C=new r.CanvasTexture(new E.CanvasGenerator({width:32,height:32}).draw(e=>{e.beginPath(),e.fillStyle="rgba(0, 0, 0, 0)",e.fillRect(0,0,32,32),e.closePath(),e.beginPath(),e.fillStyle="rgb(255, 248, 0)",e.strokeStyle="black",e.lineWidth=1,e.arc(16,16,15,0,2*Math.PI),e.stroke(),e.fill(),e.closePath()}).getDom()),D=new r.CanvasTexture(new E.CanvasGenerator({width:32,height:32}).draw(e=>{e.beginPath(),e.fillStyle="rgba(0, 0, 0, 0)",e.fillRect(0,0,32,32),e.closePath(),e.beginPath(),e.fillStyle="rgb(255, 0, 0)",e.strokeStyle="black",e.lineWidth=1,e.moveTo(1,0),e.lineTo(31,16),e.lineTo(0,31),e.lineTo(1,0),e.stroke(),e.fill(),e.closePath()}).getDom()),f=class extends r.Object3D{constructor(s,t,a,n){super();i(this,"dragging",!1);i(this,"raycaster",new r.Raycaster);i(this,"anchorGizmo",new r.Points(new r.BufferGeometry,f.anchorMaterial));i(this,"moveGizmo",new r.Points(new r.BufferGeometry,f.moveMaterial));i(this,"switchGizmo",new r.Points(new r.BufferGeometry,f.switchMaterial));i(this,"plane",new r.Plane);i(this,"pointerManager");i(this,"cachePlaneVector3",new r.Vector3);i(this,"cacheQuaternion",new r.Quaternion);i(this,"cacheNormal",new r.Vector3);i(this,"cachePosition",new r.Vector3);i(this,"cacheVertical",0);i(this,"cacheMouseDownPoistion",new r.Vector3);i(this,"cacheMouseMoveDirection",new r.Vector3);i(this,"geometryIndexFunMap",{arcVertical:[],arcClockwise:[],bezierCP1:[],bezierCP2:[],quadraticCP1:[]});i(this,"anchorArcUpdateIndexs",[]);i(this,"arcVecticalDirectionsMap",{});i(this,"cacheConfigIndex",0);i(this,"currentGuizmo");i(this,"currentIndex",0);i(this,"domElement");i(this,"camera");i(this,"config");i(this,"object");i(this,"_pointerHover",this.pointerHover.bind(this));i(this,"_pointerMove",this.pointerMove.bind(this));i(this,"_pointerDown",this.pointerDown.bind(this));i(this,"_pointerUp",this.pointerUp.bind(this));this.anchorGizmo.type="PathSupportControlsAnchorGizmo",this.moveGizmo.type="PathSupportControlsMoveGizmo",this.switchGizmo.type="PathSupportControlsSwitchGizmo",this.add(this.anchorGizmo,this.moveGizmo,this.switchGizmo),this.renderOrder=1/0,this.matrixAutoUpdate=!1,n&&this.setConfig(n),a&&this.setObject(a),this.setDom(t).setCamera(s).connect()}setDom(s){return this.domElement&&this.disconnect(),this.domElement=s,this.connect(),this}setCamera(s){return this.camera=s,this}setObject(s){return this.object=s,this.matrix=s.matrix,this.matrixWorld=s.matrixWorld,this}setConfig(s){this.geometryIndexFunMap={arcVertical:[],arcClockwise:[],bezierCP1:[],bezierCP2:[],quadraticCP1:[]},this.arcVecticalDirectionsMap={},this.anchorArcUpdateIndexs=[],this.config=s;const t=[],a=[],n=[],u=this.geometryIndexFunMap,M=this.arcVecticalDirectionsMap;this.config.curves.forEach((c,l,p)=>{if(l===p.length-1?t.push(c.params[0],c.params[1],0,c.params[c.params.length-2],c.params[c.params.length-1],0):t.push(c.params[0],c.params[1],0),c.curve==="arc"){this.anchorArcUpdateIndexs.push(l,l+1);const h=P.getArcDetail(...c.params);n.push(h.center.x,h.center.y,0),u.arcVertical.push(n.length/3-1),M[n.length/3-1]={segment:l,direction:new r.Vector3(h.verticalDirection.x,h.verticalDirection.y,0)};const w=h.mid.clone().sub(h.start).multiplyScalar(.5),b=h.start.clone().add(w);a.push(b.x,b.y,0),u.arcClockwise.push(l)}});const v=function(c,l){const p=c.geometry;p.setAttribute("position",new r.BufferAttribute(new Float32Array(l),3)),p.getAttribute("position").needsUpdate=!0,p.computeBoundingBox(),p.computeBoundingSphere()};return v(this.anchorGizmo,t),v(this.moveGizmo,n),v(this.switchGizmo,a),this}update(){this.setConfig(this.config)}use(s){this.pointerManager=s}connect(){return this.object&&this.config&&(this.domElement.addEventListener("pointermove",this._pointerHover),this.domElement.addEventListener("mousedown",this._pointerDown)),this}disconnect(){return this.domElement.removeEventListener("pointermove",this._pointerHover),this.domElement.removeEventListener("mousedown",this._pointerDown),this}dispose(){const s=t=>{t.geometry.dispose(),Array.isArray(t.material)?t.material.forEach(a=>{a.dispose()}):t.material.dispose()};s(this.anchorGizmo),s(this.moveGizmo),s(this.switchGizmo)}intersectPoint(s){this.raycaster.setFromCamera(this.pointerManager.mouse,this.camera);const t=this.raycaster.intersectObject(this,!0);return t.length?(this.currentGuizmo=t[0].object,this.currentIndex=t[0].index,{guizmo:this.currentGuizmo,index:this.currentIndex}):null}intersectPlane(s){return this.raycaster.setFromCamera(this.pointerManager.mouse,this.camera),this.raycaster.ray.intersectPlane(this.plane,this.cachePlaneVector3)}pointerHover(s){if(this.dragging||!this.visible)return;const t=this.intersectPoint(s);Number.isInteger(t==null?void 0:t.index)?this.domElement.style.cursor="move":this.domElement.style.cursor=""}pointerDown(s){if(!this.visible)return;if(this.cacheQuaternion.setFromRotationMatrix(this.object.matrixWorld),this.cacheNormal.set(0,0,1).applyQuaternion(this.cacheQuaternion),this.cachePosition.setFromMatrixPosition(this.object.matrixWorld),this.plane.set(this.cacheNormal,this.cachePosition.length()),this.intersectPoint(s)){if(this.dragging=!0,this.currentGuizmo===this.switchGizmo){const n=this.geometryIndexFunMap.arcClockwise[this.currentIndex],u=this.config.curves[n];this.dispatchEvent({type:"mousedown",index:n,config:this.config,last:!1,object:this.object,operate:"switch"}),u.params[3]=!u.params[3],this.dispatchEvent({type:"changing",index:n,config:this.config,last:!1,object:this.object,operate:"switch"}),this.cacheConfigIndex=n,this.domElement.addEventListener("mouseup",this._pointerUp);return}if(this.cacheMouseDownPoistion.copy(this.intersectPlane(s)).sub(this.cachePosition),this.currentGuizmo===this.moveGizmo&&this.geometryIndexFunMap.arcVertical.includes(this.currentIndex)){const n=this.arcVecticalDirectionsMap[this.currentIndex];this.cacheVertical=this.config.curves[n.segment].params[2],this.dispatchEvent({type:"mousedown",index:n.segment,config:this.config,last:!1,object:this.object,operate:"move"}),this.cacheConfigIndex=n.segment}const a=this.currentIndex===this.config.curves.length?this.currentIndex-1:this.currentIndex;this.dispatchEvent({type:"mousedown",index:a,config:this.config,last:this.currentIndex===this.config.curves.length,object:this.object,operate:"anchor"}),this.cacheConfigIndex=a,this.domElement.addEventListener("mousemove",this._pointerMove),this.domElement.addEventListener("mouseup",this._pointerUp)}}pointerMove(s){if(!this.visible&&!this.dragging)return;const t=this.intersectPlane(s);if(!t)return;t.sub(this.cachePosition),this.cacheMouseMoveDirection.copy(t).sub(this.cacheMouseDownPoistion).normalize();const a=this.currentGuizmo,n=this.currentIndex,u=this.config,M=this.cacheConfigIndex,v=this.geometryIndexFunMap;if(a===this.anchorGizmo){const c=u.curves.length;if(n!==u.curves.length){const h=u.curves[n];h.params[0]=t.x,h.params[1]=t.y}else{const h=u.curves[c-1];h.params[h.params.length-2]=t.x,h.params[h.params.length-1]=t.y}const l=this.anchorGizmo.geometry.getAttribute("position"),p=l.array;p[n*3]=t.x,p[n*3+1]=t.y,l.needsUpdate=!0,this.anchorArcUpdateIndexs.includes(this.currentIndex)&&this.update(),this.dispatchEvent({type:"changing",index:M,config:this.config,last:this.currentIndex===this.config.curves.length,object:this.object,operate:"anchor"})}else if(a===this.moveGizmo&&v.arcVertical.includes(n)){const c=this.arcVecticalDirectionsMap[n],l=this.cacheMouseMoveDirection.angleTo(c.direction);u.curves[c.segment].params[2]=this.cacheVertical+t.sub(this.cacheMouseDownPoistion).length()*Math.cos(l);const p=P.getArcDetail(...u.curves[c.segment].params),h=this.moveGizmo.geometry.getAttribute("position"),w=h.array;w[n*3]=p.center.x,w[n*3+1]=p.center.y,h.needsUpdate=!0,this.dispatchEvent({type:"changing",index:c.segment,config:this.config,last:!1,object:this.object,operate:"move"})}}pointerUp(s){this.dragging=!1,this.domElement.removeEventListener("mousemove",this._pointerMove),this.domElement.removeEventListener("mouseup",this._pointerUp),this.currentGuizmo&&(this.currentGuizmo.geometry.computeBoundingSphere(),this.currentGuizmo.geometry.computeBoundingBox()),this.dispatchEvent({type:"mouseup",index:this.cacheConfigIndex,config:this.config,last:this.currentIndex===this.config.curves.length,object:this.object,operate:this.currentGuizmo===this.anchorGizmo?"anchor":this.currentGuizmo===this.moveGizmo?"move":"switch"})}};let g=f;i(g,"anchorMaterial",new r.PointsMaterial({map:I,transparent:!0,depthFunc:r.AlwaysDepth,alphaTest:.01,sizeAttenuation:!1,size:15})),i(g,"moveMaterial",new r.PointsMaterial({map:C,transparent:!0,depthFunc:r.AlwaysDepth,alphaTest:.01,sizeAttenuation:!1,size:15})),i(g,"switchMaterial",new r.PointsMaterial({map:D,transparent:!0,depthFunc:r.AlwaysDepth,alphaTest:.01,sizeAttenuation:!1,size:15}));const G=P.transPkgName(z),x=function(e={}){let y,s;return{name:G,deps:[...d.PLUGINS,d.POINTER_MANAGER_PLUGIN],install(t){const a=new g(t.camera,t.dom);e.raycaster&&e.raycaster.params&&Object.assign(a.raycaster.params,e.raycaster.params),a.use(t.pointerManager),t.pathSupportControls=a,s=n=>{a.setDom(n.dom)},y=n=>{a.setCamera(n.camera)},t.addEventListener(m.ENGINE_EVENT.SETDOM,s),t.addEventListener(m.ENGINE_EVENT.SETCAMERA,y)},dispose(t){t.removeEventListener(m.ENGINE_EVENT.SETDOM,s),t.removeEventListener(m.ENGINE_EVENT.SETCAMERA,y),t.pathSupportControls.disconnect().dispose(),delete t.pathSupportControls}}};o.PATH_SUPPORT_CONTROLS_PLUGIN=G,o.PathSupportControlsPlugin=x,Object.defineProperties(o,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
