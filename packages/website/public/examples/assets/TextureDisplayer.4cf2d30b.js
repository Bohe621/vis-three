var S=Object.defineProperty;var L=(d,e,t)=>e in d?S(d,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):d[e]=t;var s=(d,e,t)=>(L(d,typeof e!="symbol"?e+"":e,t),t);import{P as x,M as w,B as j,a as y,A as m,ac as P,W as p,bp as f,Z as g,c as b,h as l,s as z,L as M,b as R,at as v}from"./three.a7f96461.js";const a=new x("rgb(255, 255, 255)",.5,200,1);a.position.set(-30,5,20);a.castShadow=!0;const h=new w(new j(80,2,80),new y({color:"rgb(255, 255, 255)"}));h.position.set(0,-11,0);h.receiveShadow=!0;h.castShadow=!0;const o=class{constructor(e){s(this,"material");s(this,"dom");s(this,"renderer");s(this,"scene");s(this,"camera");s(this,"object");const t=new p({antialias:!0,preserveDrawingBuffer:!0});t.setPixelRatio(window.devicePixelRatio),t.setClearColor("rgb(150, 150, 150)"),t.shadowMap.enabled=!0,t.shadowMap.type=f;const i=new g,n=new b(45,window.innerWidth/window.innerHeight,1,500);n.position.set(0,0,35),n.up.x=0,n.up.y=1,n.up.z=0,n.lookAt(new l(0,0,0)),i.add(o.ambientLight),i.add(o.pointLight),i.add(o.plane),this.scene=i,this.renderer=t,this.camera=n,this.object=new z,e!=null&&e.material&&this.setMaterial(e.material),e!=null&&e.dom&&this.setDom(e.dom)}setMaterial(e){if(this.scene.remove(this.object),this.material=e,e.type.includes("Mesh"))this.object=new w(o.geometry,e);else if(e.type.includes("Line"))this.object=new M(o.geometry,e);else if(e.type.includes("Ponits"))this.object=new R(o.geometry,e);else if(e.type.includes("Sprite"))this.object=new v(e);else return console.warn(`material displayer can not support this type material: '${e.type}'`),this;return this.object.castShadow=!0,this.object.receiveShadow=!0,this.scene.add(this.object),this}setDom(e){return this.dom=e,this.setSize(),e.appendChild(this.renderer.domElement),this}setSize(e,t){if(e&&t)this.camera.aspect=e/t,this.camera.updateProjectionMatrix(),this.renderer.setSize(e,t,!0);else{if(!this.dom)return console.warn("material displayer must set dom before setSize with empty parameters"),this;const i=this.dom;this.camera.aspect=i.offsetWidth/i.offsetHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(i.offsetWidth,i.offsetHeight,!0)}return this}render(){this.renderer.render(this.scene,this.camera)}getDataURL(e){return this.renderer.domElement.toDataURL(e||"image/png")}dispose(){this.renderer.dispose()}};let r=o;s(r,"ambientLight",new m("rgb(255, 255, 255)",.7)),s(r,"pointLight",a),s(r,"geometry",new P(10,12,12)),s(r,"plane",h),s(r,"dispose",()=>{o.geometry.dispose(),o.plane.geometry.dispose()});const u=class{constructor(e){s(this,"dom");s(this,"texture");s(this,"renderer");s(this,"scene");s(this,"camera");const t=new p({antialias:!0,preserveDrawingBuffer:!0});t.setPixelRatio(window.devicePixelRatio),t.setClearColor("rgb(150, 150, 150)"),t.shadowMap.enabled=!0,t.shadowMap.type=f;const i=new g,n=new b(45,window.innerWidth/window.innerHeight,1,500);n.position.set(0,0,35),n.up.x=0,n.up.y=1,n.up.z=0,n.lookAt(new l(0,0,0)),i.add(u.ambientLight),this.scene=i,this.renderer=t,this.camera=n,e!=null&&e.texture&&this.setTexture(e.texture),e!=null&&e.dom&&this.setDom(e.dom)}setTexture(e){return this.scene.background=e,this}setDom(e){return this.dom=e,this.setSize(),e.appendChild(this.renderer.domElement),this}setSize(e,t){if(e&&t)this.camera.aspect=e/t,this.camera.updateProjectionMatrix(),this.renderer.setSize(e,t,!0);else{if(!this.dom)return console.warn("texture displayer must set dom before setSize with empty parameters"),this;const i=this.dom;this.camera.aspect=i.offsetWidth/i.offsetHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(i.offsetWidth,i.offsetHeight,!0)}return this}render(){this.renderer.render(this.scene,this.camera)}getDataURL(e){return this.renderer.domElement.toDataURL(e||"image/png")}dispose(){this.renderer.dispose()}};let c=u;s(c,"ambientLight",new m("rgb(255, 255, 255)",1));export{r as M,c as T};
